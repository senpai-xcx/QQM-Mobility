Model run by Rowan's PC using Apollo 0.3.1 on R 4.3.1 for Windows.
Please acknowledge the use of Apollo by citing Hess & Palma (2019)
  DOI 10.1016/j.jocm.2019.100170
  www.ApolloChoiceModelling.com

Model name                                  : MNL_SP
Model description                           : Simple MNL model on PT guarantee choice
Model run at                                : 2024-01-09 21:07:22.796962
Estimation method                           : bgw
Model diagnosis                             : Relative function convergence
Optimisation diagnosis                      : Maximum found
     hessian properties                     : Negative definite
     maximum eigenvalue                     : -240.85169
     reciprocal of condition number         : 7.35176e-05
Number of individuals                       : 235
Number of rows in database                  : 1175
Number of modelled outcomes                 : 1175

Number of cores used                        :  1 
Model without mixing

LL(start)                                   : -814.45
LL at equal shares, LL(0)                   : -814.45
LL at observed shares, LL(C)                : -814.18
LL(final)                                   : -722.29
Rho-squared vs equal shares                  :  0.1132 
Adj.Rho-squared vs equal shares              :  0.1046 
Rho-squared vs observed shares               :  0.1129 
Adj.Rho-squared vs observed shares           :  0.1055 
AIC                                         :  1458.58 
BIC                                         :  1494.07 

Estimated parameters                        : 7
Time taken (hh:mm:ss)                       :  00:00:2.23 
     pre-estimation                         :  00:00:0.83 
     estimation                             :  00:00:0.89 
          initial estimation                :  00:00:0.86 
          estimation after rescaling        :  00:00:0.04 
     post-estimation                        :  00:00:0.51 
Iterations                                  :  7  
     initial estimation                     :  6 
     estimation after rescaling             :  1 

Unconstrained optimisation.

Estimates:
                  Estimate        s.e.   t.rat.(0)    Rob.s.e. Rob.t.rat.(0)
b_spatial         0.018527    0.004045       4.580    0.004165         4.448
b_temporal        0.082388    0.011282       7.302    0.011074         7.440
b_drtpattern      0.214546    0.064354       3.334    0.071336         3.008
b_waiting        -0.008663    0.001076      -8.048    0.001140        -7.602
b_discount        0.004242    0.001212       3.499    0.001259         3.369
b_compensation    0.085712    0.045371       1.889    0.043608         1.966
b_price          -0.011977    0.001012     -11.832    0.001097       -10.919


Overview of choices for MNL model component :
                                    alt1    alt2
Times available                  1175.00 1175.00
Times chosen                      600.00  575.00
Percentage chosen overall          51.06   48.94
Percentage chosen when available   51.06   48.94



Classical covariance matrix:
                    b_spatial     b_temporal   b_drtpattern      b_waiting     b_discount b_compensation
b_spatial           1.636e-05      1.099e-05      4.240e-05     -8.023e-07      4.738e-07      5.568e-06
b_temporal          1.099e-05     1.2729e-04      7.920e-05     -4.455e-06      3.049e-06      8.991e-05
b_drtpattern        4.240e-05      7.920e-05       0.004141     -4.375e-06      6.136e-07     1.3123e-04
b_waiting          -8.023e-07     -4.455e-06     -4.375e-06      1.159e-06     -3.675e-07     -6.748e-06
b_discount          4.738e-07      3.049e-06      6.136e-07     -3.675e-07      1.470e-06      7.035e-06
b_compensation      5.568e-06      8.991e-05     1.3123e-04     -6.748e-06      7.035e-06       0.002059
b_price            -1.439e-06     -7.112e-06     -9.005e-06      6.868e-07     -4.548e-07     -1.201e-05
                      b_price
b_spatial          -1.439e-06
b_temporal         -7.112e-06
b_drtpattern       -9.005e-06
b_waiting           6.868e-07
b_discount         -4.548e-07
b_compensation     -1.201e-05
b_price             1.025e-06

Robust covariance matrix:
                    b_spatial     b_temporal   b_drtpattern      b_waiting     b_discount b_compensation
b_spatial           1.735e-05      1.021e-05      5.329e-05     -8.448e-07      6.842e-07      8.282e-06
b_temporal          1.021e-05     1.2264e-04      9.515e-05     -3.600e-06      3.363e-06      9.513e-05
b_drtpattern        5.329e-05      9.515e-05       0.005089      1.920e-06     -1.069e-06    -1.1936e-04
b_waiting          -8.448e-07     -3.600e-06      1.920e-06      1.299e-06     -5.437e-07     -5.660e-06
b_discount          6.842e-07      3.363e-06     -1.069e-06     -5.437e-07      1.585e-06      3.738e-06
b_compensation      8.282e-06      9.513e-05    -1.1936e-04     -5.660e-06      3.738e-06       0.001902
b_price            -1.842e-06     -6.464e-06     -6.234e-06      6.388e-07     -5.325e-07     -1.145e-05
                      b_price
b_spatial          -1.842e-06
b_temporal         -6.464e-06
b_drtpattern       -6.234e-06
b_waiting           6.388e-07
b_discount         -5.325e-07
b_compensation     -1.145e-05
b_price             1.203e-06

Classical correlation matrix:
                    b_spatial     b_temporal   b_drtpattern      b_waiting     b_discount b_compensation
b_spatial             1.00000         0.2408       0.162857       -0.18423       0.096610        0.03033
b_temporal            0.24084         1.0000       0.109076       -0.36683       0.222885        0.17565
b_drtpattern          0.16286         0.1091       1.000000       -0.06315       0.007865        0.04495
b_waiting            -0.18423        -0.3668      -0.063151        1.00000      -0.281580       -0.13816
b_discount            0.09661         0.2229       0.007865       -0.28158       1.000000        0.12790
b_compensation        0.03033         0.1756       0.044945       -0.13816       0.127900        1.00000
b_price              -0.35153        -0.6228      -0.138227        0.63025      -0.370590       -0.26143
                      b_price
b_spatial             -0.3515
b_temporal            -0.6228
b_drtpattern          -0.1382
b_waiting              0.6302
b_discount            -0.3706
b_compensation        -0.2614
b_price                1.0000

Robust correlation matrix:
                    b_spatial     b_temporal   b_drtpattern      b_waiting     b_discount b_compensation
b_spatial             1.00000         0.2213        0.17935       -0.17799        0.13049        0.04560
b_temporal            0.22134         1.0000        0.12045       -0.28524        0.24120        0.19698
b_drtpattern          0.17935         0.1204        1.00000        0.02362       -0.01190       -0.03837
b_waiting            -0.17799        -0.2852        0.02362        1.00000       -0.37898       -0.11390
b_discount            0.13049         0.2412       -0.01190       -0.37898        1.00000        0.06810
b_compensation        0.04560         0.1970       -0.03837       -0.11390        0.06810        1.00000
b_price              -0.40320        -0.5322       -0.07967        0.51109       -0.38559       -0.23945
                      b_price
b_spatial            -0.40320
b_temporal           -0.53217
b_drtpattern         -0.07967
b_waiting             0.51109
b_discount           -0.38559
b_compensation       -0.23945
b_price               1.00000

 20 worst outliers in terms of lowest average per choice prediction:
   ID Avg prob per choice
 1496           0.2901733
 1572           0.3071589
 1907           0.3150659
 2344           0.3553269
 2529           0.3677813
 2899           0.3682085
 2011           0.3698911
 2279           0.3755461
 2635           0.3818971
 2510           0.3852951
 2917           0.3908650
 3243           0.3913876
 2592           0.3964745
 3221           0.4043293
 2828           0.4069691
 2458           0.4070030
 3025           0.4157677
 1986           0.4186486
 2186           0.4206300
 2754           0.4270479

Changes in parameter estimates from starting values:
                   Initial    Estimate  Difference
b_spatial            0.000    0.018527    0.018527
b_temporal           0.000    0.082388    0.082388
b_drtpattern         0.000    0.214546    0.214546
b_waiting            0.000   -0.008663   -0.008663
b_discount           0.000    0.004242    0.004242
b_compensation       0.000    0.085712    0.085712
b_price              0.000   -0.011977   -0.011977

Settings and functions used in model definition:

apollo_control
--------------
                       Value                                    
modelName              "MNL_SP"                                 
modelDescr             "Simple MNL model on PT guarantee choice"
indivID                "RID"                                    
outputDirectory        "output/"                                
debug                  "FALSE"                                  
nCores                 "1"                                      
workInLogs             "FALSE"                                  
seed                   "13"                                     
mixing                 "FALSE"                                  
HB                     "FALSE"                                  
noValidation           "FALSE"                                  
noDiagnostics          "FALSE"                                  
calculateLLC           "TRUE"                                   
panelData              "TRUE"                                   
analyticGrad           "TRUE"                                   
analyticGrad_manualSet "FALSE"                                  
overridePanel          "FALSE"                                  
preventOverridePanel   "FALSE"                                  
noModification         "FALSE"                                  

Hessian routines attempted
--------------------------
numerical jacobian of LL analytical gradient

Scaling used in computing Hessian
---------------------------------
                     Value
b_spatial      0.018526581
b_temporal     0.082387759
b_drtpattern   0.214545927
b_waiting      0.008663195
b_discount     0.004241539
b_compensation 0.085711814
b_price        0.011976849


apollo_probabilities
----------------------
function(apollo_beta, apollo_inputs, functionality="estimate"){
  
  ### Attach inputs and detach after function exit
  apollo_attach(apollo_beta, apollo_inputs)
  on.exit(apollo_detach(apollo_beta, apollo_inputs))
  
  ### Create list of probabilities P
  P = list()
  
  ### List of utilities: these must use the same names as in mnl_settings, order is irrelevant
  V = list()
  
  V[["alt1"]]  = b_spatial  * Spatial_1 + b_temporal * Temporal_1 + b_drtpattern * DRTPattern_1 +
    b_waiting * Waitingtime_1 + b_discount * Discount_1 + b_compensation * Compensation_1 + b_price * Price_1
  V[["alt2"]]  = b_spatial  * Spatial_2 + b_temporal * Temporal_2 + b_drtpattern * DRTPattern_2 +
    b_waiting * Waitingtime_2 + b_discount * Discount_2 + b_compensation * Compensation_2 + b_price * Price_2
  
  # V[["alt1"]]  = b_price*(b_spatial  * Spatial_1 + b_temporal * Temporal_1 + b_drtpattern * DRTPattern_1 +
  #   b_waiting * Waitingtime_1 + b_discount * Discount_1 + b_compensation * Compensation_1 + Price_1)
  # V[["alt2"]]  = b_price*(b_spatial  * Spatial_2 + b_temporal * Temporal_2 + b_drtpattern * DRTPattern_2 +
  #   b_waiting * Waitingtime_2 + b_discount * Discount_2 + b_compensation * Compensation_2 + Price_2)
  # 
  
  #  V[["alt1"]]  = asc_1 + b_spatial  * Spatial_1 + b_temporal17 * (Temporal_1==17) +b_temporal24 * (Temporal_1==24) + b_drtpattern * DRTPattern_1 +
  #    b_waiting * Waitingtime_1 + b_discount * Discount_1 + b_comp_improved * (Compensation_1==2) + b_comp_generous * (Compensation_1==3) + b_price * Price_1
  #  V[["alt2"]]  = b_spatial  * Spatial_2 + + b_temporal17 * (Temporal_2==17) +b_temporal24 * (Temporal_2==24) + + b_drtpattern * DRTPattern_2 +
  #    b_waiting * Waitingtime_2 + b_discount * Discount_2 + b_comp_improved * (Compensation_2==2) + b_comp_generous * (Compensation_2==3) + b_price * Price_2
  
  
  ### Define settings for MNL model component
  mnl_settings = list(
    alternatives  = c(alt1=1, alt2=2), 
    avail         = 1, 
    choiceVar     = CHOICE,
    utilities     = V
  )
  
  ### Compute probabilities using MNL model
  P[["model"]] = apollo_mnl(mnl_settings, functionality)
  
  ### Take product across observation for same individual
  P = apollo_panelProd(P, apollo_inputs, functionality)
  
  ### Prepare and return outputs of function
  P = apollo_prepareProb(P, apollo_inputs, functionality)
  return(P)
}
