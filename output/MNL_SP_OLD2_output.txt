Model run by juliagershenzon using Apollo 0.3.1 on R 4.3.1 for Darwin.
Please acknowledge the use of Apollo by citing Hess & Palma (2019)
  DOI 10.1016/j.jocm.2019.100170
  www.ApolloChoiceModelling.com

Model name                                  : MNL_SP
Model description                           : Simple MNL model on PT guarantee choice
Model run at                                : 2023-11-26 10:17:34.158462
Estimation method                           : bgw
Model diagnosis                             : X- and relative function convergence
Optimisation diagnosis                      : Maximum found
     hessian properties                     : Negative definite
     maximum eigenvalue                     : -1297.033826
     reciprocal of condition number         : 7.50612e-05
Number of individuals                       : 1200
Number of rows in database                  : 6000
Number of modelled outcomes                 : 6000

Number of cores used                        :  1 
Model without mixing

LL(start)                                   : -4158.88
LL at equal shares, LL(0)                   : -4158.88
LL at observed shares, LL(C)                : -4156.91
LL(final)                                   : -3767.85
Rho-squared vs equal shares                  :  0.094 
Adj.Rho-squared vs equal shares              :  0.0923 
Rho-squared vs observed shares               :  0.0936 
Adj.Rho-squared vs observed shares           :  0.0921 
AIC                                         :  7549.7 
BIC                                         :  7596.59 

Estimated parameters                        : 7
Time taken (hh:mm:ss)                       :  00:00:2.76 
     pre-estimation                         :  00:00:1.1 
     estimation                             :  00:00:0.48 
          initial estimation                :  00:00:0.4 
          estimation after rescaling        :  00:00:0.07 
     post-estimation                        :  00:00:1.18 
Iterations                                  :  9  
     initial estimation                     :  7 
     estimation after rescaling             :  2 

Unconstrained optimisation.

Estimates:
                  Estimate        s.e.   t.rat.(0)    Rob.s.e. Rob.t.rat.(0)
b_spatial         0.014898    0.001750       8.512    0.001759         8.468
b_temporal        0.071885    0.004794      14.996    0.004881        14.729
b_drtpattern      0.147377    0.027759       5.309    0.029464         5.002
b_waiting        -0.005937  4.5818e-04     -12.957  4.8925e-04       -12.134
b_discount        0.003098  5.2971e-04       5.849  5.3128e-04         5.831
b_compensation    0.039780    0.019897       1.999    0.019685         2.021
b_price          -0.010204  4.1335e-04     -24.686  4.6238e-04       -22.068


Overview of choices for MNL model component :
                                    alt1    alt2
Times available                  6000.00 6000.00
Times chosen                     3077.00 2923.00
Percentage chosen overall          51.28   48.72
Percentage chosen when available   51.28   48.72



Classical covariance matrix:
                    b_spatial     b_temporal   b_drtpattern      b_waiting     b_discount
b_spatial           3.063e-06      1.720e-06      4.607e-06     -1.548e-07      8.644e-08
b_temporal          1.720e-06      2.298e-05      1.116e-05     -7.212e-07      5.548e-07
b_drtpattern        4.607e-06      1.116e-05     7.7059e-04     -3.962e-07      3.724e-07
b_waiting          -1.548e-07     -7.212e-07     -3.962e-07      2.099e-07     -5.026e-08
b_discount          8.644e-08      5.548e-07      3.724e-07     -5.026e-08      2.806e-07
b_compensation      1.173e-06      1.472e-05      8.560e-06     -1.105e-06      1.046e-06
b_price            -2.368e-07     -1.187e-06     -8.227e-07      1.129e-07     -7.528e-08
               b_compensation        b_price
b_spatial           1.173e-06     -2.368e-07
b_temporal          1.472e-05     -1.187e-06
b_drtpattern        8.560e-06     -8.227e-07
b_waiting          -1.105e-06      1.129e-07
b_discount          1.046e-06     -7.528e-08
b_compensation     3.9590e-04     -1.820e-06
b_price            -1.820e-06      1.709e-07

Robust covariance matrix:
                    b_spatial     b_temporal   b_drtpattern      b_waiting     b_discount
b_spatial           3.095e-06      1.635e-06      3.272e-06     -1.637e-07      7.982e-08
b_temporal          1.635e-06      2.382e-05      9.983e-06     -6.621e-07      5.907e-07
b_drtpattern        3.272e-06      9.983e-06     8.6815e-04     -5.675e-07      1.030e-06
b_waiting          -1.637e-07     -6.621e-07     -5.675e-07      2.394e-07     -6.646e-08
b_discount          7.982e-08      5.907e-07      1.030e-06     -6.646e-08      2.823e-07
b_compensation      1.516e-06      1.839e-05      1.128e-05     -1.251e-06      9.855e-07
b_price            -2.490e-07     -1.103e-06     -7.947e-07      1.173e-07     -7.282e-08
               b_compensation        b_price
b_spatial           1.516e-06     -2.490e-07
b_temporal          1.839e-05     -1.103e-06
b_drtpattern        1.128e-05     -7.947e-07
b_waiting          -1.251e-06      1.173e-07
b_discount          9.855e-07     -7.282e-08
b_compensation     3.8748e-04     -2.000e-06
b_price            -2.000e-06      2.138e-07

Classical correlation matrix:
                    b_spatial     b_temporal   b_drtpattern      b_waiting     b_discount
b_spatial             1.00000        0.20500        0.09481       -0.19298        0.09324
b_temporal            0.20500        1.00000        0.08390       -0.32837        0.21851
b_drtpattern          0.09481        0.08390        1.00000       -0.03115        0.02532
b_waiting            -0.19298       -0.32837       -0.03115        1.00000       -0.20707
b_discount            0.09324        0.21851        0.02532       -0.20707        1.00000
b_compensation        0.03368        0.15434        0.01550       -0.12118        0.09924
b_price              -0.32727       -0.59909       -0.07170        0.59589       -0.34381
               b_compensation        b_price
b_spatial             0.03368       -0.32727
b_temporal            0.15434       -0.59909
b_drtpattern          0.01550       -0.07170
b_waiting            -0.12118        0.59589
b_discount            0.09924       -0.34381
b_compensation        1.00000       -0.22133
b_price              -0.22133        1.00000

Robust correlation matrix:
                    b_spatial     b_temporal   b_drtpattern      b_waiting     b_discount
b_spatial             1.00000        0.19041        0.06311       -0.19014        0.08540
b_temporal            0.19041        1.00000        0.06942       -0.27730        0.22780
b_drtpattern          0.06311        0.06942        1.00000       -0.03937        0.06580
b_waiting            -0.19014       -0.27730       -0.03937        1.00000       -0.25568
b_discount            0.08540        0.22780        0.06580       -0.25568        1.00000
b_compensation        0.04379        0.19143        0.01944       -0.12992        0.09423
b_price              -0.30610       -0.48898       -0.05833        0.51862       -0.29646
               b_compensation        b_price
b_spatial             0.04379       -0.30610
b_temporal            0.19143       -0.48898
b_drtpattern          0.01944       -0.05833
b_waiting            -0.12992        0.51862
b_discount            0.09423       -0.29646
b_compensation        1.00000       -0.21973
b_price              -0.21973        1.00000

 20 worst outliers in terms of lowest average per choice prediction:
   ID Avg prob per choice
 1597           0.2349198
 2058           0.2945460
 2951           0.3033465
 1496           0.3106894
 1520           0.3108881
 1540           0.3161268
 2642           0.3175402
 1616           0.3258350
 2322           0.3279938
 1613           0.3288274
 1710           0.3320695
 1907           0.3353333
 1517           0.3392753
 2178           0.3465597
 1984           0.3481671
 2944           0.3511155
 2795           0.3513764
 1913           0.3522964
 1522           0.3544789
 2344           0.3564056

Changes in parameter estimates from starting values:
                   Initial    Estimate  Difference
b_spatial            0.000    0.014898    0.014898
b_temporal           0.000    0.071885    0.071885
b_drtpattern         0.000    0.147377    0.147377
b_waiting            0.000   -0.005937   -0.005937
b_discount           0.000    0.003098    0.003098
b_compensation       0.000    0.039780    0.039780
b_price              0.000   -0.010204   -0.010204

Settings and functions used in model definition:

apollo_control
--------------
                       Value                                    
modelName              "MNL_SP"                                 
modelDescr             "Simple MNL model on PT guarantee choice"
indivID                "RID"                                    
outputDirectory        "output/"                                
debug                  "FALSE"                                  
nCores                 "1"                                      
workInLogs             "FALSE"                                  
seed                   "13"                                     
mixing                 "FALSE"                                  
HB                     "FALSE"                                  
noValidation           "FALSE"                                  
noDiagnostics          "FALSE"                                  
calculateLLC           "TRUE"                                   
panelData              "TRUE"                                   
analyticGrad           "TRUE"                                   
analyticGrad_manualSet "FALSE"                                  
overridePanel          "FALSE"                                  
preventOverridePanel   "FALSE"                                  
noModification         "FALSE"                                  

Hessian routines attempted
--------------------------
numerical jacobian of LL analytical gradient

Scaling used in computing Hessian
---------------------------------
                     Value
b_spatial      0.014897504
b_temporal     0.071885289
b_drtpattern   0.147377343
b_waiting      0.005936535
b_discount     0.003098126
b_compensation 0.039779595
b_price        0.010203889


apollo_probabilities
----------------------
function(apollo_beta, apollo_inputs, functionality="estimate"){
  
  ### Attach inputs and detach after function exit
  apollo_attach(apollo_beta, apollo_inputs)
  on.exit(apollo_detach(apollo_beta, apollo_inputs))
  
  ### Create list of probabilities P
  P = list()
  
  ### List of utilities: these must use the same names as in mnl_settings, order is irrelevant
  V = list()
  
   V[["alt1"]]  = b_spatial  * Spatial_1 + b_temporal * Temporal_1 + b_drtpattern * DRTPattern_1 +
     b_waiting * Waitingtime_1 + b_discount * Discount_1 + b_compensation * Compensation_1 + b_price * Price_1
   V[["alt2"]]  = b_spatial  * Spatial_2 + b_temporal * Temporal_2 + b_drtpattern * DRTPattern_2 +
     b_waiting * Waitingtime_2 + b_discount * Discount_2 + b_compensation * Compensation_2 + b_price * Price_2

   # V[["alt1"]]  = b_price*(b_spatial  * Spatial_1 + b_temporal * Temporal_1 + b_drtpattern * DRTPattern_1 +
   #   b_waiting * Waitingtime_1 + b_discount * Discount_1 + b_compensation * Compensation_1 + Price_1)
   # V[["alt2"]]  = b_price*(b_spatial  * Spatial_2 + b_temporal * Temporal_2 + b_drtpattern * DRTPattern_2 +
   #   b_waiting * Waitingtime_2 + b_discount * Discount_2 + b_compensation * Compensation_2 + Price_2)
   # 
   
#  V[["alt1"]]  = asc_1 + b_spatial  * Spatial_1 + b_temporal17 * (Temporal_1==17) +b_temporal24 * (Temporal_1==24) + b_drtpattern * DRTPattern_1 +
#    b_waiting * Waitingtime_1 + b_discount * Discount_1 + b_comp_improved * (Compensation_1==2) + b_comp_generous * (Compensation_1==3) + b_price * Price_1
#  V[["alt2"]]  = b_spatial  * Spatial_2 + + b_temporal17 * (Temporal_2==17) +b_temporal24 * (Temporal_2==24) + + b_drtpattern * DRTPattern_2 +
#    b_waiting * Waitingtime_2 + b_discount * Discount_2 + b_comp_improved * (Compensation_2==2) + b_comp_generous * (Compensation_2==3) + b_price * Price_2
  
                      
  ### Define settings for MNL model component
  mnl_settings = list(
    alternatives  = c(alt1=1, alt2=2), 
    avail         = 1, 
    choiceVar     = CHOICE,
    utilities     = V
  )
  
  ### Compute probabilities using MNL model
  P[["model"]] = apollo_mnl(mnl_settings, functionality)
  
  ### Take product across observation for same individual
  P = apollo_panelProd(P, apollo_inputs, functionality)
  
  ### Prepare and return outputs of function
  P = apollo_prepareProb(P, apollo_inputs, functionality)
  return(P)
}
