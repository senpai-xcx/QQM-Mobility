Model run by Rowan's PC using Apollo 0.3.1 on R 4.3.1 for Windows.
Please acknowledge the use of Apollo by citing Hess & Palma (2019)
  DOI 10.1016/j.jocm.2019.100170
  www.ApolloChoiceModelling.com

Model name                                  : MNL_SP
Model description                           : Simple MNL model on PT guarantee choice
Model run at                                : 2024-01-09 18:00:27.373527
Estimation method                           : bgw
Model diagnosis                             : Relative function convergence
Optimisation diagnosis                      : Maximum found
     hessian properties                     : Negative definite
     maximum eigenvalue                     : -78.183446
     reciprocal of condition number         : 7.47733e-05
Number of individuals                       : 81
Number of rows in database                  : 405
Number of modelled outcomes                 : 405

Number of cores used                        :  1 
Model without mixing

LL(start)                                   : -280.72
LL at equal shares, LL(0)                   : -280.72
LL at observed shares, LL(C)                : -280.28
LL(final)                                   : -242.93
Rho-squared vs equal shares                  :  0.1346 
Adj.Rho-squared vs equal shares              :  0.1097 
Rho-squared vs observed shares               :  0.1333 
Adj.Rho-squared vs observed shares           :  0.1119 
AIC                                         :  499.86 
BIC                                         :  527.88 

Estimated parameters                        : 7
Time taken (hh:mm:ss)                       :  00:00:1.4 
     pre-estimation                         :  00:00:0.5 
     estimation                             :  00:00:0.51 
          initial estimation                :  00:00:0.48 
          estimation after rescaling        :  00:00:0.03 
     post-estimation                        :  00:00:0.39 
Iterations                                  :  8  
     initial estimation                     :  7 
     estimation after rescaling             :  1 

Unconstrained optimisation.

Estimates:
                  Estimate        s.e.   t.rat.(0)    Rob.s.e. Rob.t.rat.(0)
b_spatial         0.010710    0.007006       1.529    0.007365         1.454
b_temporal        0.057995    0.018974       3.057    0.018239         3.180
b_drtpattern      0.271604    0.112284       2.419    0.124148         2.188
b_waiting        -0.008204    0.001856      -4.420    0.001797        -4.566
b_discount        0.002953    0.002239       1.319    0.002338         1.263
b_compensation    0.231795    0.080132       2.893    0.081775         2.835
b_price          -0.012399    0.001709      -7.257    0.001705        -7.273


Overview of choices for MNL model component :
                                   alt1   alt2
Times available                  405.00 405.00
Times chosen                     212.00 193.00
Percentage chosen overall         52.35  47.65
Percentage chosen when available  52.35  47.65



Classical covariance matrix:
                    b_spatial     b_temporal   b_drtpattern      b_waiting     b_discount b_compensation
b_spatial           4.909e-05      2.452e-05      5.812e-05     -2.218e-06      1.306e-06     -5.488e-05
b_temporal          2.452e-05     3.6000e-04     3.4205e-04     -9.438e-06      4.552e-06     2.7669e-04
b_drtpattern        5.812e-05     3.4205e-04       0.012608     -1.303e-05     -8.184e-06       0.001042
b_waiting          -2.218e-06     -9.438e-06     -1.303e-05      3.446e-06     -1.425e-06     -2.489e-05
b_discount          1.306e-06      4.552e-06     -8.184e-06     -1.425e-06      5.013e-06      2.648e-05
b_compensation     -5.488e-05     2.7669e-04       0.001042     -2.489e-05      2.648e-05       0.006421
b_price            -3.463e-06     -1.837e-05     -3.413e-05      1.887e-06     -1.392e-06     -4.346e-05
                      b_price
b_spatial          -3.463e-06
b_temporal         -1.837e-05
b_drtpattern       -3.413e-05
b_waiting           1.887e-06
b_discount         -1.392e-06
b_compensation     -4.346e-05
b_price             2.919e-06

Robust covariance matrix:
                    b_spatial     b_temporal   b_drtpattern      b_waiting     b_discount b_compensation
b_spatial           5.424e-05      1.211e-05      8.158e-05     -2.386e-06      7.840e-07    -1.1958e-04
b_temporal          1.211e-05     3.3265e-04     2.9092e-04     -3.162e-06      1.077e-07     2.4556e-04
b_drtpattern        8.158e-05     2.9092e-04        0.01541      1.264e-05     -2.038e-05     7.7723e-04
b_waiting          -2.386e-06     -3.162e-06      1.264e-05      3.228e-06     -1.867e-06     -1.904e-05
b_discount          7.840e-07      1.077e-07     -2.038e-05     -1.867e-06      5.467e-06     -1.265e-05
b_compensation    -1.1958e-04     2.4556e-04     7.7723e-04     -1.904e-05     -1.265e-05       0.006687
b_price            -3.550e-06     -1.425e-05     -1.227e-05      1.487e-06     -1.036e-06     -3.523e-05
                      b_price
b_spatial          -3.550e-06
b_temporal         -1.425e-05
b_drtpattern       -1.227e-05
b_waiting           1.487e-06
b_discount         -1.036e-06
b_compensation     -3.523e-05
b_price             2.906e-06

Classical correlation matrix:
                    b_spatial     b_temporal   b_drtpattern      b_waiting     b_discount b_compensation
b_spatial             1.00000         0.1845        0.07388       -0.17054        0.08328       -0.09775
b_temporal            0.18447         1.0000        0.16055       -0.26798        0.10716        0.18198
b_drtpattern          0.07388         0.1606        1.00000       -0.06250       -0.03255        0.11578
b_waiting            -0.17054        -0.2680       -0.06250        1.00000       -0.34295       -0.16731
b_discount            0.08328         0.1072       -0.03255       -0.34295        1.00000        0.14759
b_compensation       -0.09775         0.1820        0.11578       -0.16731        0.14759        1.00000
b_price              -0.28929        -0.5665       -0.17789        0.59498       -0.36386       -0.31745
                      b_price
b_spatial             -0.2893
b_temporal            -0.5665
b_drtpattern          -0.1779
b_waiting              0.5950
b_discount            -0.3639
b_compensation        -0.3174
b_price                1.0000

Robust correlation matrix:
                    b_spatial     b_temporal   b_drtpattern      b_waiting     b_discount b_compensation
b_spatial             1.00000       0.090161        0.08923       -0.18027       0.045523       -0.19855
b_temporal            0.09016       1.000000        0.12848       -0.09648       0.002525        0.16465
b_drtpattern          0.08923       0.128481        1.00000        0.05668      -0.070219        0.07656
b_waiting            -0.18027      -0.096479        0.05668        1.00000      -0.444342       -0.12961
b_discount            0.04552       0.002525       -0.07022       -0.44434       1.000000       -0.06617
b_compensation       -0.19855       0.164645        0.07656       -0.12961      -0.066167        1.00000
b_price              -0.28277      -0.458342       -0.05797        0.48541      -0.259885       -0.25267
                      b_price
b_spatial            -0.28277
b_temporal           -0.45834
b_drtpattern         -0.05797
b_waiting             0.48541
b_discount           -0.25988
b_compensation       -0.25267
b_price               1.00000

 20 worst outliers in terms of lowest average per choice prediction:
   ID Avg prob per choice
 2364           0.3529932
 1901           0.3532666
 2279           0.3867666
 2216           0.3983940
 1814           0.4083356
 2656           0.4088244
 1914           0.4158523
 2606           0.4232950
 2368           0.4397167
 2186           0.4413270
 2487           0.4472200
 2828           0.4541844
 1585           0.4582218
 1634           0.4582987
 2281           0.4590330
 2783           0.4595903
 1778           0.4785958
 2159           0.4809523
 2130           0.4828446
 3290           0.4838990

Changes in parameter estimates from starting values:
                   Initial    Estimate  Difference
b_spatial            0.000    0.010710    0.010710
b_temporal           0.000    0.057995    0.057995
b_drtpattern         0.000    0.271604    0.271604
b_waiting            0.000   -0.008204   -0.008204
b_discount           0.000    0.002953    0.002953
b_compensation       0.000    0.231795    0.231795
b_price              0.000   -0.012399   -0.012399

Settings and functions used in model definition:

apollo_control
--------------
                       Value                                    
modelName              "MNL_SP"                                 
modelDescr             "Simple MNL model on PT guarantee choice"
indivID                "RID"                                    
outputDirectory        "output/"                                
debug                  "FALSE"                                  
nCores                 "1"                                      
workInLogs             "FALSE"                                  
seed                   "13"                                     
mixing                 "FALSE"                                  
HB                     "FALSE"                                  
noValidation           "FALSE"                                  
noDiagnostics          "FALSE"                                  
calculateLLC           "TRUE"                                   
panelData              "TRUE"                                   
analyticGrad           "TRUE"                                   
analyticGrad_manualSet "FALSE"                                  
overridePanel          "FALSE"                                  
preventOverridePanel   "FALSE"                                  
noModification         "FALSE"                                  

Hessian routines attempted
--------------------------
numerical jacobian of LL analytical gradient

Scaling used in computing Hessian
---------------------------------
                     Value
b_spatial      0.010710269
b_temporal     0.057994759
b_drtpattern   0.271604250
b_waiting      0.008204263
b_discount     0.002952784
b_compensation 0.231794996
b_price        0.012399449


apollo_probabilities
----------------------
function(apollo_beta, apollo_inputs, functionality="estimate"){
  
  ### Attach inputs and detach after function exit
  apollo_attach(apollo_beta, apollo_inputs)
  on.exit(apollo_detach(apollo_beta, apollo_inputs))
  
  ### Create list of probabilities P
  P = list()
  
  ### List of utilities: these must use the same names as in mnl_settings, order is irrelevant
  V = list()
  
  V[["alt1"]]  = b_spatial  * Spatial_1 + b_temporal * Temporal_1 + b_drtpattern * DRTPattern_1 +
    b_waiting * Waitingtime_1 + b_discount * Discount_1 + b_compensation * Compensation_1 + b_price * Price_1
  V[["alt2"]]  = b_spatial  * Spatial_2 + b_temporal * Temporal_2 + b_drtpattern * DRTPattern_2 +
    b_waiting * Waitingtime_2 + b_discount * Discount_2 + b_compensation * Compensation_2 + b_price * Price_2
  
  # V[["alt1"]]  = b_price*(b_spatial  * Spatial_1 + b_temporal * Temporal_1 + b_drtpattern * DRTPattern_1 +
  #   b_waiting * Waitingtime_1 + b_discount * Discount_1 + b_compensation * Compensation_1 + Price_1)
  # V[["alt2"]]  = b_price*(b_spatial  * Spatial_2 + b_temporal * Temporal_2 + b_drtpattern * DRTPattern_2 +
  #   b_waiting * Waitingtime_2 + b_discount * Discount_2 + b_compensation * Compensation_2 + Price_2)
  # 
  
  #  V[["alt1"]]  = asc_1 + b_spatial  * Spatial_1 + b_temporal17 * (Temporal_1==17) +b_temporal24 * (Temporal_1==24) + b_drtpattern * DRTPattern_1 +
  #    b_waiting * Waitingtime_1 + b_discount * Discount_1 + b_comp_improved * (Compensation_1==2) + b_comp_generous * (Compensation_1==3) + b_price * Price_1
  #  V[["alt2"]]  = b_spatial  * Spatial_2 + + b_temporal17 * (Temporal_2==17) +b_temporal24 * (Temporal_2==24) + + b_drtpattern * DRTPattern_2 +
  #    b_waiting * Waitingtime_2 + b_discount * Discount_2 + b_comp_improved * (Compensation_2==2) + b_comp_generous * (Compensation_2==3) + b_price * Price_2
  
  
  ### Define settings for MNL model component
  mnl_settings = list(
    alternatives  = c(alt1=1, alt2=2), 
    avail         = 1, 
    choiceVar     = CHOICE,
    utilities     = V
  )
  
  ### Compute probabilities using MNL model
  P[["model"]] = apollo_mnl(mnl_settings, functionality)
  
  ### Take product across observation for same individual
  P = apollo_panelProd(P, apollo_inputs, functionality)
  
  ### Prepare and return outputs of function
  P = apollo_prepareProb(P, apollo_inputs, functionality)
  return(P)
}
