Model run by Rowan's PC using Apollo 0.3.1 on R 4.3.1 for Windows.
Please acknowledge the use of Apollo by citing Hess & Palma (2019)
  DOI 10.1016/j.jocm.2019.100170
  www.ApolloChoiceModelling.com

Model name                                  : MNL_SP
Model description                           : Simple MNL model on PT guarantee choice
Model run at                                : 2024-01-09 17:45:07.51767
Estimation method                           : bgw
Model diagnosis                             : Relative function convergence
Optimisation diagnosis                      : Maximum found
     hessian properties                     : Negative definite
     maximum eigenvalue                     : -290.088091
     reciprocal of condition number         : 7.41988e-05
Number of individuals                       : 274
Number of rows in database                  : 1370
Number of modelled outcomes                 : 1370

Number of cores used                        :  1 
Model without mixing

LL(start)                                   : -949.61
LL at equal shares, LL(0)                   : -949.61
LL at observed shares, LL(C)                : -944.17
LL(final)                                   : -857.44
Rho-squared vs equal shares                  :  0.0971 
Adj.Rho-squared vs equal shares              :  0.0897 
Rho-squared vs observed shares               :  0.0919 
Adj.Rho-squared vs observed shares           :  0.0855 
AIC                                         :  1728.87 
BIC                                         :  1765.43 

Estimated parameters                        : 7
Time taken (hh:mm:ss)                       :  00:00:1.53 
     pre-estimation                         :  00:00:0.68 
     estimation                             :  00:00:0.17 
          initial estimation                :  00:00:0.12 
          estimation after rescaling        :  00:00:0.05 
     post-estimation                        :  00:00:0.69 
Iterations                                  :  7  
     initial estimation                     :  6 
     estimation after rescaling             :  1 

Unconstrained optimisation.

Estimates:
                  Estimate        s.e.   t.rat.(0)    Rob.s.e. Rob.t.rat.(0)
b_spatial         0.017742    0.003710       4.782    0.003864         4.591
b_temporal        0.078111    0.010157       7.690    0.010196         7.661
b_drtpattern      0.177239    0.058693       3.020    0.064126         2.764
b_waiting        -0.006867  9.7685e-04      -7.030  9.7558e-04        -7.039
b_discount        0.003665    0.001112       3.296    0.001007         3.640
b_compensation    0.054525    0.041924       1.301    0.038138         1.430
b_price          -0.010973  9.1391e-04     -12.006    0.001006       -10.910


Overview of choices for MNL model component :
                                    alt1    alt2
Times available                  1370.00 1370.00
Times chosen                      746.00  624.00
Percentage chosen overall          54.45   45.55
Percentage chosen when available   54.45   45.55



Classical covariance matrix:
                    b_spatial     b_temporal   b_drtpattern      b_waiting     b_discount b_compensation
b_spatial           1.377e-05      8.659e-06      3.111e-05     -6.363e-07      4.268e-07      8.880e-06
b_temporal          8.659e-06     1.0316e-04      5.186e-05     -3.894e-06      2.800e-06      6.568e-05
b_drtpattern        3.111e-05      5.186e-05       0.003445     -1.542e-06      4.501e-06      4.460e-05
b_waiting          -6.363e-07     -3.894e-06     -1.542e-06      9.542e-07     -2.661e-07     -6.817e-06
b_discount          4.268e-07      2.800e-06      4.501e-06     -2.661e-07      1.237e-06      5.976e-06
b_compensation      8.880e-06      6.568e-05      4.460e-05     -6.817e-06      5.976e-06       0.001758
b_price            -1.248e-06     -5.725e-06     -6.279e-06      5.561e-07     -3.862e-07     -9.833e-06
                      b_price
b_spatial          -1.248e-06
b_temporal         -5.725e-06
b_drtpattern       -6.279e-06
b_waiting           5.561e-07
b_discount         -3.862e-07
b_compensation     -9.833e-06
b_price             8.352e-07

Robust covariance matrix:
                    b_spatial     b_temporal   b_drtpattern      b_waiting     b_discount b_compensation
b_spatial           1.493e-05      8.053e-06      2.069e-05     -7.047e-07      5.863e-07      1.725e-05
b_temporal          8.053e-06     1.0396e-04      1.876e-05     -2.906e-06      2.460e-06      9.403e-05
b_drtpattern        2.069e-05      1.876e-05       0.004112      2.165e-06      3.511e-06    -1.7037e-04
b_waiting          -7.047e-07     -2.906e-06      2.165e-06      9.518e-07     -2.709e-07     -3.500e-06
b_discount          5.863e-07      2.460e-06      3.511e-06     -2.709e-07      1.013e-06      6.114e-06
b_compensation      1.725e-05      9.403e-05    -1.7037e-04     -3.500e-06      6.114e-06       0.001455
b_price            -1.532e-06     -4.875e-06     -9.270e-07      4.631e-07     -3.568e-07     -1.004e-05
                      b_price
b_spatial          -1.532e-06
b_temporal         -4.875e-06
b_drtpattern       -9.270e-07
b_waiting           4.631e-07
b_discount         -3.568e-07
b_compensation     -1.004e-05
b_price             1.012e-06

Classical correlation matrix:
                    b_spatial     b_temporal   b_drtpattern      b_waiting     b_discount b_compensation
b_spatial             1.00000        0.22977        0.14286       -0.17555        0.10345        0.05709
b_temporal            0.22977        1.00000        0.08699       -0.39251        0.24791        0.15426
b_drtpattern          0.14286        0.08699        1.00000       -0.02690        0.06897        0.01813
b_waiting            -0.17555       -0.39251       -0.02690        1.00000       -0.24494       -0.16646
b_discount            0.10345        0.24791        0.06897       -0.24494        1.00000        0.12819
b_compensation        0.05709        0.15426        0.01813       -0.16646        0.12819        1.00000
b_price              -0.36803       -0.61676       -0.11706        0.62291       -0.38001       -0.25663
                      b_price
b_spatial             -0.3680
b_temporal            -0.6168
b_drtpattern          -0.1171
b_waiting              0.6229
b_discount            -0.3800
b_compensation        -0.2566
b_price                1.0000

Robust correlation matrix:
                    b_spatial     b_temporal   b_drtpattern      b_waiting     b_discount b_compensation
b_spatial             1.00000        0.20437        0.08349       -0.18693        0.15072        0.11702
b_temporal            0.20437        1.00000        0.02870       -0.29218        0.23964        0.24181
b_drtpattern          0.08349        0.02870        1.00000        0.03461        0.05439       -0.06966
b_waiting            -0.18693       -0.29218        0.03461        1.00000       -0.27588       -0.09406
b_discount            0.15072        0.23964        0.05439       -0.27588        1.00000        0.15926
b_compensation        0.11702        0.24181       -0.06966       -0.09406        0.15926        1.00000
b_price              -0.39409       -0.47540       -0.01437        0.47195       -0.35241       -0.26181
                      b_price
b_spatial            -0.39409
b_temporal           -0.47540
b_drtpattern         -0.01437
b_waiting             0.47195
b_discount           -0.35241
b_compensation       -0.26181
b_price               1.00000

 20 worst outliers in terms of lowest average per choice prediction:
   ID Avg prob per choice
 1540           0.3032358
 2322           0.3179989
 1907           0.3296796
 2795           0.3447927
 2314           0.3454007
 2691           0.3658077
 1901           0.3693392
 2193           0.3707240
 2899           0.3707528
 2027           0.3716945
 2438           0.3747209
 2950           0.3815384
 2364           0.3864845
 2736           0.3868882
 2529           0.3873139
 2510           0.3887191
 2584           0.3966975
 1879           0.3969836
 2635           0.4013823
 3243           0.4025950

Changes in parameter estimates from starting values:
                   Initial    Estimate  Difference
b_spatial            0.000    0.017742    0.017742
b_temporal           0.000    0.078111    0.078111
b_drtpattern         0.000    0.177239    0.177239
b_waiting            0.000   -0.006867   -0.006867
b_discount           0.000    0.003665    0.003665
b_compensation       0.000    0.054525    0.054525
b_price              0.000   -0.010973   -0.010973

Settings and functions used in model definition:

apollo_control
--------------
                       Value                                    
modelName              "MNL_SP"                                 
modelDescr             "Simple MNL model on PT guarantee choice"
indivID                "RID"                                    
outputDirectory        "output/"                                
debug                  "FALSE"                                  
nCores                 "1"                                      
workInLogs             "FALSE"                                  
seed                   "13"                                     
mixing                 "FALSE"                                  
HB                     "FALSE"                                  
noValidation           "FALSE"                                  
noDiagnostics          "FALSE"                                  
calculateLLC           "TRUE"                                   
panelData              "TRUE"                                   
analyticGrad           "TRUE"                                   
analyticGrad_manualSet "FALSE"                                  
overridePanel          "FALSE"                                  
preventOverridePanel   "FALSE"                                  
noModification         "FALSE"                                  

Hessian routines attempted
--------------------------
numerical jacobian of LL analytical gradient

Scaling used in computing Hessian
---------------------------------
                     Value
b_spatial      0.017742344
b_temporal     0.078110848
b_drtpattern   0.177239051
b_waiting      0.006867236
b_discount     0.003664678
b_compensation 0.054524958
b_price        0.010972755


apollo_probabilities
----------------------
function(apollo_beta, apollo_inputs, functionality="estimate"){
  
  ### Attach inputs and detach after function exit
  apollo_attach(apollo_beta, apollo_inputs)
  on.exit(apollo_detach(apollo_beta, apollo_inputs))
  
  ### Create list of probabilities P
  P = list()
  
  ### List of utilities: these must use the same names as in mnl_settings, order is irrelevant
  V = list()
  
  V[["alt1"]]  = b_spatial  * Spatial_1 + b_temporal * Temporal_1 + b_drtpattern * DRTPattern_1 +
    b_waiting * Waitingtime_1 + b_discount * Discount_1 + b_compensation * Compensation_1 + b_price * Price_1
  V[["alt2"]]  = b_spatial  * Spatial_2 + b_temporal * Temporal_2 + b_drtpattern * DRTPattern_2 +
    b_waiting * Waitingtime_2 + b_discount * Discount_2 + b_compensation * Compensation_2 + b_price * Price_2
  
  # V[["alt1"]]  = b_price*(b_spatial  * Spatial_1 + b_temporal * Temporal_1 + b_drtpattern * DRTPattern_1 +
  #   b_waiting * Waitingtime_1 + b_discount * Discount_1 + b_compensation * Compensation_1 + Price_1)
  # V[["alt2"]]  = b_price*(b_spatial  * Spatial_2 + b_temporal * Temporal_2 + b_drtpattern * DRTPattern_2 +
  #   b_waiting * Waitingtime_2 + b_discount * Discount_2 + b_compensation * Compensation_2 + Price_2)
  # 
  
  #  V[["alt1"]]  = asc_1 + b_spatial  * Spatial_1 + b_temporal17 * (Temporal_1==17) +b_temporal24 * (Temporal_1==24) + b_drtpattern * DRTPattern_1 +
  #    b_waiting * Waitingtime_1 + b_discount * Discount_1 + b_comp_improved * (Compensation_1==2) + b_comp_generous * (Compensation_1==3) + b_price * Price_1
  #  V[["alt2"]]  = b_spatial  * Spatial_2 + + b_temporal17 * (Temporal_2==17) +b_temporal24 * (Temporal_2==24) + + b_drtpattern * DRTPattern_2 +
  #    b_waiting * Waitingtime_2 + b_discount * Discount_2 + b_comp_improved * (Compensation_2==2) + b_comp_generous * (Compensation_2==3) + b_price * Price_2
  
  
  ### Define settings for MNL model component
  mnl_settings = list(
    alternatives  = c(alt1=1, alt2=2), 
    avail         = 1, 
    choiceVar     = CHOICE,
    utilities     = V
  )
  
  ### Compute probabilities using MNL model
  P[["model"]] = apollo_mnl(mnl_settings, functionality)
  
  ### Take product across observation for same individual
  P = apollo_panelProd(P, apollo_inputs, functionality)
  
  ### Prepare and return outputs of function
  P = apollo_prepareProb(P, apollo_inputs, functionality)
  return(P)
}
