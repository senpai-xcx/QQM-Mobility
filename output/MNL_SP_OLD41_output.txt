Model run by Rowan's PC using Apollo 0.3.1 on R 4.3.1 for Windows.
Please acknowledge the use of Apollo by citing Hess & Palma (2019)
  DOI 10.1016/j.jocm.2019.100170
  www.ApolloChoiceModelling.com

Model name                                  : MNL_SP
Model description                           : Simple MNL model on PT guarantee choice
Model run at                                : 2024-01-09 20:53:58.02774
Estimation method                           : bgw
Model diagnosis                             : Relative function convergence
Optimisation diagnosis                      : Maximum found
     hessian properties                     : Negative definite
     maximum eigenvalue                     : -114.999361
     reciprocal of condition number         : 7.65043e-05
Number of individuals                       : 106
Number of rows in database                  : 530
Number of modelled outcomes                 : 530

Number of cores used                        :  1 
Model without mixing

LL(start)                                   : -367.37
LL at equal shares, LL(0)                   : -367.37
LL at observed shares, LL(C)                : -367.36
LL(final)                                   : -334.85
Rho-squared vs equal shares                  :  0.0885 
Adj.Rho-squared vs equal shares              :  0.0695 
Rho-squared vs observed shares               :  0.0885 
Adj.Rho-squared vs observed shares           :  0.0722 
AIC                                         :  683.7 
BIC                                         :  713.61 

Estimated parameters                        : 7
Time taken (hh:mm:ss)                       :  00:00:1.95 
     pre-estimation                         :  00:00:0.78 
     estimation                             :  00:00:0.77 
          initial estimation                :  00:00:0.72 
          estimation after rescaling        :  00:00:0.05 
     post-estimation                        :  00:00:0.39 
Iterations                                  :  7  
     initial estimation                     :  6 
     estimation after rescaling             :  1 

Unconstrained optimisation.

Estimates:
                  Estimate        s.e.   t.rat.(0)    Rob.s.e. Rob.t.rat.(0)
b_spatial         0.020490    0.005950      3.4439    0.005881        3.4842
b_temporal        0.105325    0.016706      6.3045    0.018147        5.8040
b_drtpattern     -0.093054    0.093240     -0.9980    0.103054       -0.9030
b_waiting        -0.005669    0.001533     -3.6975    0.001664       -3.4077
b_discount        0.003725    0.001777      2.0963    0.001942        1.9178
b_compensation   -0.024305    0.066016     -0.3682    0.062871       -0.3866
b_price          -0.008157    0.001353     -6.0299    0.001457       -5.5983


Overview of choices for MNL model component :
                                   alt1   alt2
Times available                  530.00 530.00
Times chosen                     266.00 264.00
Percentage chosen overall         50.19  49.81
Percentage chosen when available  50.19  49.81



Classical covariance matrix:
                    b_spatial     b_temporal   b_drtpattern      b_waiting     b_discount b_compensation
b_spatial           3.540e-05      2.071e-05      6.987e-05     -1.580e-06      1.611e-06      3.595e-06
b_temporal          2.071e-05     2.7910e-04     -1.283e-06     -1.018e-05      7.801e-06     1.5971e-04
b_drtpattern        6.987e-05     -1.283e-06       0.008694     -1.431e-06      4.032e-06      7.767e-05
b_waiting          -1.580e-06     -1.018e-05     -1.431e-06      2.351e-06     -5.686e-07     -1.103e-05
b_discount          1.611e-06      7.801e-06      4.032e-06     -5.686e-07      3.158e-06      3.252e-06
b_compensation      3.595e-06     1.5971e-04      7.767e-05     -1.103e-05      3.252e-06       0.004358
b_price            -2.588e-06     -1.422e-05     -5.914e-06      1.180e-06     -8.519e-07     -2.161e-05
                      b_price
b_spatial          -2.588e-06
b_temporal         -1.422e-05
b_drtpattern       -5.914e-06
b_waiting           1.180e-06
b_discount         -8.519e-07
b_compensation     -2.161e-05
b_price             1.830e-06

Robust covariance matrix:
                    b_spatial     b_temporal   b_drtpattern      b_waiting     b_discount b_compensation
b_spatial           3.458e-05      1.602e-05     1.0757e-04     -1.593e-06      3.504e-06      7.685e-06
b_temporal          1.602e-05     3.2931e-04     1.5456e-04     -7.745e-06      1.353e-05      8.707e-05
b_drtpattern       1.0757e-04     1.5456e-04        0.01062     -1.841e-05      3.452e-05    -9.3533e-04
b_waiting          -1.593e-06     -7.745e-06     -1.841e-05      2.767e-06     -1.389e-06     -7.137e-07
b_discount          3.504e-06      1.353e-05      3.452e-05     -1.389e-06      3.773e-06     -5.775e-06
b_compensation      7.685e-06      8.707e-05    -9.3533e-04     -7.137e-07     -5.775e-06       0.003953
b_price            -2.763e-06     -1.160e-05     -1.844e-05      1.170e-06     -1.625e-06     -6.259e-06
                      b_price
b_spatial          -2.763e-06
b_temporal         -1.160e-05
b_drtpattern       -1.844e-05
b_waiting           1.170e-06
b_discount         -1.625e-06
b_compensation     -6.259e-06
b_price             2.123e-06

Classical correlation matrix:
                    b_spatial     b_temporal   b_drtpattern      b_waiting     b_discount b_compensation
b_spatial            1.000000         0.2083        0.12595       -0.17324        0.15232       0.009154
b_temporal           0.208325         1.0000    -8.2368e-04       -0.39760        0.26276       0.144814
b_drtpattern         0.125952    -8.2368e-04        1.00000       -0.01001        0.02433       0.012618
b_waiting           -0.173242        -0.3976       -0.01001        1.00000       -0.20868      -0.108946
b_discount           0.152325         0.2628        0.02433       -0.20868        1.00000       0.027721
b_compensation       0.009154         0.1448        0.01262       -0.10895        0.02772       1.000000
b_price             -0.321564        -0.6293       -0.04689        0.56916       -0.35434      -0.242010
                      b_price
b_spatial            -0.32156
b_temporal           -0.62926
b_drtpattern         -0.04689
b_waiting             0.56916
b_discount           -0.35434
b_compensation       -0.24201
b_price               1.00000

Robust correlation matrix:
                    b_spatial     b_temporal   b_drtpattern      b_waiting     b_discount b_compensation
b_spatial             1.00000        0.15015        0.17749      -0.162814        0.30676       0.020784
b_temporal            0.15015        1.00000        0.08265      -0.256553        0.38387       0.076317
b_drtpattern          0.17749        0.08265        1.00000      -0.107412        0.17245      -0.144360
b_waiting            -0.16281       -0.25655       -0.10741       1.000000       -0.42989      -0.006823
b_discount            0.30676        0.38387        0.17245      -0.429890        1.00000      -0.047286
b_compensation        0.02078        0.07632       -0.14436      -0.006823       -0.04729       1.000000
b_price              -0.32241       -0.43886       -0.12279       0.482640       -0.57427      -0.068328
                      b_price
b_spatial            -0.32241
b_temporal           -0.43886
b_drtpattern         -0.12279
b_waiting             0.48264
b_discount           -0.57427
b_compensation       -0.06833
b_price               1.00000

 20 worst outliers in terms of lowest average per choice prediction:
   ID Avg prob per choice
 2861           0.3545213
 1529           0.3789067
 2525           0.3901792
 2584           0.3903390
 1496           0.3942434
 1521           0.3978562
 2917           0.3984291
 2724           0.4115881
 3221           0.4249450
 2186           0.4269549
 2330           0.4377489
 2092           0.4431824
 2999           0.4459573
 2795           0.4465076
 1778           0.4570510
 2364           0.4587489
 2635           0.4588814
 2754           0.4604204
 2838           0.4628619
 2976           0.4660364

Changes in parameter estimates from starting values:
                   Initial    Estimate  Difference
b_spatial            0.000    0.020490    0.020490
b_temporal           0.000    0.105325    0.105325
b_drtpattern         0.000   -0.093054   -0.093054
b_waiting            0.000   -0.005669   -0.005669
b_discount           0.000    0.003725    0.003725
b_compensation       0.000   -0.024305   -0.024305
b_price              0.000   -0.008157   -0.008157

Settings and functions used in model definition:

apollo_control
--------------
                       Value                                    
modelName              "MNL_SP"                                 
modelDescr             "Simple MNL model on PT guarantee choice"
indivID                "RID"                                    
outputDirectory        "output/"                                
debug                  "FALSE"                                  
nCores                 "1"                                      
workInLogs             "FALSE"                                  
seed                   "13"                                     
mixing                 "FALSE"                                  
HB                     "FALSE"                                  
noValidation           "FALSE"                                  
noDiagnostics          "FALSE"                                  
calculateLLC           "TRUE"                                   
panelData              "TRUE"                                   
analyticGrad           "TRUE"                                   
analyticGrad_manualSet "FALSE"                                  
overridePanel          "FALSE"                                  
preventOverridePanel   "FALSE"                                  
noModification         "FALSE"                                  

Hessian routines attempted
--------------------------
numerical jacobian of LL analytical gradient

Scaling used in computing Hessian
---------------------------------
                     Value
b_spatial      0.020490274
b_temporal     0.105325308
b_drtpattern   0.093053997
b_waiting      0.005668929
b_discount     0.003725420
b_compensation 0.024305263
b_price        0.008157051


apollo_probabilities
----------------------
function(apollo_beta, apollo_inputs, functionality="estimate"){
  
  ### Attach inputs and detach after function exit
  apollo_attach(apollo_beta, apollo_inputs)
  on.exit(apollo_detach(apollo_beta, apollo_inputs))
  
  ### Create list of probabilities P
  P = list()
  
  ### List of utilities: these must use the same names as in mnl_settings, order is irrelevant
  V = list()
  
  V[["alt1"]]  = b_spatial  * Spatial_1 + b_temporal * Temporal_1 + b_drtpattern * DRTPattern_1 +
    b_waiting * Waitingtime_1 + b_discount * Discount_1 + b_compensation * Compensation_1 + b_price * Price_1
  V[["alt2"]]  = b_spatial  * Spatial_2 + b_temporal * Temporal_2 + b_drtpattern * DRTPattern_2 +
    b_waiting * Waitingtime_2 + b_discount * Discount_2 + b_compensation * Compensation_2 + b_price * Price_2
  
  # V[["alt1"]]  = b_price*(b_spatial  * Spatial_1 + b_temporal * Temporal_1 + b_drtpattern * DRTPattern_1 +
  #   b_waiting * Waitingtime_1 + b_discount * Discount_1 + b_compensation * Compensation_1 + Price_1)
  # V[["alt2"]]  = b_price*(b_spatial  * Spatial_2 + b_temporal * Temporal_2 + b_drtpattern * DRTPattern_2 +
  #   b_waiting * Waitingtime_2 + b_discount * Discount_2 + b_compensation * Compensation_2 + Price_2)
  # 
  
  #  V[["alt1"]]  = asc_1 + b_spatial  * Spatial_1 + b_temporal17 * (Temporal_1==17) +b_temporal24 * (Temporal_1==24) + b_drtpattern * DRTPattern_1 +
  #    b_waiting * Waitingtime_1 + b_discount * Discount_1 + b_comp_improved * (Compensation_1==2) + b_comp_generous * (Compensation_1==3) + b_price * Price_1
  #  V[["alt2"]]  = b_spatial  * Spatial_2 + + b_temporal17 * (Temporal_2==17) +b_temporal24 * (Temporal_2==24) + + b_drtpattern * DRTPattern_2 +
  #    b_waiting * Waitingtime_2 + b_discount * Discount_2 + b_comp_improved * (Compensation_2==2) + b_comp_generous * (Compensation_2==3) + b_price * Price_2
  
  
  ### Define settings for MNL model component
  mnl_settings = list(
    alternatives  = c(alt1=1, alt2=2), 
    avail         = 1, 
    choiceVar     = CHOICE,
    utilities     = V
  )
  
  ### Compute probabilities using MNL model
  P[["model"]] = apollo_mnl(mnl_settings, functionality)
  
  ### Take product across observation for same individual
  P = apollo_panelProd(P, apollo_inputs, functionality)
  
  ### Prepare and return outputs of function
  P = apollo_prepareProb(P, apollo_inputs, functionality)
  return(P)
}
