Model run by juliagershenzon using Apollo 0.3.1 on R 4.3.1 for Darwin.
Please acknowledge the use of Apollo by citing Hess & Palma (2019)
  DOI 10.1016/j.jocm.2019.100170
  www.ApolloChoiceModelling.com

Model name                                  : MNL_SP
Model description                           : Simple MNL model on PT guarantee choice
Model run at                                : 2023-11-27 13:28:55.772285
Estimation method                           : bgw
Model diagnosis                             : Relative function convergence
Optimisation diagnosis                      : Maximum found
     hessian properties                     : Negative definite
     maximum eigenvalue                     : -923.20595
     reciprocal of condition number         : 7.49291e-05
Number of individuals                       : 851
Number of rows in database                  : 4255
Number of modelled outcomes                 : 4255

Number of cores used                        :  1 
Model without mixing

LL(start)                                   : -2949.34
LL at equal shares, LL(0)                   : -2949.34
LL at observed shares, LL(C)                : -2947.26
LL(final)                                   : -2682.62
Rho-squared vs equal shares                  :  0.0904 
Adj.Rho-squared vs equal shares              :  0.0881 
Rho-squared vs observed shares               :  0.0898 
Adj.Rho-squared vs observed shares           :  0.0878 
AIC                                         :  5379.23 
BIC                                         :  5423.72 

Estimated parameters                        : 7
Time taken (hh:mm:ss)                       :  00:00:2.73 
     pre-estimation                         :  00:00:1 
     estimation                             :  00:00:0.71 
          initial estimation                :  00:00:0.57 
          estimation after rescaling        :  00:00:0.13 
     post-estimation                        :  00:00:1.02 
Iterations                                  :  7  
     initial estimation                     :  6 
     estimation after rescaling             :  1 

Unconstrained optimisation.

Estimates:
                  Estimate        s.e.   t.rat.(0)    Rob.s.e. Rob.t.rat.(0)
b_spatial         0.014851    0.002076       7.152    0.002081         7.137
b_temporal        0.072058    0.005658      12.737    0.005794        12.437
b_drtpattern      0.154196    0.032902       4.687    0.035151         4.387
b_waiting        -0.005915  5.4111e-04     -10.931  5.8104e-04       -10.179
b_discount        0.003047  6.2895e-04       4.845  6.1265e-04         4.974
b_compensation    0.033796    0.023578       1.433    0.023164         1.459
b_price          -0.009980  4.8875e-04     -20.420  5.4942e-04       -18.164


Overview of choices for MNL model component :
                                    alt1    alt2
Times available                  4255.00 4255.00
Times chosen                     2194.00 2061.00
Percentage chosen overall          51.56   48.44
Percentage chosen when available   51.56   48.44



Classical covariance matrix:
                    b_spatial     b_temporal   b_drtpattern      b_waiting     b_discount b_compensation
b_spatial           4.311e-06      2.423e-06      6.980e-06     -2.180e-07      1.005e-07      1.149e-06
b_temporal          2.423e-06      3.201e-05      1.585e-05     -1.006e-06      7.771e-07      2.030e-05
b_drtpattern        6.980e-06      1.585e-05       0.001083     -5.805e-07      4.017e-07      1.324e-05
b_waiting          -2.180e-07     -1.006e-06     -5.805e-07      2.928e-07     -6.755e-08     -1.552e-06
b_discount          1.005e-07      7.771e-07      4.017e-07     -6.755e-08      3.956e-07      1.669e-06
b_compensation      1.149e-06      2.030e-05      1.324e-05     -1.552e-06      1.669e-06     5.5591e-04
b_price            -3.334e-07     -1.650e-06     -1.124e-06      1.572e-07     -1.063e-07     -2.453e-06
                      b_price
b_spatial          -3.334e-07
b_temporal         -1.650e-06
b_drtpattern       -1.124e-06
b_waiting           1.572e-07
b_discount         -1.063e-07
b_compensation     -2.453e-06
b_price             2.389e-07

Robust covariance matrix:
                    b_spatial     b_temporal   b_drtpattern      b_waiting     b_discount b_compensation
b_spatial           4.330e-06      1.991e-06      5.439e-06     -2.110e-07      7.150e-08      1.909e-06
b_temporal          1.991e-06      3.357e-05      1.110e-05     -8.944e-07      8.588e-07      2.846e-05
b_drtpattern        5.439e-06      1.110e-05       0.001236     -5.095e-07      1.316e-06      1.554e-05
b_waiting          -2.110e-07     -8.944e-07     -5.095e-07      3.376e-07     -8.592e-08     -1.813e-06
b_discount          7.150e-08      8.588e-07      1.316e-06     -8.592e-08      3.753e-07      1.488e-06
b_compensation      1.909e-06      2.846e-05      1.554e-05     -1.813e-06      1.488e-06     5.3656e-04
b_price            -3.221e-07     -1.565e-06     -4.498e-07      1.619e-07     -1.007e-07     -2.899e-06
                      b_price
b_spatial          -3.221e-07
b_temporal         -1.565e-06
b_drtpattern       -4.498e-07
b_waiting           1.619e-07
b_discount         -1.007e-07
b_compensation     -2.899e-06
b_price             3.019e-07

Classical correlation matrix:
                    b_spatial     b_temporal   b_drtpattern      b_waiting     b_discount b_compensation
b_spatial             1.00000        0.20626        0.10217       -0.19399        0.07693        0.02348
b_temporal            0.20626        1.00000        0.08514       -0.32865        0.21838        0.15220
b_drtpattern          0.10217        0.08514        1.00000       -0.03260        0.01941        0.01707
b_waiting            -0.19399       -0.32865       -0.03260        1.00000       -0.19847       -0.12163
b_discount            0.07693        0.21838        0.01941       -0.19847        1.00000        0.11255
b_compensation        0.02348        0.15220        0.01707       -0.12163        0.11255        1.00000
b_price              -0.32850       -0.59678       -0.06988        0.59438       -0.34591       -0.21283
                      b_price
b_spatial            -0.32850
b_temporal           -0.59678
b_drtpattern         -0.06988
b_waiting             0.59438
b_discount           -0.34591
b_compensation       -0.21283
b_price               1.00000

Robust correlation matrix:
                    b_spatial     b_temporal   b_drtpattern      b_waiting     b_discount b_compensation
b_spatial             1.00000        0.16518        0.07436       -0.17452        0.05609        0.03960
b_temporal            0.16518        1.00000        0.05450       -0.26570        0.24195        0.21207
b_drtpattern          0.07436        0.05450        1.00000       -0.02495        0.06112        0.01908
b_waiting            -0.17452       -0.26570       -0.02495        1.00000       -0.24135       -0.13473
b_discount            0.05609        0.24195        0.06112       -0.24135        1.00000        0.10486
b_compensation        0.03960        0.21207        0.01908       -0.13473        0.10486        1.00000
b_price              -0.28169       -0.49154       -0.02329        0.50729       -0.29924       -0.22778
                      b_price
b_spatial            -0.28169
b_temporal           -0.49154
b_drtpattern         -0.02329
b_waiting             0.50729
b_discount           -0.29924
b_compensation       -0.22778
b_price               1.00000

 20 worst outliers in terms of lowest average per choice prediction:
   ID Avg prob per choice
 1597           0.2405588
 2058           0.2998531
 1496           0.3136234
 1520           0.3153059
 1540           0.3206330
 2642           0.3212723
 1616           0.3305213
 1613           0.3310302
 2322           0.3314794
 1710           0.3361083
 1907           0.3415415
 1984           0.3525798
 2944           0.3552045
 2795           0.3566539
 1913           0.3573016
 1572           0.3604551
 2314           0.3606593
 3383           0.3624538
 1799           0.3717027
 1521           0.3719831

Changes in parameter estimates from starting values:
                   Initial    Estimate  Difference
b_spatial            0.000    0.014851    0.014851
b_temporal           0.000    0.072058    0.072058
b_drtpattern         0.000    0.154196    0.154196
b_waiting            0.000   -0.005915   -0.005915
b_discount           0.000    0.003047    0.003047
b_compensation       0.000    0.033796    0.033796
b_price              0.000   -0.009980   -0.009980

Settings and functions used in model definition:

apollo_control
--------------
                       Value                                    
modelName              "MNL_SP"                                 
modelDescr             "Simple MNL model on PT guarantee choice"
indivID                "RID"                                    
outputDirectory        "output/"                                
debug                  "FALSE"                                  
nCores                 "1"                                      
workInLogs             "FALSE"                                  
seed                   "13"                                     
mixing                 "FALSE"                                  
HB                     "FALSE"                                  
noValidation           "FALSE"                                  
noDiagnostics          "FALSE"                                  
calculateLLC           "TRUE"                                   
panelData              "TRUE"                                   
analyticGrad           "TRUE"                                   
analyticGrad_manualSet "FALSE"                                  
overridePanel          "FALSE"                                  
preventOverridePanel   "FALSE"                                  
noModification         "FALSE"                                  

Hessian routines attempted
--------------------------
numerical jacobian of LL analytical gradient

Scaling used in computing Hessian
---------------------------------
                     Value
b_spatial      0.014850845
b_temporal     0.072057702
b_drtpattern   0.154196175
b_waiting      0.005914663
b_discount     0.003047484
b_compensation 0.033795750
b_price        0.009979989


apollo_probabilities
----------------------
function(apollo_beta, apollo_inputs, functionality="estimate"){
  
  ### Attach inputs and detach after function exit
  apollo_attach(apollo_beta, apollo_inputs)
  on.exit(apollo_detach(apollo_beta, apollo_inputs))
  
  ### Create list of probabilities P
  P = list()
  
  ### List of utilities: these must use the same names as in mnl_settings, order is irrelevant
  V = list()
  
   V[["alt1"]]  = b_spatial  * Spatial_1 + b_temporal * Temporal_1 + b_drtpattern * DRTPattern_1 +
     b_waiting * Waitingtime_1 + b_discount * Discount_1 + b_compensation * Compensation_1 + b_price * Price_1
   V[["alt2"]]  = b_spatial  * Spatial_2 + b_temporal * Temporal_2 + b_drtpattern * DRTPattern_2 +
     b_waiting * Waitingtime_2 + b_discount * Discount_2 + b_compensation * Compensation_2 + b_price * Price_2

   # V[["alt1"]]  = b_price*(b_spatial  * Spatial_1 + b_temporal * Temporal_1 + b_drtpattern * DRTPattern_1 +
   #   b_waiting * Waitingtime_1 + b_discount * Discount_1 + b_compensation * Compensation_1 + Price_1)
   # V[["alt2"]]  = b_price*(b_spatial  * Spatial_2 + b_temporal * Temporal_2 + b_drtpattern * DRTPattern_2 +
   #   b_waiting * Waitingtime_2 + b_discount * Discount_2 + b_compensation * Compensation_2 + Price_2)
   # 
   
#  V[["alt1"]]  = asc_1 + b_spatial  * Spatial_1 + b_temporal17 * (Temporal_1==17) +b_temporal24 * (Temporal_1==24) + b_drtpattern * DRTPattern_1 +
#    b_waiting * Waitingtime_1 + b_discount * Discount_1 + b_comp_improved * (Compensation_1==2) + b_comp_generous * (Compensation_1==3) + b_price * Price_1
#  V[["alt2"]]  = b_spatial  * Spatial_2 + + b_temporal17 * (Temporal_2==17) +b_temporal24 * (Temporal_2==24) + + b_drtpattern * DRTPattern_2 +
#    b_waiting * Waitingtime_2 + b_discount * Discount_2 + b_comp_improved * (Compensation_2==2) + b_comp_generous * (Compensation_2==3) + b_price * Price_2
  

   
  ### Define settings for MNL model component
  mnl_settings = list(
    alternatives  = c(alt1=1, alt2=2), 
    avail         = 1, 
    choiceVar     = CHOICE,
    utilities     = V
  )
  
  ### Compute probabilities using MNL model
  P[["model"]] = apollo_mnl(mnl_settings, functionality)
  
  ### Take product across observation for same individual
  P = apollo_panelProd(P, apollo_inputs, functionality)
  
  ### Prepare and return outputs of function
  P = apollo_prepareProb(P, apollo_inputs, functionality)
  return(P)
}
