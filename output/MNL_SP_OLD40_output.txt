Model run by Rowan's PC using Apollo 0.3.1 on R 4.3.1 for Windows.
Please acknowledge the use of Apollo by citing Hess & Palma (2019)
  DOI 10.1016/j.jocm.2019.100170
  www.ApolloChoiceModelling.com

Model name                                  : MNL_SP
Model description                           : Simple MNL model on PT guarantee choice
Model run at                                : 2024-01-09 20:52:22.344899
Estimation method                           : bgw
Model diagnosis                             : Relative function convergence
Optimisation diagnosis                      : Maximum found
     hessian properties                     : Negative definite
     maximum eigenvalue                     : -205.015302
     reciprocal of condition number         : 7.36619e-05
Number of individuals                       : 191
Number of rows in database                  : 955
Number of modelled outcomes                 : 955

Number of cores used                        :  1 
Model without mixing

LL(start)                                   : -661.96
LL at equal shares, LL(0)                   : -661.96
LL at observed shares, LL(C)                : -660.48
LL(final)                                   : -600.79
Rho-squared vs equal shares                  :  0.0924 
Adj.Rho-squared vs equal shares              :  0.0818 
Rho-squared vs observed shares               :  0.0904 
Adj.Rho-squared vs observed shares           :  0.0813 
AIC                                         :  1215.58 
BIC                                         :  1249.61 

Estimated parameters                        : 7
Time taken (hh:mm:ss)                       :  00:00:2.43 
     pre-estimation                         :  00:00:0.8 
     estimation                             :  00:00:1.05 
          initial estimation                :  00:00:1 
          estimation after rescaling        :  00:00:0.05 
     post-estimation                        :  00:00:0.58 
Iterations                                  :  7  
     initial estimation                     :  6 
     estimation after rescaling             :  1 

Unconstrained optimisation.

Estimates:
                  Estimate        s.e.   t.rat.(0)    Rob.s.e. Rob.t.rat.(0)
b_spatial         0.017423    0.004448       3.917    0.004491         3.879
b_temporal        0.084314    0.012430       6.783    0.012740         6.618
b_drtpattern      0.167085    0.069812       2.393    0.081095         2.060
b_waiting        -0.007146    0.001157      -6.178    0.001229        -5.814
b_discount        0.004785    0.001365       3.505    0.001284         3.726
b_compensation    0.101463    0.049506       2.050    0.045839         2.213
b_price          -0.010035    0.001025      -9.792    0.001081        -9.280


Overview of choices for MNL model component :
                                   alt1   alt2
Times available                  955.00 955.00
Times chosen                     504.00 451.00
Percentage chosen overall         52.77  47.23
Percentage chosen when available  52.77  47.23



Classical covariance matrix:
                    b_spatial     b_temporal   b_drtpattern      b_waiting     b_discount b_compensation
b_spatial           1.978e-05      1.137e-05      4.045e-05     -9.629e-07      7.473e-07      3.265e-06
b_temporal          1.137e-05     1.5449e-04      8.328e-05     -5.223e-06      3.663e-06      9.328e-05
b_drtpattern        4.045e-05      8.328e-05       0.004874     -3.099e-06      5.348e-06      6.959e-05
b_waiting          -9.629e-07     -5.223e-06     -3.099e-06      1.338e-06     -3.435e-07     -6.287e-06
b_discount          7.473e-07      3.663e-06      5.348e-06     -3.435e-07      1.864e-06      5.219e-06
b_compensation      3.265e-06      9.328e-05      6.959e-05     -6.287e-06      5.219e-06       0.002451
b_price            -1.550e-06     -7.834e-06     -6.513e-06      6.987e-07     -4.925e-07     -1.181e-05
                      b_price
b_spatial          -1.550e-06
b_temporal         -7.834e-06
b_drtpattern       -6.513e-06
b_waiting           6.987e-07
b_discount         -4.925e-07
b_compensation     -1.181e-05
b_price             1.050e-06

Robust covariance matrix:
                    b_spatial     b_temporal   b_drtpattern      b_waiting     b_discount b_compensation
b_spatial           2.017e-05      1.310e-05      6.721e-05     -1.338e-06      1.231e-06      2.197e-06
b_temporal          1.310e-05     1.6232e-04      8.553e-05     -4.309e-06      4.227e-06      7.949e-05
b_drtpattern        6.721e-05      8.553e-05       0.006576     -2.926e-06      1.395e-05     -4.855e-05
b_waiting          -1.338e-06     -4.309e-06     -2.926e-06      1.511e-06     -4.685e-07     -3.852e-06
b_discount          1.231e-06      4.227e-06      1.395e-05     -4.685e-07      1.649e-06      2.614e-06
b_compensation      2.197e-06      7.949e-05     -4.855e-05     -3.852e-06      2.614e-06       0.002101
b_price            -1.770e-06     -6.157e-06     -3.630e-06      6.518e-07     -5.517e-07     -1.090e-05
                      b_price
b_spatial          -1.770e-06
b_temporal         -6.157e-06
b_drtpattern       -3.630e-06
b_waiting           6.518e-07
b_discount         -5.517e-07
b_compensation     -1.090e-05
b_price             1.169e-06

Classical correlation matrix:
                    b_spatial     b_temporal   b_drtpattern      b_waiting     b_discount b_compensation
b_spatial             1.00000        0.20564        0.13026       -0.18715        0.12307        0.01483
b_temporal            0.20564        1.00000        0.09597       -0.36326        0.21586        0.15160
b_drtpattern          0.13026        0.09597        1.00000       -0.03837        0.05611        0.02014
b_waiting            -0.18715       -0.36326       -0.03837        1.00000       -0.21750       -0.10978
b_discount            0.12307        0.21586        0.05611       -0.21750        1.00000        0.07722
b_compensation        0.01483        0.15160        0.02014       -0.10978        0.07722        1.00000
b_price              -0.33992       -0.61498       -0.09103        0.58936       -0.35198       -0.23275
                      b_price
b_spatial            -0.33992
b_temporal           -0.61498
b_drtpattern         -0.09103
b_waiting             0.58936
b_discount           -0.35198
b_compensation       -0.23275
b_price               1.00000

Robust correlation matrix:
                    b_spatial     b_temporal   b_drtpattern      b_waiting     b_discount b_compensation
b_spatial             1.00000        0.22888        0.18454       -0.24241        0.21349        0.01067
b_temporal            0.22888        1.00000        0.08278       -0.27514        0.25835        0.13610
b_drtpattern          0.18454        0.08278        1.00000       -0.02935        0.13398       -0.01306
b_waiting            -0.24241       -0.27514       -0.02935        1.00000       -0.29682       -0.06837
b_discount            0.21349        0.25835        0.13398       -0.29682        1.00000        0.04442
b_compensation        0.01067        0.13610       -0.01306       -0.06837        0.04442        1.00000
b_price              -0.36452       -0.44689       -0.04140        0.49039       -0.39726       -0.21980
                      b_price
b_spatial            -0.36452
b_temporal           -0.44689
b_drtpattern         -0.04140
b_waiting             0.49039
b_discount           -0.39726
b_compensation       -0.21980
b_price               1.00000

 20 worst outliers in terms of lowest average per choice prediction:
   ID Avg prob per choice
 1496           0.3384655
 1529           0.3569367
 2708           0.3637722
 1521           0.3649457
 2170           0.3707386
 1799           0.3816317
 1907           0.3818978
 2529           0.3940757
 2749           0.3962096
 1986           0.4035874
 2899           0.4122329
 2592           0.4129935
 3221           0.4185597
 2394           0.4191750
 2828           0.4214714
 2364           0.4225853
 2584           0.4230816
 2002           0.4285899
 2590           0.4290347
 1814           0.4293137

Changes in parameter estimates from starting values:
                   Initial    Estimate  Difference
b_spatial            0.000    0.017423    0.017423
b_temporal           0.000    0.084314    0.084314
b_drtpattern         0.000    0.167085    0.167085
b_waiting            0.000   -0.007146   -0.007146
b_discount           0.000    0.004785    0.004785
b_compensation       0.000    0.101463    0.101463
b_price              0.000   -0.010035   -0.010035

Settings and functions used in model definition:

apollo_control
--------------
                       Value                                    
modelName              "MNL_SP"                                 
modelDescr             "Simple MNL model on PT guarantee choice"
indivID                "RID"                                    
outputDirectory        "output/"                                
debug                  "FALSE"                                  
nCores                 "1"                                      
workInLogs             "FALSE"                                  
seed                   "13"                                     
mixing                 "FALSE"                                  
HB                     "FALSE"                                  
noValidation           "FALSE"                                  
noDiagnostics          "FALSE"                                  
calculateLLC           "TRUE"                                   
panelData              "TRUE"                                   
analyticGrad           "TRUE"                                   
analyticGrad_manualSet "FALSE"                                  
overridePanel          "FALSE"                                  
preventOverridePanel   "FALSE"                                  
noModification         "FALSE"                                  

Hessian routines attempted
--------------------------
numerical jacobian of LL analytical gradient

Scaling used in computing Hessian
---------------------------------
                    Value
b_spatial      0.01742300
b_temporal     0.08431395
b_drtpattern   0.16708469
b_waiting      0.00714586
b_discount     0.00478471
b_compensation 0.10146346
b_price        0.01003546


apollo_probabilities
----------------------
function(apollo_beta, apollo_inputs, functionality="estimate"){
  
  ### Attach inputs and detach after function exit
  apollo_attach(apollo_beta, apollo_inputs)
  on.exit(apollo_detach(apollo_beta, apollo_inputs))
  
  ### Create list of probabilities P
  P = list()
  
  ### List of utilities: these must use the same names as in mnl_settings, order is irrelevant
  V = list()
  
  V[["alt1"]]  = b_spatial  * Spatial_1 + b_temporal * Temporal_1 + b_drtpattern * DRTPattern_1 +
    b_waiting * Waitingtime_1 + b_discount * Discount_1 + b_compensation * Compensation_1 + b_price * Price_1
  V[["alt2"]]  = b_spatial  * Spatial_2 + b_temporal * Temporal_2 + b_drtpattern * DRTPattern_2 +
    b_waiting * Waitingtime_2 + b_discount * Discount_2 + b_compensation * Compensation_2 + b_price * Price_2
  
  # V[["alt1"]]  = b_price*(b_spatial  * Spatial_1 + b_temporal * Temporal_1 + b_drtpattern * DRTPattern_1 +
  #   b_waiting * Waitingtime_1 + b_discount * Discount_1 + b_compensation * Compensation_1 + Price_1)
  # V[["alt2"]]  = b_price*(b_spatial  * Spatial_2 + b_temporal * Temporal_2 + b_drtpattern * DRTPattern_2 +
  #   b_waiting * Waitingtime_2 + b_discount * Discount_2 + b_compensation * Compensation_2 + Price_2)
  # 
  
  #  V[["alt1"]]  = asc_1 + b_spatial  * Spatial_1 + b_temporal17 * (Temporal_1==17) +b_temporal24 * (Temporal_1==24) + b_drtpattern * DRTPattern_1 +
  #    b_waiting * Waitingtime_1 + b_discount * Discount_1 + b_comp_improved * (Compensation_1==2) + b_comp_generous * (Compensation_1==3) + b_price * Price_1
  #  V[["alt2"]]  = b_spatial  * Spatial_2 + + b_temporal17 * (Temporal_2==17) +b_temporal24 * (Temporal_2==24) + + b_drtpattern * DRTPattern_2 +
  #    b_waiting * Waitingtime_2 + b_discount * Discount_2 + b_comp_improved * (Compensation_2==2) + b_comp_generous * (Compensation_2==3) + b_price * Price_2
  
  
  ### Define settings for MNL model component
  mnl_settings = list(
    alternatives  = c(alt1=1, alt2=2), 
    avail         = 1, 
    choiceVar     = CHOICE,
    utilities     = V
  )
  
  ### Compute probabilities using MNL model
  P[["model"]] = apollo_mnl(mnl_settings, functionality)
  
  ### Take product across observation for same individual
  P = apollo_panelProd(P, apollo_inputs, functionality)
  
  ### Prepare and return outputs of function
  P = apollo_prepareProb(P, apollo_inputs, functionality)
  return(P)
}
