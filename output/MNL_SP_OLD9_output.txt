Model run by Rowan's PC using Apollo 0.3.1 on R 4.3.1 for Windows.
Please acknowledge the use of Apollo by citing Hess & Palma (2019)
  DOI 10.1016/j.jocm.2019.100170
  www.ApolloChoiceModelling.com

Model name                                  : MNL_SP
Model description                           : Simple MNL model on PT guarantee choice
Model run at                                : 2024-01-09 17:21:23.105612
Estimation method                           : bgw
Model diagnosis                             : Relative function convergence
Optimisation diagnosis                      : Maximum found
     hessian properties                     : Negative definite
     maximum eigenvalue                     : -12.543519
     reciprocal of condition number         : 5.86698e-05
Number of individuals                       : 15
Number of rows in database                  : 75
Number of modelled outcomes                 : 75

Number of cores used                        :  1 
Model without mixing

LL(start)                                   : -51.99
LL at equal shares, LL(0)                   : -51.99
LL at observed shares, LL(C)                : -49.01
LL(final)                                   : -41.28
Rho-squared vs equal shares                  :  0.2059 
Adj.Rho-squared vs equal shares              :  0.0713 
Rho-squared vs observed shares               :  0.1577 
Adj.Rho-squared vs observed shares           :  0.0352 
AIC                                         :  96.56 
BIC                                         :  112.78 

Estimated parameters                        : 7
Time taken (hh:mm:ss)                       :  00:00:1.16 
     pre-estimation                         :  00:00:0.59 
     estimation                             :  00:00:0.11 
          initial estimation                :  00:00:0.09 
          estimation after rescaling        :  00:00:0.02 
     post-estimation                        :  00:00:0.45 
Iterations                                  :  9  
     initial estimation                     :  8 
     estimation after rescaling             :  1 

Unconstrained optimisation.

Estimates:
                  Estimate        s.e.   t.rat.(0)    Rob.s.e. Rob.t.rat.(0)
b_spatial         0.004204    0.017123      0.2455    0.020655        0.2036
b_temporal        0.175954    0.056949      3.0896    0.046841        3.7564
b_drtpattern      0.349429    0.281804      1.2400    0.244541        1.4289
b_waiting        -0.007588    0.004664     -1.6268    0.005457       -1.3905
b_discount        0.001378    0.005576      0.2472    0.005464        0.2523
b_compensation    0.048009    0.222320      0.2159    0.180183        0.2664
b_price          -0.013520    0.004270     -3.1660    0.005010       -2.6987


Overview of choices for MNL model component :
                                 alt1 alt2
Times available                    75   75
Times chosen                       48   27
Percentage chosen overall          64   36
Percentage chosen when available   64   36



Classical covariance matrix:
                    b_spatial     b_temporal   b_drtpattern      b_waiting     b_discount b_compensation
b_spatial          2.9320e-04     1.9737e-04     1.2840e-04     -1.676e-05      1.551e-05     2.6769e-04
b_temporal         1.9737e-04       0.003243       0.001159     -5.238e-05      5.270e-05       0.004732
b_drtpattern       1.2840e-04       0.001159       0.079413      7.691e-05    -4.1599e-04      -0.003016
b_waiting          -1.676e-05     -5.238e-05      7.691e-05      2.176e-05     -5.501e-06     1.0096e-04
b_discount          1.551e-05      5.270e-05    -4.1599e-04     -5.501e-06      3.109e-05     2.9660e-04
b_compensation     2.6769e-04       0.004732      -0.003016     1.0096e-04     2.9660e-04       0.049426
b_price            -2.541e-05    -1.6141e-04     -2.516e-05      1.094e-05     -7.560e-06    -3.3616e-04
                      b_price
b_spatial          -2.541e-05
b_temporal        -1.6141e-04
b_drtpattern       -2.516e-05
b_waiting           1.094e-05
b_discount         -7.560e-06
b_compensation    -3.3616e-04
b_price             1.824e-05

Robust covariance matrix:
                    b_spatial     b_temporal   b_drtpattern      b_waiting     b_discount b_compensation
b_spatial          4.2661e-04     1.7212e-04    -1.3003e-04     -5.244e-05      4.197e-05    -3.4261e-04
b_temporal         1.7212e-04       0.002194      -0.001810     -4.412e-05      4.288e-05       0.002315
b_drtpattern      -1.3003e-04      -0.001810       0.059800     -8.195e-05     -6.215e-05      -0.002922
b_waiting          -5.244e-05     -4.412e-05     -8.195e-05      2.978e-05     -9.488e-06     1.5384e-04
b_discount          4.197e-05      4.288e-05     -6.215e-05     -9.488e-06      2.985e-05     1.0823e-04
b_compensation    -3.4261e-04       0.002315      -0.002922     1.5384e-04     1.0823e-04       0.032466
b_price            -6.332e-05    -1.0896e-04     1.7916e-04      1.562e-05     -1.153e-05    -1.6650e-04
                      b_price
b_spatial          -6.332e-05
b_temporal        -1.0896e-04
b_drtpattern       1.7916e-04
b_waiting           1.562e-05
b_discount         -1.153e-05
b_compensation    -1.6650e-04
b_price             2.510e-05

Classical correlation matrix:
                    b_spatial     b_temporal   b_drtpattern      b_waiting     b_discount b_compensation
b_spatial             1.00000        0.20240        0.02661       -0.20989         0.1624        0.07032
b_temporal            0.20240        1.00000        0.07225       -0.19720         0.1659        0.37377
b_drtpattern          0.02661        0.07225        1.00000        0.05851        -0.2647       -0.04814
b_waiting            -0.20989       -0.19720        0.05851        1.00000        -0.2115        0.09736
b_discount            0.16245        0.16595       -0.26474       -0.21151         1.0000        0.23926
b_compensation        0.07032        0.37377       -0.04814        0.09736         0.2393        1.00000
b_price              -0.34757       -0.66370       -0.02091        0.54927        -0.3175       -0.35409
                      b_price
b_spatial            -0.34757
b_temporal           -0.66370
b_drtpattern         -0.02091
b_waiting             0.54927
b_discount           -0.31750
b_compensation       -0.35409
b_price               1.00000

Robust correlation matrix:
                    b_spatial     b_temporal   b_drtpattern      b_waiting     b_discount b_compensation
b_spatial             1.00000         0.1779       -0.02574       -0.46522        0.37194       -0.09206
b_temporal            0.17791         1.0000       -0.15799       -0.17259        0.16755        0.27432
b_drtpattern         -0.02574        -0.1580        1.00000       -0.06141       -0.04652       -0.06632
b_waiting            -0.46522        -0.1726       -0.06141        1.00000       -0.31823        0.15646
b_discount            0.37194         0.1675       -0.04652       -0.31823        1.00000        0.10994
b_compensation       -0.09206         0.2743       -0.06632        0.15646        0.10994        1.00000
b_price              -0.61195        -0.4643        0.14624        0.57145       -0.42134       -0.18444
                      b_price
b_spatial             -0.6120
b_temporal            -0.4643
b_drtpattern           0.1462
b_waiting              0.5714
b_discount            -0.4213
b_compensation        -0.1844
b_price                1.0000

 15 worst outliers in terms of lowest average per choice prediction:
   ID Avg prob per choice
 2762           0.4331113
 1711           0.4361589
 2011           0.4473974
 2963           0.4997929
 2467           0.5448345
 2783           0.5543090
 2808           0.5735960
 1959           0.5931557
 2511           0.6019200
 2115           0.6265221
 2197           0.6363278
 2104           0.6594702
 2380           0.6629772
 1827           0.6996108
 2225           0.8151276

Changes in parameter estimates from starting values:
                   Initial    Estimate  Difference
b_spatial            0.000    0.004204    0.004204
b_temporal           0.000    0.175954    0.175954
b_drtpattern         0.000    0.349429    0.349429
b_waiting            0.000   -0.007588   -0.007588
b_discount           0.000    0.001378    0.001378
b_compensation       0.000    0.048009    0.048009
b_price              0.000   -0.013520   -0.013520

Settings and functions used in model definition:

apollo_control
--------------
                       Value                                    
modelName              "MNL_SP"                                 
modelDescr             "Simple MNL model on PT guarantee choice"
indivID                "RID"                                    
outputDirectory        "output/"                                
debug                  "FALSE"                                  
nCores                 "1"                                      
workInLogs             "FALSE"                                  
seed                   "13"                                     
mixing                 "FALSE"                                  
HB                     "FALSE"                                  
noValidation           "FALSE"                                  
noDiagnostics          "FALSE"                                  
calculateLLC           "TRUE"                                   
panelData              "TRUE"                                   
analyticGrad           "TRUE"                                   
analyticGrad_manualSet "FALSE"                                  
overridePanel          "FALSE"                                  
preventOverridePanel   "FALSE"                                  
noModification         "FALSE"                                  

Hessian routines attempted
--------------------------
numerical jacobian of LL analytical gradient

Scaling used in computing Hessian
---------------------------------
                     Value
b_spatial      0.004204267
b_temporal     0.175953915
b_drtpattern   0.349429357
b_waiting      0.007587843
b_discount     0.001378320
b_compensation 0.048008832
b_price        0.013520061


apollo_probabilities
----------------------
function(apollo_beta, apollo_inputs, functionality="estimate"){
  
  ### Attach inputs and detach after function exit
  apollo_attach(apollo_beta, apollo_inputs)
  on.exit(apollo_detach(apollo_beta, apollo_inputs))
  
  ### Create list of probabilities P
  P = list()
  
  ### List of utilities: these must use the same names as in mnl_settings, order is irrelevant
  V = list()
  
  V[["alt1"]]  = b_spatial  * Spatial_1 + b_temporal * Temporal_1 + b_drtpattern * DRTPattern_1 +
    b_waiting * Waitingtime_1 + b_discount * Discount_1 + b_compensation * Compensation_1 + b_price * Price_1
  V[["alt2"]]  = b_spatial  * Spatial_2 + b_temporal * Temporal_2 + b_drtpattern * DRTPattern_2 +
    b_waiting * Waitingtime_2 + b_discount * Discount_2 + b_compensation * Compensation_2 + b_price * Price_2
  
  # V[["alt1"]]  = b_price*(b_spatial  * Spatial_1 + b_temporal * Temporal_1 + b_drtpattern * DRTPattern_1 +
  #   b_waiting * Waitingtime_1 + b_discount * Discount_1 + b_compensation * Compensation_1 + Price_1)
  # V[["alt2"]]  = b_price*(b_spatial  * Spatial_2 + b_temporal * Temporal_2 + b_drtpattern * DRTPattern_2 +
  #   b_waiting * Waitingtime_2 + b_discount * Discount_2 + b_compensation * Compensation_2 + Price_2)
  # 
  
  #  V[["alt1"]]  = asc_1 + b_spatial  * Spatial_1 + b_temporal17 * (Temporal_1==17) +b_temporal24 * (Temporal_1==24) + b_drtpattern * DRTPattern_1 +
  #    b_waiting * Waitingtime_1 + b_discount * Discount_1 + b_comp_improved * (Compensation_1==2) + b_comp_generous * (Compensation_1==3) + b_price * Price_1
  #  V[["alt2"]]  = b_spatial  * Spatial_2 + + b_temporal17 * (Temporal_2==17) +b_temporal24 * (Temporal_2==24) + + b_drtpattern * DRTPattern_2 +
  #    b_waiting * Waitingtime_2 + b_discount * Discount_2 + b_comp_improved * (Compensation_2==2) + b_comp_generous * (Compensation_2==3) + b_price * Price_2
  
  
  ### Define settings for MNL model component
  mnl_settings = list(
    alternatives  = c(alt1=1, alt2=2), 
    avail         = 1, 
    choiceVar     = CHOICE,
    utilities     = V
  )
  
  ### Compute probabilities using MNL model
  P[["model"]] = apollo_mnl(mnl_settings, functionality)
  
  ### Take product across observation for same individual
  P = apollo_panelProd(P, apollo_inputs, functionality)
  
  ### Prepare and return outputs of function
  P = apollo_prepareProb(P, apollo_inputs, functionality)
  return(P)
}
