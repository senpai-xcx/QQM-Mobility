Model run by Rowan's PC using Apollo 0.3.1 on R 4.3.1 for Windows.
Please acknowledge the use of Apollo by citing Hess & Palma (2019)
  DOI 10.1016/j.jocm.2019.100170
  www.ApolloChoiceModelling.com

Model name                                  : MNL_SP
Model description                           : Simple MNL model on PT guarantee choice
Model run at                                : 2024-01-09 17:42:55.048446
Estimation method                           : bgw
Model diagnosis                             : Relative function convergence
Optimisation diagnosis                      : Maximum found
     hessian properties                     : Negative definite
     maximum eigenvalue                     : -35.620433
     reciprocal of condition number         : 7.70285e-05
Number of individuals                       : 35
Number of rows in database                  : 175
Number of modelled outcomes                 : 175

Number of cores used                        :  1 
Model without mixing

LL(start)                                   : -121.3
LL at equal shares, LL(0)                   : -121.3
LL at observed shares, LL(C)                : -121.07
LL(final)                                   : -106.81
Rho-squared vs equal shares                  :  0.1195 
Adj.Rho-squared vs equal shares              :  0.0618 
Rho-squared vs observed shares               :  0.1178 
Adj.Rho-squared vs observed shares           :  0.0683 
AIC                                         :  227.61 
BIC                                         :  249.76 

Estimated parameters                        : 7
Time taken (hh:mm:ss)                       :  00:00:1.35 
     pre-estimation                         :  00:00:0.66 
     estimation                             :  00:00:0.21 
          initial estimation                :  00:00:0.15 
          estimation after rescaling        :  00:00:0.05 
     post-estimation                        :  00:00:0.49 
Iterations                                  :  8  
     initial estimation                     :  7 
     estimation after rescaling             :  1 

Unconstrained optimisation.

Estimates:
                  Estimate        s.e.   t.rat.(0)    Rob.s.e. Rob.t.rat.(0)
b_spatial        -0.002244    0.010249     -0.2190    0.010206       -0.2199
b_temporal        0.046980    0.027631      1.7003    0.025773        1.8229
b_drtpattern      0.316520    0.167516      1.8895    0.198527        1.5943
b_waiting        -0.008246    0.002821     -2.9234    0.003412       -2.4171
b_discount        0.002939    0.003227      0.9108    0.003180        0.9243
b_compensation    0.060940    0.121119      0.5031    0.116368        0.5237
b_price          -0.010354    0.002400     -4.3142    0.002585       -4.0053


Overview of choices for MNL model component :
                                   alt1   alt2
Times available                  175.00 175.00
Times chosen                      92.00  83.00
Percentage chosen overall         52.57  47.43
Percentage chosen when available  52.57  47.43



Classical covariance matrix:
                    b_spatial     b_temporal   b_drtpattern      b_waiting     b_discount b_compensation
b_spatial          1.0504e-04      6.769e-05     1.1233e-04     -4.596e-06      2.274e-06      2.281e-05
b_temporal          6.769e-05     7.6347e-04     2.3303e-04     -2.537e-05      2.343e-05     4.0982e-04
b_drtpattern       1.1233e-04     2.3303e-04        0.02806     -6.616e-05     -8.535e-06    -3.6052e-04
b_waiting          -4.596e-06     -2.537e-05     -6.616e-05      7.956e-06     -1.208e-06     -4.229e-06
b_discount          2.274e-06      2.343e-05     -8.535e-06     -1.208e-06      1.042e-05      8.201e-05
b_compensation      2.281e-05     4.0982e-04    -3.6052e-04     -4.229e-06      8.201e-05        0.01467
b_price            -7.324e-06     -3.361e-05     -6.697e-05      4.107e-06     -2.213e-06     -5.576e-05
                      b_price
b_spatial          -7.324e-06
b_temporal         -3.361e-05
b_drtpattern       -6.697e-05
b_waiting           4.107e-06
b_discount         -2.213e-06
b_compensation     -5.576e-05
b_price             5.760e-06

Robust covariance matrix:
                    b_spatial     b_temporal   b_drtpattern      b_waiting     b_discount b_compensation
b_spatial          1.0417e-04      3.937e-05     3.0726e-04      2.521e-06      7.448e-06     3.3924e-04
b_temporal          3.937e-05     6.6425e-04     2.4161e-04     -2.508e-05      4.337e-05    -6.0133e-04
b_drtpattern       3.0726e-04     2.4161e-04       0.039413     -3.791e-05      9.699e-05      -0.003631
b_waiting           2.521e-06     -2.508e-05     -3.791e-05      1.164e-05     -2.961e-06      7.690e-05
b_discount          7.448e-06      4.337e-05      9.699e-05     -2.961e-06      1.011e-05      4.170e-05
b_compensation     3.3924e-04    -6.0133e-04      -0.003631      7.690e-05      4.170e-05       0.013541
b_price            -1.229e-06     -2.897e-05     -5.748e-05      5.604e-06     -3.614e-06      3.209e-05
                      b_price
b_spatial          -1.229e-06
b_temporal         -2.897e-05
b_drtpattern       -5.748e-05
b_waiting           5.604e-06
b_discount         -3.614e-06
b_compensation      3.209e-05
b_price             6.682e-06

Classical correlation matrix:
                    b_spatial     b_temporal   b_drtpattern      b_waiting     b_discount b_compensation
b_spatial             1.00000        0.23905        0.06543       -0.15899        0.06875        0.01837
b_temporal            0.23905        1.00000        0.05035       -0.32550        0.26272        0.12246
b_drtpattern          0.06543        0.05035        1.00000       -0.14001       -0.01579       -0.01777
b_waiting            -0.15899       -0.32550       -0.14001        1.00000       -0.13265       -0.01238
b_discount            0.06875        0.26272       -0.01579       -0.13265        1.00000        0.20980
b_compensation        0.01837        0.12246       -0.01777       -0.01238        0.20980        1.00000
b_price              -0.29775       -0.50688       -0.16658        0.60673       -0.28571       -0.19183
                      b_price
b_spatial             -0.2978
b_temporal            -0.5069
b_drtpattern          -0.1666
b_waiting              0.6067
b_discount            -0.2857
b_compensation        -0.1918
b_price                1.0000

Robust correlation matrix:
                    b_spatial     b_temporal   b_drtpattern      b_waiting     b_discount b_compensation
b_spatial             1.00000        0.14968        0.15164        0.07239         0.2295         0.2856
b_temporal            0.14968        1.00000        0.04722       -0.28523         0.5292        -0.2005
b_drtpattern          0.15164        0.04722        1.00000       -0.05597         0.1536        -0.1572
b_waiting             0.07239       -0.28523       -0.05597        1.00000        -0.2729         0.1937
b_discount            0.22946        0.52917        0.15362       -0.27288         1.0000         0.1127
b_compensation        0.28562       -0.20050       -0.15716        0.19369         0.1127         1.0000
b_price              -0.04656       -0.43485       -0.11201        0.63539        -0.4396         0.1067
                      b_price
b_spatial            -0.04656
b_temporal           -0.43485
b_drtpattern         -0.11201
b_waiting             0.63539
b_discount           -0.43960
b_compensation        0.10669
b_price               1.00000

 20 worst outliers in terms of lowest average per choice prediction:
   ID Avg prob per choice
 1521           0.3132580
 2364           0.3612469
 2245           0.3819702
 2252           0.3937246
 2170           0.4106034
 2120           0.4511025
 2645           0.4656282
 2724           0.4668231
 1814           0.4709017
 2676           0.4769542
 1953           0.4938934
 2236           0.4970433
 2792           0.5171539
 2954           0.5177100
 1750           0.5371796
 2589           0.5391264
 2129           0.5441762
 1846           0.5691442
 1675           0.5694837
 2285           0.5889125

Changes in parameter estimates from starting values:
                   Initial    Estimate  Difference
b_spatial            0.000   -0.002244   -0.002244
b_temporal           0.000    0.046980    0.046980
b_drtpattern         0.000    0.316520    0.316520
b_waiting            0.000   -0.008246   -0.008246
b_discount           0.000    0.002939    0.002939
b_compensation       0.000    0.060940    0.060940
b_price              0.000   -0.010354   -0.010354

Settings and functions used in model definition:

apollo_control
--------------
                       Value                                    
modelName              "MNL_SP"                                 
modelDescr             "Simple MNL model on PT guarantee choice"
indivID                "RID"                                    
outputDirectory        "output/"                                
debug                  "FALSE"                                  
nCores                 "1"                                      
workInLogs             "FALSE"                                  
seed                   "13"                                     
mixing                 "FALSE"                                  
HB                     "FALSE"                                  
noValidation           "FALSE"                                  
noDiagnostics          "FALSE"                                  
calculateLLC           "TRUE"                                   
panelData              "TRUE"                                   
analyticGrad           "TRUE"                                   
analyticGrad_manualSet "FALSE"                                  
overridePanel          "FALSE"                                  
preventOverridePanel   "FALSE"                                  
noModification         "FALSE"                                  

Hessian routines attempted
--------------------------
numerical jacobian of LL analytical gradient

Scaling used in computing Hessian
---------------------------------
                     Value
b_spatial      0.002244165
b_temporal     0.046980476
b_drtpattern   0.316520122
b_waiting      0.008246102
b_discount     0.002939496
b_compensation 0.060940480
b_price        0.010353845


apollo_probabilities
----------------------
function(apollo_beta, apollo_inputs, functionality="estimate"){
  
  ### Attach inputs and detach after function exit
  apollo_attach(apollo_beta, apollo_inputs)
  on.exit(apollo_detach(apollo_beta, apollo_inputs))
  
  ### Create list of probabilities P
  P = list()
  
  ### List of utilities: these must use the same names as in mnl_settings, order is irrelevant
  V = list()
  
  V[["alt1"]]  = b_spatial  * Spatial_1 + b_temporal * Temporal_1 + b_drtpattern * DRTPattern_1 +
    b_waiting * Waitingtime_1 + b_discount * Discount_1 + b_compensation * Compensation_1 + b_price * Price_1
  V[["alt2"]]  = b_spatial  * Spatial_2 + b_temporal * Temporal_2 + b_drtpattern * DRTPattern_2 +
    b_waiting * Waitingtime_2 + b_discount * Discount_2 + b_compensation * Compensation_2 + b_price * Price_2
  
  # V[["alt1"]]  = b_price*(b_spatial  * Spatial_1 + b_temporal * Temporal_1 + b_drtpattern * DRTPattern_1 +
  #   b_waiting * Waitingtime_1 + b_discount * Discount_1 + b_compensation * Compensation_1 + Price_1)
  # V[["alt2"]]  = b_price*(b_spatial  * Spatial_2 + b_temporal * Temporal_2 + b_drtpattern * DRTPattern_2 +
  #   b_waiting * Waitingtime_2 + b_discount * Discount_2 + b_compensation * Compensation_2 + Price_2)
  # 
  
  #  V[["alt1"]]  = asc_1 + b_spatial  * Spatial_1 + b_temporal17 * (Temporal_1==17) +b_temporal24 * (Temporal_1==24) + b_drtpattern * DRTPattern_1 +
  #    b_waiting * Waitingtime_1 + b_discount * Discount_1 + b_comp_improved * (Compensation_1==2) + b_comp_generous * (Compensation_1==3) + b_price * Price_1
  #  V[["alt2"]]  = b_spatial  * Spatial_2 + + b_temporal17 * (Temporal_2==17) +b_temporal24 * (Temporal_2==24) + + b_drtpattern * DRTPattern_2 +
  #    b_waiting * Waitingtime_2 + b_discount * Discount_2 + b_comp_improved * (Compensation_2==2) + b_comp_generous * (Compensation_2==3) + b_price * Price_2
  
  
  ### Define settings for MNL model component
  mnl_settings = list(
    alternatives  = c(alt1=1, alt2=2), 
    avail         = 1, 
    choiceVar     = CHOICE,
    utilities     = V
  )
  
  ### Compute probabilities using MNL model
  P[["model"]] = apollo_mnl(mnl_settings, functionality)
  
  ### Take product across observation for same individual
  P = apollo_panelProd(P, apollo_inputs, functionality)
  
  ### Prepare and return outputs of function
  P = apollo_prepareProb(P, apollo_inputs, functionality)
  return(P)
}
