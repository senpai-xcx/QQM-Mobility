Model run by Rowan's PC using Apollo 0.3.1 on R 4.3.1 for Windows.
Please acknowledge the use of Apollo by citing Hess & Palma (2019)
  DOI 10.1016/j.jocm.2019.100170
  www.ApolloChoiceModelling.com

Model name                                  : MNL_SP
Model description                           : Simple MNL model on PT guarantee choice
Model run at                                : 2024-01-09 17:41:13.366139
Estimation method                           : bgw
Model diagnosis                             : Relative function convergence
Optimisation diagnosis                      : Maximum found
     hessian properties                     : Negative definite
     maximum eigenvalue                     : -94.608348
     reciprocal of condition number         : 7.6411e-05
Number of individuals                       : 104
Number of rows in database                  : 520
Number of modelled outcomes                 : 520

Number of cores used                        :  1 
Model without mixing

LL(start)                                   : -360.44
LL at equal shares, LL(0)                   : -360.44
LL at observed shares, LL(C)                : -360.44
LL(final)                                   : -298.3
Rho-squared vs equal shares                  :  0.1724 
Adj.Rho-squared vs equal shares              :  0.153 
Rho-squared vs observed shares               :  0.1724 
Adj.Rho-squared vs observed shares           :  0.1557 
AIC                                         :  610.6 
BIC                                         :  640.38 

Estimated parameters                        : 7
Time taken (hh:mm:ss)                       :  00:00:1.33 
     pre-estimation                         :  00:00:0.46 
     estimation                             :  00:00:0.13 
          initial estimation                :  00:00:0.1 
          estimation after rescaling        :  00:00:0.03 
     post-estimation                        :  00:00:0.73 
Iterations                                  :  8  
     initial estimation                     :  7 
     estimation after rescaling             :  1 

Unconstrained optimisation.

Estimates:
                  Estimate        s.e.   t.rat.(0)    Rob.s.e. Rob.t.rat.(0)
b_spatial         0.023690    0.006419       3.690    0.007155         3.311
b_temporal        0.077533    0.016946       4.575    0.018144         4.273
b_drtpattern      0.174556    0.102050       1.710    0.126996         1.375
b_waiting        -0.003290    0.001672      -1.968    0.001830        -1.798
b_discount        0.001910    0.001873       1.020    0.001713         1.115
b_compensation    0.074564    0.070944       1.051    0.069880         1.067
b_price          -0.013737    0.001605      -8.557    0.002082        -6.599


Overview of choices for MNL model component :
                                 alt1 alt2
Times available                   520  520
Times chosen                      260  260
Percentage chosen overall          50   50
Percentage chosen when available   50   50



Classical covariance matrix:
                    b_spatial     b_temporal   b_drtpattern      b_waiting     b_discount b_compensation
b_spatial           4.121e-05      2.942e-05     1.0455e-04     -1.478e-06      1.855e-06      1.898e-05
b_temporal          2.942e-05     2.8717e-04     1.7663e-04     -9.603e-06      6.237e-06     1.9921e-04
b_drtpattern       1.0455e-04     1.7663e-04        0.01041     -1.136e-05      6.085e-06     9.1182e-04
b_waiting          -1.478e-06     -9.603e-06     -1.136e-05      2.794e-06     -7.642e-07     -1.128e-05
b_discount          1.855e-06      6.237e-06      6.085e-06     -7.642e-07      3.507e-06      2.148e-05
b_compensation      1.898e-05     1.9921e-04     9.1182e-04     -1.128e-05      2.148e-05       0.005033
b_price            -3.853e-06     -1.583e-05     -2.762e-05      1.634e-06     -1.108e-06     -2.253e-05
                      b_price
b_spatial          -3.853e-06
b_temporal         -1.583e-05
b_drtpattern       -2.762e-05
b_waiting           1.634e-06
b_discount         -1.108e-06
b_compensation     -2.253e-05
b_price             2.577e-06

Robust covariance matrix:
                    b_spatial     b_temporal   b_drtpattern      b_waiting     b_discount b_compensation
b_spatial           5.120e-05      4.249e-05     3.5364e-04     -4.087e-06      2.255e-06      4.535e-05
b_temporal          4.249e-05     3.2921e-04     4.9152e-04     -1.147e-05      4.273e-06     2.6534e-04
b_drtpattern       3.5364e-04     4.9152e-04       0.016128     -5.379e-05      1.875e-05       0.001033
b_waiting          -4.087e-06     -1.147e-05     -5.379e-05      3.350e-06     -8.506e-07     -5.101e-06
b_discount          2.255e-06      4.273e-06      1.875e-05     -8.506e-07      2.933e-06      1.329e-05
b_compensation      4.535e-05     2.6534e-04       0.001033     -5.101e-06      1.329e-05       0.004883
b_price            -8.315e-06     -2.000e-05     -7.736e-05      2.106e-06     -1.327e-06     -2.683e-05
                      b_price
b_spatial          -8.315e-06
b_temporal         -2.000e-05
b_drtpattern       -7.736e-05
b_waiting           2.106e-06
b_discount         -1.327e-06
b_compensation     -2.683e-05
b_price             4.334e-06

Classical correlation matrix:
                    b_spatial     b_temporal   b_drtpattern      b_waiting     b_discount b_compensation
b_spatial             1.00000         0.2705        0.15960       -0.13775        0.15434        0.04167
b_temporal            0.27047         1.0000        0.10214       -0.33901        0.19653        0.16570
b_drtpattern          0.15960         0.1021        1.00000       -0.06657        0.03184        0.12594
b_waiting            -0.13775        -0.3390       -0.06657        1.00000       -0.24411       -0.09507
b_discount            0.15434         0.1965        0.03184       -0.24411        1.00000        0.16165
b_compensation        0.04167         0.1657        0.12594       -0.09507        0.16165        1.00000
b_price              -0.37384        -0.5820       -0.16858        0.60879       -0.36860       -0.19778
                      b_price
b_spatial             -0.3738
b_temporal            -0.5820
b_drtpattern          -0.1686
b_waiting              0.6088
b_discount            -0.3686
b_compensation        -0.1978
b_price                1.0000

Robust correlation matrix:
                    b_spatial     b_temporal   b_drtpattern      b_waiting     b_discount b_compensation
b_spatial             1.00000         0.3273        0.38917       -0.31206        0.18404        0.09069
b_temporal            0.32727         1.0000        0.21331       -0.34548        0.13751        0.20927
b_drtpattern          0.38917         0.2133        1.00000       -0.23142        0.08621        0.11639
b_waiting            -0.31206        -0.3455       -0.23142        1.00000       -0.27135       -0.03988
b_discount            0.18404         0.1375        0.08621       -0.27135        1.00000        0.11105
b_compensation        0.09069         0.2093        0.11639       -0.03988        0.11105        1.00000
b_price              -0.55823        -0.5294       -0.29262        0.55281       -0.37230       -0.18442
                      b_price
b_spatial             -0.5582
b_temporal            -0.5294
b_drtpattern          -0.2926
b_waiting              0.5528
b_discount            -0.3723
b_compensation        -0.1844
b_price                1.0000

 20 worst outliers in terms of lowest average per choice prediction:
   ID Avg prob per choice
 1496           0.2211403
 1907           0.2364451
 2322           0.2396945
 2708           0.2991397
 2279           0.3155680
 2635           0.3481900
 2481           0.3837021
 2765           0.3846034
 2912           0.3916504
 2613           0.3923037
 1986           0.3941754
 2592           0.3967513
 1529           0.4063841
 1879           0.4099891
 2787           0.4152878
 3243           0.4169347
 2487           0.4170874
 1789           0.4197979
 3221           0.4381863
 2711           0.4383284

Changes in parameter estimates from starting values:
                   Initial    Estimate  Difference
b_spatial            0.000    0.023690    0.023690
b_temporal           0.000    0.077533    0.077533
b_drtpattern         0.000    0.174556    0.174556
b_waiting            0.000   -0.003290   -0.003290
b_discount           0.000    0.001910    0.001910
b_compensation       0.000    0.074564    0.074564
b_price              0.000   -0.013737   -0.013737

Settings and functions used in model definition:

apollo_control
--------------
                       Value                                    
modelName              "MNL_SP"                                 
modelDescr             "Simple MNL model on PT guarantee choice"
indivID                "RID"                                    
outputDirectory        "output/"                                
debug                  "FALSE"                                  
nCores                 "1"                                      
workInLogs             "FALSE"                                  
seed                   "13"                                     
mixing                 "FALSE"                                  
HB                     "FALSE"                                  
noValidation           "FALSE"                                  
noDiagnostics          "FALSE"                                  
calculateLLC           "TRUE"                                   
panelData              "TRUE"                                   
analyticGrad           "TRUE"                                   
analyticGrad_manualSet "FALSE"                                  
overridePanel          "FALSE"                                  
preventOverridePanel   "FALSE"                                  
noModification         "FALSE"                                  

Hessian routines attempted
--------------------------
numerical jacobian of LL analytical gradient

Scaling used in computing Hessian
---------------------------------
                     Value
b_spatial      0.023690220
b_temporal     0.077532572
b_drtpattern   0.174555992
b_waiting      0.003290179
b_discount     0.001909693
b_compensation 0.074564302
b_price        0.013736813


apollo_probabilities
----------------------
function(apollo_beta, apollo_inputs, functionality="estimate"){
  
  ### Attach inputs and detach after function exit
  apollo_attach(apollo_beta, apollo_inputs)
  on.exit(apollo_detach(apollo_beta, apollo_inputs))
  
  ### Create list of probabilities P
  P = list()
  
  ### List of utilities: these must use the same names as in mnl_settings, order is irrelevant
  V = list()
  
  V[["alt1"]]  = b_spatial  * Spatial_1 + b_temporal * Temporal_1 + b_drtpattern * DRTPattern_1 +
    b_waiting * Waitingtime_1 + b_discount * Discount_1 + b_compensation * Compensation_1 + b_price * Price_1
  V[["alt2"]]  = b_spatial  * Spatial_2 + b_temporal * Temporal_2 + b_drtpattern * DRTPattern_2 +
    b_waiting * Waitingtime_2 + b_discount * Discount_2 + b_compensation * Compensation_2 + b_price * Price_2
  
  # V[["alt1"]]  = b_price*(b_spatial  * Spatial_1 + b_temporal * Temporal_1 + b_drtpattern * DRTPattern_1 +
  #   b_waiting * Waitingtime_1 + b_discount * Discount_1 + b_compensation * Compensation_1 + Price_1)
  # V[["alt2"]]  = b_price*(b_spatial  * Spatial_2 + b_temporal * Temporal_2 + b_drtpattern * DRTPattern_2 +
  #   b_waiting * Waitingtime_2 + b_discount * Discount_2 + b_compensation * Compensation_2 + Price_2)
  # 
  
  #  V[["alt1"]]  = asc_1 + b_spatial  * Spatial_1 + b_temporal17 * (Temporal_1==17) +b_temporal24 * (Temporal_1==24) + b_drtpattern * DRTPattern_1 +
  #    b_waiting * Waitingtime_1 + b_discount * Discount_1 + b_comp_improved * (Compensation_1==2) + b_comp_generous * (Compensation_1==3) + b_price * Price_1
  #  V[["alt2"]]  = b_spatial  * Spatial_2 + + b_temporal17 * (Temporal_2==17) +b_temporal24 * (Temporal_2==24) + + b_drtpattern * DRTPattern_2 +
  #    b_waiting * Waitingtime_2 + b_discount * Discount_2 + b_comp_improved * (Compensation_2==2) + b_comp_generous * (Compensation_2==3) + b_price * Price_2
  
  
  ### Define settings for MNL model component
  mnl_settings = list(
    alternatives  = c(alt1=1, alt2=2), 
    avail         = 1, 
    choiceVar     = CHOICE,
    utilities     = V
  )
  
  ### Compute probabilities using MNL model
  P[["model"]] = apollo_mnl(mnl_settings, functionality)
  
  ### Take product across observation for same individual
  P = apollo_panelProd(P, apollo_inputs, functionality)
  
  ### Prepare and return outputs of function
  P = apollo_prepareProb(P, apollo_inputs, functionality)
  return(P)
}
