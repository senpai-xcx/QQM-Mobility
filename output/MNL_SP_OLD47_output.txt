Model run by Rowan's PC using Apollo 0.3.1 on R 4.3.1 for Windows.
Please acknowledge the use of Apollo by citing Hess & Palma (2019)
  DOI 10.1016/j.jocm.2019.100170
  www.ApolloChoiceModelling.com

Model name                                  : MNL_SP
Model description                           : Simple MNL model on PT guarantee choice
Model run at                                : 2024-01-09 21:01:02.573903
Estimation method                           : bgw
Model diagnosis                             : Relative function convergence
Optimisation diagnosis                      : Maximum found
     hessian properties                     : Negative definite
     maximum eigenvalue                     : -85.522914
     reciprocal of condition number         : 7.59318e-05
Number of individuals                       : 88
Number of rows in database                  : 440
Number of modelled outcomes                 : 440

Number of cores used                        :  1 
Model without mixing

LL(start)                                   : -304.98
LL at equal shares, LL(0)                   : -304.98
LL at observed shares, LL(C)                : -304.76
LL(final)                                   : -260.63
Rho-squared vs equal shares                  :  0.1454 
Adj.Rho-squared vs equal shares              :  0.1225 
Rho-squared vs observed shares               :  0.1448 
Adj.Rho-squared vs observed shares           :  0.1251 
AIC                                         :  535.26 
BIC                                         :  563.87 

Estimated parameters                        : 7
Time taken (hh:mm:ss)                       :  00:00:1.62 
     pre-estimation                         :  00:00:0.89 
     estimation                             :  00:00:0.15 
          initial estimation                :  00:00:0.1 
          estimation after rescaling        :  00:00:0.05 
     post-estimation                        :  00:00:0.58 
Iterations                                  :  8  
     initial estimation                     :  7 
     estimation after rescaling             :  1 

Unconstrained optimisation.

Estimates:
                  Estimate        s.e.   t.rat.(0)    Rob.s.e. Rob.t.rat.(0)
b_spatial         0.014209    0.006601       2.152    0.006806         2.088
b_temporal        0.079846    0.018900       4.225    0.019426         4.110
b_drtpattern      0.283093    0.107915       2.623    0.124071         2.282
b_waiting        -0.007808    0.001786      -4.373    0.001703        -4.585
b_discount        0.004572    0.002106       2.171    0.001947         2.348
b_compensation    0.081024    0.075526       1.073    0.076851         1.054
b_price          -0.013213    0.001681      -7.858    0.001815        -7.281


Overview of choices for MNL model component :
                                   alt1   alt2
Times available                  440.00 440.00
Times chosen                     227.00 213.00
Percentage chosen overall         51.59  48.41
Percentage chosen when available  51.59  48.41



Classical covariance matrix:
                    b_spatial     b_temporal   b_drtpattern      b_waiting     b_discount b_compensation
b_spatial           4.358e-05      2.109e-05      9.502e-05     -2.185e-06      1.526e-06     -1.444e-05
b_temporal          2.109e-05     3.5720e-04     1.9319e-04     -1.239e-05      7.548e-06     2.8352e-04
b_drtpattern        9.502e-05     1.9319e-04        0.01165     -1.320e-05      2.142e-06     5.0232e-04
b_waiting          -2.185e-06     -1.239e-05     -1.320e-05      3.188e-06     -1.145e-06     -1.442e-05
b_discount          1.526e-06      7.548e-06      2.142e-06     -1.145e-06      4.435e-06      1.982e-05
b_compensation     -1.444e-05     2.8352e-04     5.0232e-04     -1.442e-05      1.982e-05       0.005704
b_price            -3.318e-06     -1.900e-05     -3.062e-05      1.859e-06     -1.343e-06     -3.633e-05
                      b_price
b_spatial          -3.318e-06
b_temporal         -1.900e-05
b_drtpattern       -3.062e-05
b_waiting           1.859e-06
b_discount         -1.343e-06
b_compensation     -3.633e-05
b_price             2.827e-06

Robust covariance matrix:
                    b_spatial     b_temporal   b_drtpattern      b_waiting     b_discount b_compensation
b_spatial           4.632e-05      1.836e-05      3.521e-05     -2.247e-06     -2.486e-07     -1.336e-06
b_temporal          1.836e-05     3.7736e-04     -5.360e-05     -7.665e-06      1.323e-06     1.7536e-04
b_drtpattern        3.521e-05     -5.360e-05        0.01539     -3.498e-06      1.998e-05    -2.8281e-04
b_waiting          -2.247e-06     -7.665e-06     -3.498e-06      2.900e-06     -1.157e-06     -2.334e-06
b_discount         -2.486e-07      1.323e-06      1.998e-05     -1.157e-06      3.790e-06     -6.716e-07
b_compensation     -1.336e-06     1.7536e-04    -2.8281e-04     -2.334e-06     -6.716e-07       0.005906
b_price            -4.301e-06     -1.629e-05      5.400e-07      1.547e-06     -1.106e-06     -3.076e-05
                      b_price
b_spatial          -4.301e-06
b_temporal         -1.629e-05
b_drtpattern        5.400e-07
b_waiting           1.547e-06
b_discount         -1.106e-06
b_compensation     -3.076e-05
b_price             3.293e-06

Classical correlation matrix:
                    b_spatial     b_temporal   b_drtpattern      b_waiting     b_discount b_compensation
b_spatial             1.00000        0.16903       0.133384       -0.18539       0.109806       -0.02897
b_temporal            0.16903        1.00000       0.094723       -0.36715       0.189654        0.19863
b_drtpattern          0.13338        0.09472       1.000000       -0.06852       0.009424        0.06163
b_waiting            -0.18539       -0.36715      -0.068516        1.00000      -0.304520       -0.10695
b_discount            0.10981        0.18965       0.009424       -0.30452       1.000000        0.12462
b_compensation       -0.02897        0.19863       0.061631       -0.10695       0.124616        1.00000
b_price              -0.29889       -0.59780      -0.168717        0.61923      -0.379203       -0.28611
                      b_price
b_spatial             -0.2989
b_temporal            -0.5978
b_drtpattern          -0.1687
b_waiting              0.6192
b_discount            -0.3792
b_compensation        -0.2861
b_price                1.0000

Robust correlation matrix:
                    b_spatial     b_temporal   b_drtpattern      b_waiting     b_discount b_compensation
b_spatial            1.000000        0.13885       0.041701       -0.19383      -0.018760      -0.002553
b_temporal           0.138853        1.00000      -0.022240       -0.23169       0.034973       0.117462
b_drtpattern         0.041701       -0.02224       1.000000       -0.01656       0.082718      -0.029660
b_waiting           -0.193832       -0.23169      -0.016556        1.00000      -0.349057      -0.017836
b_discount          -0.018760        0.03497       0.082718       -0.34906       1.000000      -0.004489
b_compensation      -0.002553        0.11746      -0.029660       -0.01784      -0.004489       1.000000
b_price             -0.348300       -0.46212       0.002399        0.50047      -0.313106      -0.220570
                      b_price
b_spatial           -0.348300
b_temporal          -0.462125
b_drtpattern         0.002399
b_waiting            0.500474
b_discount          -0.313106
b_compensation      -0.220570
b_price              1.000000

 20 worst outliers in terms of lowest average per choice prediction:
   ID Avg prob per choice
 1616           0.2999825
 2279           0.3423277
 2364           0.3453240
 2002           0.3607867
 2263           0.3623526
 2828           0.3980502
 2281           0.4161911
 1814           0.4264363
 2159           0.4266302
 2054           0.4366003
 2120           0.4378767
 1914           0.4388233
 2967           0.4430449
 2368           0.4498196
 2656           0.4594915
 2739           0.4601865
 2129           0.4639256
 1585           0.4653373
 3290           0.4838483
 1976           0.4843917

Changes in parameter estimates from starting values:
                   Initial    Estimate  Difference
b_spatial            0.000    0.014209    0.014209
b_temporal           0.000    0.079846    0.079846
b_drtpattern         0.000    0.283093    0.283093
b_waiting            0.000   -0.007808   -0.007808
b_discount           0.000    0.004572    0.004572
b_compensation       0.000    0.081024    0.081024
b_price              0.000   -0.013213   -0.013213

Settings and functions used in model definition:

apollo_control
--------------
                       Value                                    
modelName              "MNL_SP"                                 
modelDescr             "Simple MNL model on PT guarantee choice"
indivID                "RID"                                    
outputDirectory        "output/"                                
debug                  "FALSE"                                  
nCores                 "1"                                      
workInLogs             "FALSE"                                  
seed                   "13"                                     
mixing                 "FALSE"                                  
HB                     "FALSE"                                  
noValidation           "FALSE"                                  
noDiagnostics          "FALSE"                                  
calculateLLC           "TRUE"                                   
panelData              "TRUE"                                   
analyticGrad           "TRUE"                                   
analyticGrad_manualSet "FALSE"                                  
overridePanel          "FALSE"                                  
preventOverridePanel   "FALSE"                                  
noModification         "FALSE"                                  

Hessian routines attempted
--------------------------
numerical jacobian of LL analytical gradient

Scaling used in computing Hessian
---------------------------------
                     Value
b_spatial      0.014208606
b_temporal     0.079845884
b_drtpattern   0.283092856
b_waiting      0.007808415
b_discount     0.004571632
b_compensation 0.081024117
b_price        0.013212764


apollo_probabilities
----------------------
function(apollo_beta, apollo_inputs, functionality="estimate"){
  
  ### Attach inputs and detach after function exit
  apollo_attach(apollo_beta, apollo_inputs)
  on.exit(apollo_detach(apollo_beta, apollo_inputs))
  
  ### Create list of probabilities P
  P = list()
  
  ### List of utilities: these must use the same names as in mnl_settings, order is irrelevant
  V = list()
  
  V[["alt1"]]  = b_spatial  * Spatial_1 + b_temporal * Temporal_1 + b_drtpattern * DRTPattern_1 +
    b_waiting * Waitingtime_1 + b_discount * Discount_1 + b_compensation * Compensation_1 + b_price * Price_1
  V[["alt2"]]  = b_spatial  * Spatial_2 + b_temporal * Temporal_2 + b_drtpattern * DRTPattern_2 +
    b_waiting * Waitingtime_2 + b_discount * Discount_2 + b_compensation * Compensation_2 + b_price * Price_2
  
  # V[["alt1"]]  = b_price*(b_spatial  * Spatial_1 + b_temporal * Temporal_1 + b_drtpattern * DRTPattern_1 +
  #   b_waiting * Waitingtime_1 + b_discount * Discount_1 + b_compensation * Compensation_1 + Price_1)
  # V[["alt2"]]  = b_price*(b_spatial  * Spatial_2 + b_temporal * Temporal_2 + b_drtpattern * DRTPattern_2 +
  #   b_waiting * Waitingtime_2 + b_discount * Discount_2 + b_compensation * Compensation_2 + Price_2)
  # 
  
  #  V[["alt1"]]  = asc_1 + b_spatial  * Spatial_1 + b_temporal17 * (Temporal_1==17) +b_temporal24 * (Temporal_1==24) + b_drtpattern * DRTPattern_1 +
  #    b_waiting * Waitingtime_1 + b_discount * Discount_1 + b_comp_improved * (Compensation_1==2) + b_comp_generous * (Compensation_1==3) + b_price * Price_1
  #  V[["alt2"]]  = b_spatial  * Spatial_2 + + b_temporal17 * (Temporal_2==17) +b_temporal24 * (Temporal_2==24) + + b_drtpattern * DRTPattern_2 +
  #    b_waiting * Waitingtime_2 + b_discount * Discount_2 + b_comp_improved * (Compensation_2==2) + b_comp_generous * (Compensation_2==3) + b_price * Price_2
  
  
  ### Define settings for MNL model component
  mnl_settings = list(
    alternatives  = c(alt1=1, alt2=2), 
    avail         = 1, 
    choiceVar     = CHOICE,
    utilities     = V
  )
  
  ### Compute probabilities using MNL model
  P[["model"]] = apollo_mnl(mnl_settings, functionality)
  
  ### Take product across observation for same individual
  P = apollo_panelProd(P, apollo_inputs, functionality)
  
  ### Prepare and return outputs of function
  P = apollo_prepareProb(P, apollo_inputs, functionality)
  return(P)
}
