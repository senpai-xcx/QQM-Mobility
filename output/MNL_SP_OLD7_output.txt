Model run by Rowan's PC using Apollo 0.3.1 on R 4.3.1 for Windows.
Please acknowledge the use of Apollo by citing Hess & Palma (2019)
  DOI 10.1016/j.jocm.2019.100170
  www.ApolloChoiceModelling.com

Model name                                  : MNL_SP
Model description                           : Simple MNL model on PT guarantee choice
Model run at                                : 2024-01-09 17:16:30.522811
Estimation method                           : bgw
Model diagnosis                             : Relative function convergence
Optimisation diagnosis                      : Maximum found
     hessian properties                     : Negative definite
     maximum eigenvalue                     : -25.903014
     reciprocal of condition number         : 7.2433e-05
Number of individuals                       : 25
Number of rows in database                  : 125
Number of modelled outcomes                 : 125

Number of cores used                        :  1 
Model without mixing

LL(start)                                   : -86.64
LL at equal shares, LL(0)                   : -86.64
LL at observed shares, LL(C)                : -86.45
LL(final)                                   : -78.36
Rho-squared vs equal shares                  :  0.0956 
Adj.Rho-squared vs equal shares              :  0.0148 
Rho-squared vs observed shares               :  0.0936 
Adj.Rho-squared vs observed shares           :  0.0241 
AIC                                         :  170.72 
BIC                                         :  190.52 

Estimated parameters                        : 7
Time taken (hh:mm:ss)                       :  00:00:1.58 
     pre-estimation                         :  00:00:0.83 
     estimation                             :  00:00:0.21 
          initial estimation                :  00:00:0.16 
          estimation after rescaling        :  00:00:0.04 
     post-estimation                        :  00:00:0.55 
Iterations                                  :  8  
     initial estimation                     :  7 
     estimation after rescaling             :  1 

Unconstrained optimisation.

Estimates:
                  Estimate        s.e.   t.rat.(0)    Rob.s.e. Rob.t.rat.(0)
b_spatial         0.015531    0.012145      1.2788    0.011590        1.3401
b_temporal        0.083986    0.035241      2.3832    0.026071        3.2214
b_drtpattern      0.137366    0.196351      0.6996    0.169458        0.8106
b_waiting        -0.007650    0.003312     -2.3099    0.003669       -2.0853
b_discount        0.001619    0.003664      0.4417    0.004477        0.3615
b_compensation    0.062566    0.134436      0.4654    0.123153        0.5080
b_price          -0.010530    0.003031     -3.4744    0.003106       -3.3905


Overview of choices for MNL model component :
                                  alt1  alt2
Times available                  125.0 125.0
Times chosen                      66.0  59.0
Percentage chosen overall         52.8  47.2
Percentage chosen when available  52.8  47.2



Classical covariance matrix:
                    b_spatial     b_temporal   b_drtpattern      b_waiting     b_discount b_compensation
b_spatial          1.4750e-04     1.1610e-04     3.3858e-04     -9.975e-06      5.522e-06      7.245e-05
b_temporal         1.1610e-04       0.001242       0.001028     -3.532e-05      2.733e-05     6.6505e-04
b_drtpattern       3.3858e-04       0.001028       0.038554      9.659e-06     -4.689e-05    -6.6341e-04
b_waiting          -9.975e-06     -3.532e-05      9.659e-06      1.097e-05     -2.274e-06      1.408e-05
b_discount          5.522e-06      2.733e-05     -4.689e-05     -2.274e-06      1.343e-05      3.369e-06
b_compensation      7.245e-05     6.6505e-04    -6.6341e-04      1.408e-05      3.369e-06        0.01807
b_price            -1.386e-05     -6.482e-05     -5.217e-05      6.311e-06     -3.172e-06     -4.205e-05
                      b_price
b_spatial          -1.386e-05
b_temporal         -6.482e-05
b_drtpattern       -5.217e-05
b_waiting           6.311e-06
b_discount         -3.172e-06
b_compensation     -4.205e-05
b_price             9.186e-06

Robust covariance matrix:
                    b_spatial     b_temporal   b_drtpattern      b_waiting     b_discount b_compensation
b_spatial          1.3432e-04      3.252e-05       0.001130     -1.793e-05      1.800e-05     6.0855e-04
b_temporal          3.252e-05     6.7970e-04     3.4440e-04      1.556e-05      1.156e-06       0.001045
b_drtpattern         0.001130     3.4440e-04       0.028716     -3.087e-05     -8.116e-05       0.007179
b_waiting          -1.793e-05      1.556e-05     -3.087e-05      1.346e-05     -8.358e-06     -3.870e-06
b_discount          1.800e-05      1.156e-06     -8.116e-05     -8.358e-06      2.005e-05      6.958e-05
b_compensation     6.0855e-04       0.001045       0.007179     -3.870e-06      6.958e-05       0.015167
b_price            -1.626e-05     -2.829e-05    -1.7626e-04      6.273e-06     -4.595e-06     -5.599e-05
                      b_price
b_spatial          -1.626e-05
b_temporal         -2.829e-05
b_drtpattern      -1.7626e-04
b_waiting           6.273e-06
b_discount         -4.595e-06
b_compensation     -5.599e-05
b_price             9.647e-06

Classical correlation matrix:
                    b_spatial     b_temporal   b_drtpattern      b_waiting     b_discount b_compensation
b_spatial             1.00000         0.2713        0.14198       -0.24799       0.124086       0.044375
b_temporal            0.27126         1.0000        0.14854       -0.30258       0.211613       0.140376
b_drtpattern          0.14198         0.1485        1.00000        0.01485      -0.065167      -0.025132
b_waiting            -0.24799        -0.3026        0.01485        1.00000      -0.187335       0.031613
b_discount            0.12409         0.2116       -0.06517       -0.18733       1.000000       0.006839
b_compensation        0.04437         0.1404       -0.02513        0.03161       0.006839       1.000000
b_price              -0.37657        -0.6069       -0.08766        0.62866      -0.285599      -0.103203
                      b_price
b_spatial            -0.37657
b_temporal           -0.60686
b_drtpattern         -0.08766
b_waiting             0.62866
b_discount           -0.28560
b_compensation       -0.10320
b_price               1.00000

Robust correlation matrix:
                    b_spatial     b_temporal   b_drtpattern      b_waiting     b_discount b_compensation
b_spatial              1.0000       0.107614        0.57536      -0.421659       0.346828       0.426362
b_temporal             0.1076       1.000000        0.07795       0.162661       0.009899       0.325366
b_drtpattern           0.5754       0.077955        1.00000      -0.049652      -0.106977       0.344015
b_waiting             -0.4217       0.162661       -0.04965       1.000000      -0.508823      -0.008567
b_discount             0.3468       0.009899       -0.10698      -0.508823       1.000000       0.126187
b_compensation         0.4264       0.325366        0.34401      -0.008567       0.126187       1.000000
b_price               -0.4516      -0.349321       -0.33490       0.550565      -0.330453      -0.146373
                      b_price
b_spatial             -0.4516
b_temporal            -0.3493
b_drtpattern          -0.3349
b_waiting              0.5506
b_discount            -0.3305
b_compensation        -0.1464
b_price                1.0000

 20 worst outliers in terms of lowest average per choice prediction:
   ID Avg prob per choice
 2708           0.3768705
 2279           0.4089368
 1814           0.4518669
 1789           0.4652904
 1914           0.4659108
 2814           0.4863191
 2038           0.4936036
 2764           0.4983266
 1928           0.5095194
 1610           0.5229931
 2000           0.5257547
 3150           0.5324172
 2652           0.5327300
 2031           0.5338015
 2684           0.5427033
 2589           0.5654978
 2942           0.5737409
 2077           0.5797995
 1675           0.5863572
 2342           0.5941873

Changes in parameter estimates from starting values:
                   Initial    Estimate  Difference
b_spatial            0.000    0.015531    0.015531
b_temporal           0.000    0.083986    0.083986
b_drtpattern         0.000    0.137366    0.137366
b_waiting            0.000   -0.007650   -0.007650
b_discount           0.000    0.001619    0.001619
b_compensation       0.000    0.062566    0.062566
b_price              0.000   -0.010530   -0.010530

Settings and functions used in model definition:

apollo_control
--------------
                       Value                                    
modelName              "MNL_SP"                                 
modelDescr             "Simple MNL model on PT guarantee choice"
indivID                "RID"                                    
outputDirectory        "output/"                                
debug                  "FALSE"                                  
nCores                 "1"                                      
workInLogs             "FALSE"                                  
seed                   "13"                                     
mixing                 "FALSE"                                  
HB                     "FALSE"                                  
noValidation           "FALSE"                                  
noDiagnostics          "FALSE"                                  
calculateLLC           "TRUE"                                   
panelData              "TRUE"                                   
analyticGrad           "TRUE"                                   
analyticGrad_manualSet "FALSE"                                  
overridePanel          "FALSE"                                  
preventOverridePanel   "FALSE"                                  
noModification         "FALSE"                                  

Hessian routines attempted
--------------------------
numerical jacobian of LL analytical gradient

Scaling used in computing Hessian
---------------------------------
                     Value
b_spatial      0.015531449
b_temporal     0.083986335
b_drtpattern   0.137365857
b_waiting      0.007650241
b_discount     0.001618719
b_compensation 0.062566104
b_price        0.010530468


apollo_probabilities
----------------------
function(apollo_beta, apollo_inputs, functionality="estimate"){
  
  ### Attach inputs and detach after function exit
  apollo_attach(apollo_beta, apollo_inputs)
  on.exit(apollo_detach(apollo_beta, apollo_inputs))
  
  ### Create list of probabilities P
  P = list()
  
  ### List of utilities: these must use the same names as in mnl_settings, order is irrelevant
  V = list()
  
  V[["alt1"]]  = b_spatial  * Spatial_1 + b_temporal * Temporal_1 + b_drtpattern * DRTPattern_1 +
    b_waiting * Waitingtime_1 + b_discount * Discount_1 + b_compensation * Compensation_1 + b_price * Price_1
  V[["alt2"]]  = b_spatial  * Spatial_2 + b_temporal * Temporal_2 + b_drtpattern * DRTPattern_2 +
    b_waiting * Waitingtime_2 + b_discount * Discount_2 + b_compensation * Compensation_2 + b_price * Price_2
  
  # V[["alt1"]]  = b_price*(b_spatial  * Spatial_1 + b_temporal * Temporal_1 + b_drtpattern * DRTPattern_1 +
  #   b_waiting * Waitingtime_1 + b_discount * Discount_1 + b_compensation * Compensation_1 + Price_1)
  # V[["alt2"]]  = b_price*(b_spatial  * Spatial_2 + b_temporal * Temporal_2 + b_drtpattern * DRTPattern_2 +
  #   b_waiting * Waitingtime_2 + b_discount * Discount_2 + b_compensation * Compensation_2 + Price_2)
  # 
  
  #  V[["alt1"]]  = asc_1 + b_spatial  * Spatial_1 + b_temporal17 * (Temporal_1==17) +b_temporal24 * (Temporal_1==24) + b_drtpattern * DRTPattern_1 +
  #    b_waiting * Waitingtime_1 + b_discount * Discount_1 + b_comp_improved * (Compensation_1==2) + b_comp_generous * (Compensation_1==3) + b_price * Price_1
  #  V[["alt2"]]  = b_spatial  * Spatial_2 + + b_temporal17 * (Temporal_2==17) +b_temporal24 * (Temporal_2==24) + + b_drtpattern * DRTPattern_2 +
  #    b_waiting * Waitingtime_2 + b_discount * Discount_2 + b_comp_improved * (Compensation_2==2) + b_comp_generous * (Compensation_2==3) + b_price * Price_2
  
  
  ### Define settings for MNL model component
  mnl_settings = list(
    alternatives  = c(alt1=1, alt2=2), 
    avail         = 1, 
    choiceVar     = CHOICE,
    utilities     = V
  )
  
  ### Compute probabilities using MNL model
  P[["model"]] = apollo_mnl(mnl_settings, functionality)
  
  ### Take product across observation for same individual
  P = apollo_panelProd(P, apollo_inputs, functionality)
  
  ### Prepare and return outputs of function
  P = apollo_prepareProb(P, apollo_inputs, functionality)
  return(P)
}
