Model run by Rowan's PC using Apollo 0.3.1 on R 4.3.1 for Windows.
Please acknowledge the use of Apollo by citing Hess & Palma (2019)
  DOI 10.1016/j.jocm.2019.100170
  www.ApolloChoiceModelling.com

Model name                                  : MNL_SP
Model description                           : Simple MNL model on PT guarantee choice
Model run at                                : 2024-01-09 20:57:03.742429
Estimation method                           : bgw
Model diagnosis                             : Relative function convergence
Optimisation diagnosis                      : Maximum found
     hessian properties                     : Negative definite
     maximum eigenvalue                     : -242.717857
     reciprocal of condition number         : 7.32624e-05
Number of individuals                       : 224
Number of rows in database                  : 1120
Number of modelled outcomes                 : 1120

Number of cores used                        :  1 
Model without mixing

LL(start)                                   : -776.32
LL at equal shares, LL(0)                   : -776.32
LL at observed shares, LL(C)                : -773.32
LL(final)                                   : -705.6
Rho-squared vs equal shares                  :  0.0911 
Adj.Rho-squared vs equal shares              :  0.0821 
Rho-squared vs observed shares               :  0.0876 
Adj.Rho-squared vs observed shares           :  0.0798 
AIC                                         :  1425.21 
BIC                                         :  1460.36 

Estimated parameters                        : 7
Time taken (hh:mm:ss)                       :  00:00:1.9 
     pre-estimation                         :  00:00:0.83 
     estimation                             :  00:00:0.58 
          initial estimation                :  00:00:0.53 
          estimation after rescaling        :  00:00:0.05 
     post-estimation                        :  00:00:0.5 
Iterations                                  :  7  
     initial estimation                     :  6 
     estimation after rescaling             :  1 

Unconstrained optimisation.

Estimates:
                  Estimate        s.e.   t.rat.(0)    Rob.s.e. Rob.t.rat.(0)
b_spatial         0.012725    0.004016       3.169    0.004011         3.173
b_temporal        0.079602    0.011361       7.006    0.012075         6.592
b_drtpattern      0.124105    0.064178       1.934    0.070661         1.756
b_waiting        -0.007548    0.001075      -7.022    0.001083        -6.971
b_discount        0.003827    0.001236       3.095    0.001285         2.979
b_compensation    0.091037    0.046713       1.949    0.045778         1.989
b_price          -0.010217  9.6033e-04     -10.639    0.001081        -9.450


Overview of choices for MNL model component :
                                    alt1    alt2
Times available                  1120.00 1120.00
Times chosen                      601.00  519.00
Percentage chosen overall          53.66   46.34
Percentage chosen when available   53.66   46.34



Classical covariance matrix:
                    b_spatial     b_temporal   b_drtpattern      b_waiting     b_discount b_compensation
b_spatial           1.613e-05      8.544e-06      2.526e-05     -7.487e-07      3.576e-07      7.945e-06
b_temporal          8.544e-06     1.2908e-04      6.319e-05     -4.445e-06      3.382e-06      8.065e-05
b_drtpattern        2.526e-05      6.319e-05       0.004119     -2.308e-06      3.336e-06     -1.780e-06
b_waiting          -7.487e-07     -4.445e-06     -2.308e-06      1.155e-06     -3.400e-07     -7.651e-06
b_discount          3.576e-07      3.382e-06      3.336e-06     -3.400e-07      1.529e-06      4.937e-06
b_compensation      7.945e-06      8.065e-05     -1.780e-06     -7.651e-06      4.937e-06       0.002182
b_price            -1.196e-06     -6.755e-06     -5.037e-06      6.287e-07     -4.231e-07     -1.229e-05
                      b_price
b_spatial          -1.196e-06
b_temporal         -6.755e-06
b_drtpattern       -5.037e-06
b_waiting           6.287e-07
b_discount         -4.231e-07
b_compensation     -1.229e-05
b_price             9.222e-07

Robust covariance matrix:
                    b_spatial     b_temporal   b_drtpattern      b_waiting     b_discount b_compensation
b_spatial           1.609e-05      7.755e-06      1.100e-05     -8.548e-07      7.182e-07      5.422e-06
b_temporal          7.755e-06     1.4580e-04      6.174e-05     -3.289e-06      3.653e-06     1.2214e-04
b_drtpattern        1.100e-05      6.174e-05       0.004993      2.232e-06      8.334e-06      3.433e-05
b_waiting          -8.548e-07     -3.289e-06      2.232e-06      1.172e-06     -5.613e-07     -8.188e-06
b_discount          7.182e-07      3.653e-06      8.334e-06     -5.613e-07      1.650e-06      2.328e-06
b_compensation      5.422e-06     1.2214e-04      3.433e-05     -8.188e-06      2.328e-06       0.002096
b_price            -1.571e-06     -6.510e-06      8.307e-07      6.116e-07     -5.471e-07     -1.437e-05
                      b_price
b_spatial          -1.571e-06
b_temporal         -6.510e-06
b_drtpattern        8.307e-07
b_waiting           6.116e-07
b_discount         -5.471e-07
b_compensation     -1.437e-05
b_price             1.169e-06

Classical correlation matrix:
                    b_spatial     b_temporal   b_drtpattern      b_waiting     b_discount b_compensation
b_spatial             1.00000        0.18726        0.09802       -0.17344        0.07202        0.04235
b_temporal            0.18726        1.00000        0.08666       -0.36401        0.24080        0.15197
b_drtpattern          0.09802        0.08666        1.00000       -0.03346        0.04204    -5.9378e-04
b_waiting            -0.17344       -0.36401       -0.03346        1.00000       -0.25583       -0.15238
b_discount            0.07202        0.24080        0.04204       -0.25583        1.00000        0.08549
b_compensation        0.04235        0.15197    -5.9378e-04       -0.15238        0.08549        1.00000
b_price              -0.31004       -0.61914       -0.08173        0.60903       -0.35637       -0.27392
                      b_price
b_spatial            -0.31004
b_temporal           -0.61914
b_drtpattern         -0.08173
b_waiting             0.60903
b_discount           -0.35637
b_compensation       -0.27392
b_price               1.00000

Robust correlation matrix:
                    b_spatial     b_temporal   b_drtpattern      b_waiting     b_discount b_compensation
b_spatial             1.00000        0.16011        0.03879       -0.19684        0.13939        0.02953
b_temporal            0.16011        1.00000        0.07236       -0.25159        0.23549        0.22097
b_drtpattern          0.03879        0.07236        1.00000        0.02918        0.09180        0.01061
b_waiting            -0.19684       -0.25159        0.02918        1.00000       -0.40357       -0.16521
b_discount            0.13939        0.23549        0.09180       -0.40357        1.00000        0.03958
b_compensation        0.02953        0.22097        0.01061       -0.16521        0.03958        1.00000
b_price              -0.36224       -0.49867        0.01087        0.52248       -0.39392       -0.29028
                      b_price
b_spatial            -0.36224
b_temporal           -0.49867
b_drtpattern          0.01087
b_waiting             0.52248
b_discount           -0.39392
b_compensation       -0.29028
b_price               1.00000

 20 worst outliers in terms of lowest average per choice prediction:
   ID Avg prob per choice
 1540           0.3313274
 1572           0.3415443
 1616           0.3431730
 1710           0.3516012
 2314           0.3530346
 2330           0.3574001
 2027           0.3724181
 2795           0.3731091
 2529           0.3751278
 2438           0.3785141
 2899           0.3859748
 1799           0.3865675
 2344           0.3921520
 2917           0.3957390
 2011           0.4063189
 2193           0.4071647
 2263           0.4083656
 2590           0.4104073
 2394           0.4117038
 2002           0.4146766

Changes in parameter estimates from starting values:
                   Initial    Estimate  Difference
b_spatial            0.000    0.012725    0.012725
b_temporal           0.000    0.079602    0.079602
b_drtpattern         0.000    0.124105    0.124105
b_waiting            0.000   -0.007548   -0.007548
b_discount           0.000    0.003827    0.003827
b_compensation       0.000    0.091037    0.091037
b_price              0.000   -0.010217   -0.010217

Settings and functions used in model definition:

apollo_control
--------------
                       Value                                    
modelName              "MNL_SP"                                 
modelDescr             "Simple MNL model on PT guarantee choice"
indivID                "RID"                                    
outputDirectory        "output/"                                
debug                  "FALSE"                                  
nCores                 "1"                                      
workInLogs             "FALSE"                                  
seed                   "13"                                     
mixing                 "FALSE"                                  
HB                     "FALSE"                                  
noValidation           "FALSE"                                  
noDiagnostics          "FALSE"                                  
calculateLLC           "TRUE"                                   
panelData              "TRUE"                                   
analyticGrad           "TRUE"                                   
analyticGrad_manualSet "FALSE"                                  
overridePanel          "FALSE"                                  
preventOverridePanel   "FALSE"                                  
noModification         "FALSE"                                  

Hessian routines attempted
--------------------------
numerical jacobian of LL analytical gradient

Scaling used in computing Hessian
---------------------------------
                     Value
b_spatial      0.012724877
b_temporal     0.079601998
b_drtpattern   0.124105402
b_waiting      0.007547724
b_discount     0.003826621
b_compensation 0.091036810
b_price        0.010216838


apollo_probabilities
----------------------
function(apollo_beta, apollo_inputs, functionality="estimate"){
  
  ### Attach inputs and detach after function exit
  apollo_attach(apollo_beta, apollo_inputs)
  on.exit(apollo_detach(apollo_beta, apollo_inputs))
  
  ### Create list of probabilities P
  P = list()
  
  ### List of utilities: these must use the same names as in mnl_settings, order is irrelevant
  V = list()
  
  V[["alt1"]]  = b_spatial  * Spatial_1 + b_temporal * Temporal_1 + b_drtpattern * DRTPattern_1 +
    b_waiting * Waitingtime_1 + b_discount * Discount_1 + b_compensation * Compensation_1 + b_price * Price_1
  V[["alt2"]]  = b_spatial  * Spatial_2 + b_temporal * Temporal_2 + b_drtpattern * DRTPattern_2 +
    b_waiting * Waitingtime_2 + b_discount * Discount_2 + b_compensation * Compensation_2 + b_price * Price_2
  
  # V[["alt1"]]  = b_price*(b_spatial  * Spatial_1 + b_temporal * Temporal_1 + b_drtpattern * DRTPattern_1 +
  #   b_waiting * Waitingtime_1 + b_discount * Discount_1 + b_compensation * Compensation_1 + Price_1)
  # V[["alt2"]]  = b_price*(b_spatial  * Spatial_2 + b_temporal * Temporal_2 + b_drtpattern * DRTPattern_2 +
  #   b_waiting * Waitingtime_2 + b_discount * Discount_2 + b_compensation * Compensation_2 + Price_2)
  # 
  
  #  V[["alt1"]]  = asc_1 + b_spatial  * Spatial_1 + b_temporal17 * (Temporal_1==17) +b_temporal24 * (Temporal_1==24) + b_drtpattern * DRTPattern_1 +
  #    b_waiting * Waitingtime_1 + b_discount * Discount_1 + b_comp_improved * (Compensation_1==2) + b_comp_generous * (Compensation_1==3) + b_price * Price_1
  #  V[["alt2"]]  = b_spatial  * Spatial_2 + + b_temporal17 * (Temporal_2==17) +b_temporal24 * (Temporal_2==24) + + b_drtpattern * DRTPattern_2 +
  #    b_waiting * Waitingtime_2 + b_discount * Discount_2 + b_comp_improved * (Compensation_2==2) + b_comp_generous * (Compensation_2==3) + b_price * Price_2
  
  
  ### Define settings for MNL model component
  mnl_settings = list(
    alternatives  = c(alt1=1, alt2=2), 
    avail         = 1, 
    choiceVar     = CHOICE,
    utilities     = V
  )
  
  ### Compute probabilities using MNL model
  P[["model"]] = apollo_mnl(mnl_settings, functionality)
  
  ### Take product across observation for same individual
  P = apollo_panelProd(P, apollo_inputs, functionality)
  
  ### Prepare and return outputs of function
  P = apollo_prepareProb(P, apollo_inputs, functionality)
  return(P)
}
