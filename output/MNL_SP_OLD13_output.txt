Model run by Rowan's PC using Apollo 0.3.1 on R 4.3.1 for Windows.
Please acknowledge the use of Apollo by citing Hess & Palma (2019)
  DOI 10.1016/j.jocm.2019.100170
  www.ApolloChoiceModelling.com

Model name                                  : MNL_SP
Model description                           : Simple MNL model on PT guarantee choice
Model run at                                : 2024-01-09 17:29:46.456155
Estimation method                           : bgw
Model diagnosis                             : Relative function convergence
Optimisation diagnosis                      : Maximum found
     hessian properties                     : Negative definite
     maximum eigenvalue                     : -97.108768
     reciprocal of condition number         : 7.50689e-05
Number of individuals                       : 99
Number of rows in database                  : 495
Number of modelled outcomes                 : 495

Number of cores used                        :  1 
Model without mixing

LL(start)                                   : -343.11
LL at equal shares, LL(0)                   : -343.11
LL at observed shares, LL(C)                : -343.06
LL(final)                                   : -299.43
Rho-squared vs equal shares                  :  0.1273 
Adj.Rho-squared vs equal shares              :  0.1069 
Rho-squared vs observed shares               :  0.1272 
Adj.Rho-squared vs observed shares           :  0.1097 
AIC                                         :  612.87 
BIC                                         :  642.3 

Estimated parameters                        : 7
Time taken (hh:mm:ss)                       :  00:00:1.58 
     pre-estimation                         :  00:00:0.73 
     estimation                             :  00:00:0.43 
          initial estimation                :  00:00:0.4 
          estimation after rescaling        :  00:00:0.03 
     post-estimation                        :  00:00:0.42 
Iterations                                  :  7  
     initial estimation                     :  6 
     estimation after rescaling             :  1 

Unconstrained optimisation.

Estimates:
                  Estimate        s.e.   t.rat.(0)    Rob.s.e. Rob.t.rat.(0)
b_spatial         0.018200    0.006236       2.919    0.006923         2.629
b_temporal        0.105381    0.017654       5.969    0.018075         5.830
b_drtpattern      0.212383    0.101301       2.097    0.104952         2.024
b_waiting        -0.008769    0.001682      -5.212    0.001864        -4.704
b_discount        0.005426    0.001926       2.817    0.001748         3.105
b_compensation    0.123127    0.072896       1.689    0.066533         1.851
b_price          -0.012074    0.001517      -7.961    0.001721        -7.015


Overview of choices for MNL model component :
                                   alt1   alt2
Times available                  495.00 495.00
Times chosen                     251.00 244.00
Percentage chosen overall         50.71  49.29
Percentage chosen when available  50.71  49.29



Classical covariance matrix:
                    b_spatial     b_temporal   b_drtpattern      b_waiting     b_discount b_compensation
b_spatial           3.888e-05      2.213e-05     1.3539e-04     -2.437e-06      1.314e-06      5.447e-06
b_temporal          2.213e-05     3.1166e-04     1.9269e-04     -1.322e-05      7.515e-06     2.3375e-04
b_drtpattern       1.3539e-04     1.9269e-04        0.01026     -9.800e-06      1.949e-05     3.8389e-04
b_waiting          -2.437e-06     -1.322e-05     -9.800e-06      2.830e-06     -7.871e-07     -1.803e-05
b_discount          1.314e-06      7.515e-06      1.949e-05     -7.871e-07      3.711e-06      1.854e-05
b_compensation      5.447e-06     2.3375e-04     3.8389e-04     -1.803e-05      1.854e-05       0.005314
b_price            -2.961e-06     -1.672e-05     -1.303e-05      1.585e-06     -1.092e-06     -3.056e-05
                      b_price
b_spatial          -2.961e-06
b_temporal         -1.672e-05
b_drtpattern       -1.303e-05
b_waiting           1.585e-06
b_discount         -1.092e-06
b_compensation     -3.056e-05
b_price             2.300e-06

Robust covariance matrix:
                    b_spatial     b_temporal   b_drtpattern      b_waiting     b_discount b_compensation
b_spatial           4.793e-05      2.557e-05      5.070e-05     -3.519e-06      2.424e-06     -4.580e-05
b_temporal          2.557e-05     3.2669e-04      7.694e-05     -1.190e-05      1.033e-05      9.460e-05
b_drtpattern        5.070e-05      7.694e-05        0.01102      1.404e-05      1.226e-05    -3.4351e-04
b_waiting          -3.519e-06     -1.190e-05      1.404e-05      3.475e-06     -1.063e-06      8.776e-06
b_discount          2.424e-06      1.033e-05      1.226e-05     -1.063e-06      3.054e-06     -1.097e-05
b_compensation     -4.580e-05      9.460e-05    -3.4351e-04      8.776e-06     -1.097e-05       0.004427
b_price            -3.686e-06     -1.398e-05      2.998e-05      1.708e-06     -1.355e-06     -2.069e-06
                      b_price
b_spatial          -3.686e-06
b_temporal         -1.398e-05
b_drtpattern        2.998e-05
b_waiting           1.708e-06
b_discount         -1.355e-06
b_compensation     -2.069e-06
b_price             2.962e-06

Classical correlation matrix:
                    b_spatial     b_temporal   b_drtpattern      b_waiting     b_discount b_compensation
b_spatial             1.00000         0.2010        0.21433       -0.23233        0.10941        0.01198
b_temporal            0.20104         1.0000        0.10775       -0.44522        0.22099        0.18164
b_drtpattern          0.21433         0.1077        1.00000       -0.05751        0.09990        0.05199
b_waiting            -0.23233        -0.4452       -0.05751        1.00000       -0.24288       -0.14699
b_discount            0.10941         0.2210        0.09990       -0.24288        1.00000        0.13202
b_compensation        0.01198         0.1816        0.05199       -0.14699        0.13202        1.00000
b_price              -0.31313        -0.6245       -0.08483        0.62124       -0.37361       -0.27646
                      b_price
b_spatial            -0.31313
b_temporal           -0.62448
b_drtpattern         -0.08483
b_waiting             0.62124
b_discount           -0.37361
b_compensation       -0.27646
b_price               1.00000

Robust correlation matrix:
                    b_spatial     b_temporal   b_drtpattern      b_waiting     b_discount b_compensation
b_spatial             1.00000        0.20430        0.06977       -0.27267        0.20036       -0.09942
b_temporal            0.20430        1.00000        0.04056       -0.35326        0.32690        0.07867
b_drtpattern          0.06977        0.04056        1.00000        0.07177        0.06684       -0.04919
b_waiting            -0.27267       -0.35326        0.07177        1.00000       -0.32636        0.07076
b_discount            0.20036        0.32690        0.06684       -0.32636        1.00000       -0.09432
b_compensation       -0.09942        0.07867       -0.04919        0.07076       -0.09432        1.00000
b_price              -0.30936       -0.44950        0.16597        0.53217       -0.45062       -0.01807
                      b_price
b_spatial            -0.30936
b_temporal           -0.44950
b_drtpattern          0.16597
b_waiting             0.53217
b_discount           -0.45062
b_compensation       -0.01807
b_price               1.00000

 20 worst outliers in terms of lowest average per choice prediction:
   ID Avg prob per choice
 1616           0.3204197
 1521           0.3299159
 1907           0.3615481
 2795           0.3640165
 2749           0.3749365
 1986           0.3866624
 2691           0.3978199
 2394           0.4043589
 3221           0.4082311
 2590           0.4107771
 2584           0.4113440
 2861           0.4215937
 1927           0.4316485
 1821           0.4322524
 2160           0.4428034
 2120           0.4577131
 2883           0.4705027
 2765           0.4714353
 1985           0.4812242
 2999           0.4866338

Changes in parameter estimates from starting values:
                   Initial    Estimate  Difference
b_spatial            0.000    0.018200    0.018200
b_temporal           0.000    0.105381    0.105381
b_drtpattern         0.000    0.212383    0.212383
b_waiting            0.000   -0.008769   -0.008769
b_discount           0.000    0.005426    0.005426
b_compensation       0.000    0.123127    0.123127
b_price              0.000   -0.012074   -0.012074

Settings and functions used in model definition:

apollo_control
--------------
                       Value                                    
modelName              "MNL_SP"                                 
modelDescr             "Simple MNL model on PT guarantee choice"
indivID                "RID"                                    
outputDirectory        "output/"                                
debug                  "FALSE"                                  
nCores                 "1"                                      
workInLogs             "FALSE"                                  
seed                   "13"                                     
mixing                 "FALSE"                                  
HB                     "FALSE"                                  
noValidation           "FALSE"                                  
noDiagnostics          "FALSE"                                  
calculateLLC           "TRUE"                                   
panelData              "TRUE"                                   
analyticGrad           "TRUE"                                   
analyticGrad_manualSet "FALSE"                                  
overridePanel          "FALSE"                                  
preventOverridePanel   "FALSE"                                  
noModification         "FALSE"                                  

Hessian routines attempted
--------------------------
numerical jacobian of LL analytical gradient

Scaling used in computing Hessian
---------------------------------
                     Value
b_spatial      0.018200371
b_temporal     0.105380832
b_drtpattern   0.212383460
b_waiting      0.008768855
b_discount     0.005426123
b_compensation 0.123127263
b_price        0.012074191


apollo_probabilities
----------------------
function(apollo_beta, apollo_inputs, functionality="estimate"){
  
  ### Attach inputs and detach after function exit
  apollo_attach(apollo_beta, apollo_inputs)
  on.exit(apollo_detach(apollo_beta, apollo_inputs))
  
  ### Create list of probabilities P
  P = list()
  
  ### List of utilities: these must use the same names as in mnl_settings, order is irrelevant
  V = list()
  
  V[["alt1"]]  = b_spatial  * Spatial_1 + b_temporal * Temporal_1 + b_drtpattern * DRTPattern_1 +
    b_waiting * Waitingtime_1 + b_discount * Discount_1 + b_compensation * Compensation_1 + b_price * Price_1
  V[["alt2"]]  = b_spatial  * Spatial_2 + b_temporal * Temporal_2 + b_drtpattern * DRTPattern_2 +
    b_waiting * Waitingtime_2 + b_discount * Discount_2 + b_compensation * Compensation_2 + b_price * Price_2
  
  # V[["alt1"]]  = b_price*(b_spatial  * Spatial_1 + b_temporal * Temporal_1 + b_drtpattern * DRTPattern_1 +
  #   b_waiting * Waitingtime_1 + b_discount * Discount_1 + b_compensation * Compensation_1 + Price_1)
  # V[["alt2"]]  = b_price*(b_spatial  * Spatial_2 + b_temporal * Temporal_2 + b_drtpattern * DRTPattern_2 +
  #   b_waiting * Waitingtime_2 + b_discount * Discount_2 + b_compensation * Compensation_2 + Price_2)
  # 
  
  #  V[["alt1"]]  = asc_1 + b_spatial  * Spatial_1 + b_temporal17 * (Temporal_1==17) +b_temporal24 * (Temporal_1==24) + b_drtpattern * DRTPattern_1 +
  #    b_waiting * Waitingtime_1 + b_discount * Discount_1 + b_comp_improved * (Compensation_1==2) + b_comp_generous * (Compensation_1==3) + b_price * Price_1
  #  V[["alt2"]]  = b_spatial  * Spatial_2 + + b_temporal17 * (Temporal_2==17) +b_temporal24 * (Temporal_2==24) + + b_drtpattern * DRTPattern_2 +
  #    b_waiting * Waitingtime_2 + b_discount * Discount_2 + b_comp_improved * (Compensation_2==2) + b_comp_generous * (Compensation_2==3) + b_price * Price_2
  
  
  ### Define settings for MNL model component
  mnl_settings = list(
    alternatives  = c(alt1=1, alt2=2), 
    avail         = 1, 
    choiceVar     = CHOICE,
    utilities     = V
  )
  
  ### Compute probabilities using MNL model
  P[["model"]] = apollo_mnl(mnl_settings, functionality)
  
  ### Take product across observation for same individual
  P = apollo_panelProd(P, apollo_inputs, functionality)
  
  ### Prepare and return outputs of function
  P = apollo_prepareProb(P, apollo_inputs, functionality)
  return(P)
}
