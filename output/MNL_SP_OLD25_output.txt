Model run by Rowan's PC using Apollo 0.3.1 on R 4.3.1 for Windows.
Please acknowledge the use of Apollo by citing Hess & Palma (2019)
  DOI 10.1016/j.jocm.2019.100170
  www.ApolloChoiceModelling.com

Model name                                  : MNL_SP
Model description                           : Simple MNL model on PT guarantee choice
Model run at                                : 2024-01-09 17:58:14.872235
Estimation method                           : bgw
Model diagnosis                             : Relative function convergence
Optimisation diagnosis                      : Maximum found
     hessian properties                     : Negative definite
     maximum eigenvalue                     : -175.778359
     reciprocal of condition number         : 7.16644e-05
Number of individuals                       : 164
Number of rows in database                  : 820
Number of modelled outcomes                 : 820

Number of cores used                        :  1 
Model without mixing

LL(start)                                   : -568.38
LL at equal shares, LL(0)                   : -568.38
LL at observed shares, LL(C)                : -568.18
LL(final)                                   : -518.05
Rho-squared vs equal shares                  :  0.0885 
Adj.Rho-squared vs equal shares              :  0.0762 
Rho-squared vs observed shares               :  0.0882 
Adj.Rho-squared vs observed shares           :  0.0777 
AIC                                         :  1050.11 
BIC                                         :  1083.07 

Estimated parameters                        : 7
Time taken (hh:mm:ss)                       :  00:00:1.69 
     pre-estimation                         :  00:00:0.53 
     estimation                             :  00:00:0.71 
          initial estimation                :  00:00:0.68 
          estimation after rescaling        :  00:00:0.03 
     post-estimation                        :  00:00:0.46 
Iterations                                  :  8  
     initial estimation                     :  7 
     estimation after rescaling             :  1 

Unconstrained optimisation.

Estimates:
                  Estimate        s.e.   t.rat.(0)    Rob.s.e. Rob.t.rat.(0)
b_spatial         0.016701    0.004721      3.5376    0.004861        3.4358
b_temporal        0.062725    0.012741      4.9231    0.012900        4.8624
b_drtpattern      0.126567    0.075413      1.6783    0.078873        1.6047
b_waiting        -0.007846    0.001258     -6.2360    0.001389       -5.6509
b_discount        0.005460    0.001452      3.7611    0.001415        3.8589
b_compensation    0.026402    0.053387      0.4945    0.050817        0.5196
b_price          -0.010105    0.001133     -8.9160    0.001315       -7.6847


Overview of choices for MNL model component :
                                  alt1  alt2
Times available                  820.0 820.0
Times chosen                     419.0 401.0
Percentage chosen overall         51.1  48.9
Percentage chosen when available  51.1  48.9



Classical covariance matrix:
                    b_spatial     b_temporal   b_drtpattern      b_waiting     b_discount b_compensation
b_spatial           2.229e-05      1.378e-05      5.029e-05     -8.754e-07      1.007e-06      5.891e-06
b_temporal          1.378e-05     1.6233e-04      8.712e-05     -5.212e-06      4.365e-06      8.906e-05
b_drtpattern        5.029e-05      8.712e-05       0.005687     -4.947e-06      9.142e-06      4.258e-06
b_waiting          -8.754e-07     -5.212e-06     -4.947e-06      1.583e-06     -3.287e-07     -6.865e-06
b_discount          1.007e-06      4.365e-06      9.142e-06     -3.287e-07      2.108e-06      1.016e-05
b_compensation      5.891e-06      8.906e-05      4.258e-06     -6.865e-06      1.016e-05       0.002850
b_price            -1.902e-06     -8.339e-06     -1.117e-05      8.696e-07     -6.048e-07     -1.215e-05
                      b_price
b_spatial          -1.902e-06
b_temporal         -8.339e-06
b_drtpattern       -1.117e-05
b_waiting           8.696e-07
b_discount         -6.048e-07
b_compensation     -1.215e-05
b_price             1.285e-06

Robust covariance matrix:
                    b_spatial     b_temporal   b_drtpattern      b_waiting     b_discount b_compensation
b_spatial           2.363e-05      1.768e-05      8.183e-05     -1.410e-06      1.318e-06      6.742e-06
b_temporal          1.768e-05     1.6641e-04      8.033e-05     -4.545e-06      5.808e-06      9.102e-05
b_drtpattern        8.183e-05      8.033e-05       0.006221     -2.970e-06      1.407e-05      5.886e-05
b_waiting          -1.410e-06     -4.545e-06     -2.970e-06      1.928e-06     -4.498e-07     -7.138e-06
b_discount          1.318e-06      5.808e-06      1.407e-05     -4.498e-07      2.002e-06      1.480e-05
b_compensation      6.742e-06      9.102e-05      5.886e-05     -7.138e-06      1.480e-05       0.002582
b_price            -2.798e-06     -8.354e-06     -1.053e-05      9.985e-07     -7.064e-07     -1.340e-05
                      b_price
b_spatial          -2.798e-06
b_temporal         -8.354e-06
b_drtpattern       -1.053e-05
b_waiting           9.985e-07
b_discount         -7.064e-07
b_compensation     -1.340e-05
b_price             1.729e-06

Classical correlation matrix:
                    b_spatial     b_temporal   b_drtpattern      b_waiting     b_discount b_compensation
b_spatial             1.00000        0.22912       0.141257       -0.14738        0.14688       0.023372
b_temporal            0.22912        1.00000       0.090671       -0.32511        0.23601       0.130936
b_drtpattern          0.14126        0.09067       1.000000       -0.05214        0.08350       0.001058
b_waiting            -0.14738       -0.32511      -0.052137        1.00000       -0.17997      -0.102194
b_discount            0.14688        0.23601       0.083502       -0.17997        1.00000       0.131040
b_compensation        0.02337        0.13094       0.001058       -0.10219        0.13104       1.000000
b_price              -0.35538       -0.57745      -0.130670        0.60982       -0.36757      -0.200750
                      b_price
b_spatial             -0.3554
b_temporal            -0.5774
b_drtpattern          -0.1307
b_waiting              0.6098
b_discount            -0.3676
b_compensation        -0.2007
b_price                1.0000

Robust correlation matrix:
                    b_spatial     b_temporal   b_drtpattern      b_waiting     b_discount b_compensation
b_spatial             1.00000        0.28197        0.21344       -0.20898         0.1917        0.02729
b_temporal            0.28197        1.00000        0.07895       -0.25377         0.3182        0.13886
b_drtpattern          0.21344        0.07895        1.00000       -0.02712         0.1261        0.01468
b_waiting            -0.20898       -0.25377       -0.02712        1.00000        -0.2289       -0.10116
b_discount            0.19167        0.31817        0.12605       -0.22895         1.0000        0.20580
b_compensation        0.02729        0.13886        0.01468       -0.10116         0.2058        1.00000
b_price              -0.43769       -0.49247       -0.10153        0.54685        -0.3796       -0.20054
                      b_price
b_spatial             -0.4377
b_temporal            -0.4925
b_drtpattern          -0.1015
b_waiting              0.5468
b_discount            -0.3796
b_compensation        -0.2005
b_price                1.0000

 20 worst outliers in terms of lowest average per choice prediction:
   ID Avg prob per choice
 1540           0.3174921
 1496           0.3209933
 1572           0.3463490
 1521           0.3501852
 2322           0.3551957
 2314           0.3776204
 2736           0.3789281
 2899           0.3863942
 2749           0.3885013
 1901           0.3904823
 2027           0.3928094
 2584           0.4017854
 2950           0.4021003
 3025           0.4069569
 3243           0.4224141
 2186           0.4242289
 2635           0.4245314
 2458           0.4269824
 2676           0.4283710
 2481           0.4297085

Changes in parameter estimates from starting values:
                   Initial    Estimate  Difference
b_spatial            0.000    0.016701    0.016701
b_temporal           0.000    0.062725    0.062725
b_drtpattern         0.000    0.126567    0.126567
b_waiting            0.000   -0.007846   -0.007846
b_discount           0.000    0.005460    0.005460
b_compensation       0.000    0.026402    0.026402
b_price              0.000   -0.010105   -0.010105

Settings and functions used in model definition:

apollo_control
--------------
                       Value                                    
modelName              "MNL_SP"                                 
modelDescr             "Simple MNL model on PT guarantee choice"
indivID                "RID"                                    
outputDirectory        "output/"                                
debug                  "FALSE"                                  
nCores                 "1"                                      
workInLogs             "FALSE"                                  
seed                   "13"                                     
mixing                 "FALSE"                                  
HB                     "FALSE"                                  
noValidation           "FALSE"                                  
noDiagnostics          "FALSE"                                  
calculateLLC           "TRUE"                                   
panelData              "TRUE"                                   
analyticGrad           "TRUE"                                   
analyticGrad_manualSet "FALSE"                                  
overridePanel          "FALSE"                                  
preventOverridePanel   "FALSE"                                  
noModification         "FALSE"                                  

Hessian routines attempted
--------------------------
numerical jacobian of LL analytical gradient

Scaling used in computing Hessian
---------------------------------
                     Value
b_spatial      0.016701024
b_temporal     0.062724572
b_drtpattern   0.126566643
b_waiting      0.007846330
b_discount     0.005460199
b_compensation 0.026402133
b_price        0.010105270


apollo_probabilities
----------------------
function(apollo_beta, apollo_inputs, functionality="estimate"){
  
  ### Attach inputs and detach after function exit
  apollo_attach(apollo_beta, apollo_inputs)
  on.exit(apollo_detach(apollo_beta, apollo_inputs))
  
  ### Create list of probabilities P
  P = list()
  
  ### List of utilities: these must use the same names as in mnl_settings, order is irrelevant
  V = list()
  
  V[["alt1"]]  = b_spatial  * Spatial_1 + b_temporal * Temporal_1 + b_drtpattern * DRTPattern_1 +
    b_waiting * Waitingtime_1 + b_discount * Discount_1 + b_compensation * Compensation_1 + b_price * Price_1
  V[["alt2"]]  = b_spatial  * Spatial_2 + b_temporal * Temporal_2 + b_drtpattern * DRTPattern_2 +
    b_waiting * Waitingtime_2 + b_discount * Discount_2 + b_compensation * Compensation_2 + b_price * Price_2
  
  # V[["alt1"]]  = b_price*(b_spatial  * Spatial_1 + b_temporal * Temporal_1 + b_drtpattern * DRTPattern_1 +
  #   b_waiting * Waitingtime_1 + b_discount * Discount_1 + b_compensation * Compensation_1 + Price_1)
  # V[["alt2"]]  = b_price*(b_spatial  * Spatial_2 + b_temporal * Temporal_2 + b_drtpattern * DRTPattern_2 +
  #   b_waiting * Waitingtime_2 + b_discount * Discount_2 + b_compensation * Compensation_2 + Price_2)
  # 
  
  #  V[["alt1"]]  = asc_1 + b_spatial  * Spatial_1 + b_temporal17 * (Temporal_1==17) +b_temporal24 * (Temporal_1==24) + b_drtpattern * DRTPattern_1 +
  #    b_waiting * Waitingtime_1 + b_discount * Discount_1 + b_comp_improved * (Compensation_1==2) + b_comp_generous * (Compensation_1==3) + b_price * Price_1
  #  V[["alt2"]]  = b_spatial  * Spatial_2 + + b_temporal17 * (Temporal_2==17) +b_temporal24 * (Temporal_2==24) + + b_drtpattern * DRTPattern_2 +
  #    b_waiting * Waitingtime_2 + b_discount * Discount_2 + b_comp_improved * (Compensation_2==2) + b_comp_generous * (Compensation_2==3) + b_price * Price_2
  
  
  ### Define settings for MNL model component
  mnl_settings = list(
    alternatives  = c(alt1=1, alt2=2), 
    avail         = 1, 
    choiceVar     = CHOICE,
    utilities     = V
  )
  
  ### Compute probabilities using MNL model
  P[["model"]] = apollo_mnl(mnl_settings, functionality)
  
  ### Take product across observation for same individual
  P = apollo_panelProd(P, apollo_inputs, functionality)
  
  ### Prepare and return outputs of function
  P = apollo_prepareProb(P, apollo_inputs, functionality)
  return(P)
}
