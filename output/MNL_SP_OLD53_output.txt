Model run by Rowan's PC using Apollo 0.3.1 on R 4.3.1 for Windows.
Please acknowledge the use of Apollo by citing Hess & Palma (2019)
  DOI 10.1016/j.jocm.2019.100170
  www.ApolloChoiceModelling.com

Model name                                  : MNL_SP
Model description                           : Simple MNL model on PT guarantee choice
Model run at                                : 2024-01-09 21:06:06.94264
Estimation method                           : bgw
Model diagnosis                             : Relative function convergence
Optimisation diagnosis                      : Maximum found
     hessian properties                     : Negative definite
     maximum eigenvalue                     : -237.40893
     reciprocal of condition number         : 7.42651e-05
Number of individuals                       : 217
Number of rows in database                  : 1085
Number of modelled outcomes                 : 1085

Number of cores used                        :  1 
Model without mixing

LL(start)                                   : -752.06
LL at equal shares, LL(0)                   : -752.06
LL at observed shares, LL(C)                : -749.04
LL(final)                                   : -687.64
Rho-squared vs equal shares                  :  0.0857 
Adj.Rho-squared vs equal shares              :  0.0764 
Rho-squared vs observed shares               :  0.082 
Adj.Rho-squared vs observed shares           :  0.074 
AIC                                         :  1389.28 
BIC                                         :  1424.21 

Estimated parameters                        : 7
Time taken (hh:mm:ss)                       :  00:00:1.47 
     pre-estimation                         :  00:00:0.7 
     estimation                             :  00:00:0.2 
          initial estimation                :  00:00:0.16 
          estimation after rescaling        :  00:00:0.04 
     post-estimation                        :  00:00:0.58 
Iterations                                  :  7  
     initial estimation                     :  6 
     estimation after rescaling             :  1 

Unconstrained optimisation.

Estimates:
                  Estimate        s.e.   t.rat.(0)    Rob.s.e. Rob.t.rat.(0)
b_spatial         0.013921    0.004098       3.397    0.004258         3.269
b_temporal        0.071917    0.011159       6.445    0.011534         6.235
b_drtpattern      0.097344    0.064895       1.500    0.069605         1.399
b_waiting        -0.005439    0.001075      -5.061    0.001117        -4.867
b_discount        0.001991    0.001247       1.597    0.001156         1.722
b_compensation    0.079100    0.047173       1.677    0.043836         1.804
b_price          -0.009503  9.3954e-04     -10.114    0.001073        -8.854


Overview of choices for MNL model component :
                                    alt1    alt2
Times available                  1085.00 1085.00
Times chosen                      583.00  502.00
Percentage chosen overall          53.73   46.27
Percentage chosen when available   53.73   46.27



Classical covariance matrix:
                    b_spatial     b_temporal   b_drtpattern      b_waiting     b_discount b_compensation
b_spatial           1.679e-05      8.426e-06      2.314e-05     -6.982e-07      3.906e-07      8.390e-06
b_temporal          8.426e-06     1.2452e-04      5.102e-05     -4.301e-06      3.109e-06      7.855e-05
b_drtpattern        2.314e-05      5.102e-05       0.004211     -1.482e-06      5.054e-06      1.054e-05
b_waiting          -6.982e-07     -4.301e-06     -1.482e-06      1.155e-06     -2.546e-07     -7.014e-06
b_discount          3.906e-07      3.109e-06      5.054e-06     -2.546e-07      1.555e-06      6.314e-06
b_compensation      8.390e-06      7.855e-05      1.054e-05     -7.014e-06      6.314e-06       0.002225
b_price            -1.214e-06     -6.250e-06     -3.234e-06      5.943e-07     -4.003e-07     -1.041e-05
                      b_price
b_spatial          -1.214e-06
b_temporal         -6.250e-06
b_drtpattern       -3.234e-06
b_waiting           5.943e-07
b_discount         -4.003e-07
b_compensation     -1.041e-05
b_price             8.827e-07

Robust covariance matrix:
                    b_spatial     b_temporal   b_drtpattern      b_waiting     b_discount b_compensation
b_spatial           1.813e-05      8.923e-06      2.184e-05     -9.776e-07      5.651e-07      4.025e-06
b_temporal          8.923e-06     1.3304e-04      3.384e-05     -2.733e-06      2.698e-06      7.035e-05
b_drtpattern        2.184e-05      3.384e-05       0.004845     -6.349e-06      1.358e-05      3.031e-05
b_waiting          -9.776e-07     -2.733e-06     -6.349e-06      1.249e-06     -3.477e-07     -2.575e-06
b_discount          5.651e-07      2.698e-06      1.358e-05     -3.477e-07      1.337e-06      2.841e-06
b_compensation      4.025e-06      7.035e-05      3.031e-05     -2.575e-06      2.841e-06       0.001922
b_price            -1.613e-06     -5.336e-06     -8.456e-07      5.550e-07     -4.223e-07     -7.313e-06
                      b_price
b_spatial          -1.613e-06
b_temporal         -5.336e-06
b_drtpattern       -8.456e-07
b_waiting           5.550e-07
b_discount         -4.223e-07
b_compensation     -7.313e-06
b_price             1.152e-06

Classical correlation matrix:
                    b_spatial     b_temporal   b_drtpattern      b_waiting     b_discount b_compensation
b_spatial             1.00000        0.18426       0.087021       -0.15852        0.07645       0.043399
b_temporal            0.18426        1.00000       0.070460       -0.35861        0.22346       0.149224
b_drtpattern          0.08702        0.07046       1.000000       -0.02125        0.06246       0.003442
b_waiting            -0.15852       -0.35861      -0.021251        1.00000       -0.19000      -0.138341
b_discount            0.07645        0.22346       0.062462       -0.19000        1.00000       0.107344
b_compensation        0.04340        0.14922       0.003442       -0.13834        0.10734       1.000000
b_price              -0.31520       -0.59614      -0.053035        0.58859       -0.34169      -0.234841
                      b_price
b_spatial            -0.31520
b_temporal           -0.59614
b_drtpattern         -0.05304
b_waiting             0.58859
b_discount           -0.34169
b_compensation       -0.23484
b_price               1.00000

Robust correlation matrix:
                    b_spatial     b_temporal   b_drtpattern      b_waiting     b_discount b_compensation
b_spatial             1.00000        0.18168       0.073687       -0.20545        0.11477       0.021566
b_temporal            0.18168        1.00000       0.042145       -0.21200        0.20231       0.139128
b_drtpattern          0.07369        0.04215       1.000000       -0.08163        0.16869       0.009935
b_waiting            -0.20545       -0.21200      -0.081630        1.00000       -0.26904      -0.052566
b_discount            0.11477        0.20231       0.168689       -0.26904        1.00000       0.056050
b_compensation        0.02157        0.13913       0.009935       -0.05257        0.05605       1.000000
b_price              -0.35306       -0.43103      -0.011319        0.46277       -0.34025      -0.155450
                      b_price
b_spatial            -0.35306
b_temporal           -0.43103
b_drtpattern         -0.01132
b_waiting             0.46277
b_discount           -0.34025
b_compensation       -0.15545
b_price               1.00000

 20 worst outliers in terms of lowest average per choice prediction:
   ID Avg prob per choice
 1540           0.3334930
 2322           0.3353680
 1616           0.3389775
 2314           0.3565952
 1710           0.3604701
 2330           0.3751598
 2438           0.3768470
 2749           0.3801733
 2795           0.3811775
 2027           0.3832320
 2708           0.3847710
 2590           0.3909787
 1901           0.3932800
 2950           0.3966338
 1799           0.3978265
 2691           0.3997602
 1521           0.3997663
 1529           0.4023677
 2193           0.4035198
 2364           0.4067980

Changes in parameter estimates from starting values:
                   Initial    Estimate  Difference
b_spatial            0.000    0.013921    0.013921
b_temporal           0.000    0.071917    0.071917
b_drtpattern         0.000    0.097344    0.097344
b_waiting            0.000   -0.005439   -0.005439
b_discount           0.000    0.001991    0.001991
b_compensation       0.000    0.079100    0.079100
b_price              0.000   -0.009503   -0.009503

Settings and functions used in model definition:

apollo_control
--------------
                       Value                                    
modelName              "MNL_SP"                                 
modelDescr             "Simple MNL model on PT guarantee choice"
indivID                "RID"                                    
outputDirectory        "output/"                                
debug                  "FALSE"                                  
nCores                 "1"                                      
workInLogs             "FALSE"                                  
seed                   "13"                                     
mixing                 "FALSE"                                  
HB                     "FALSE"                                  
noValidation           "FALSE"                                  
noDiagnostics          "FALSE"                                  
calculateLLC           "TRUE"                                   
panelData              "TRUE"                                   
analyticGrad           "TRUE"                                   
analyticGrad_manualSet "FALSE"                                  
overridePanel          "FALSE"                                  
preventOverridePanel   "FALSE"                                  
noModification         "FALSE"                                  

Hessian routines attempted
--------------------------
numerical jacobian of LL analytical gradient

Scaling used in computing Hessian
---------------------------------
                     Value
b_spatial      0.013920816
b_temporal     0.071917286
b_drtpattern   0.097343887
b_waiting      0.005438897
b_discount     0.001991328
b_compensation 0.079099753
b_price        0.009502878


apollo_probabilities
----------------------
function(apollo_beta, apollo_inputs, functionality="estimate"){
  
  ### Attach inputs and detach after function exit
  apollo_attach(apollo_beta, apollo_inputs)
  on.exit(apollo_detach(apollo_beta, apollo_inputs))
  
  ### Create list of probabilities P
  P = list()
  
  ### List of utilities: these must use the same names as in mnl_settings, order is irrelevant
  V = list()
  
  V[["alt1"]]  = b_spatial  * Spatial_1 + b_temporal * Temporal_1 + b_drtpattern * DRTPattern_1 +
    b_waiting * Waitingtime_1 + b_discount * Discount_1 + b_compensation * Compensation_1 + b_price * Price_1
  V[["alt2"]]  = b_spatial  * Spatial_2 + b_temporal * Temporal_2 + b_drtpattern * DRTPattern_2 +
    b_waiting * Waitingtime_2 + b_discount * Discount_2 + b_compensation * Compensation_2 + b_price * Price_2
  
  # V[["alt1"]]  = b_price*(b_spatial  * Spatial_1 + b_temporal * Temporal_1 + b_drtpattern * DRTPattern_1 +
  #   b_waiting * Waitingtime_1 + b_discount * Discount_1 + b_compensation * Compensation_1 + Price_1)
  # V[["alt2"]]  = b_price*(b_spatial  * Spatial_2 + b_temporal * Temporal_2 + b_drtpattern * DRTPattern_2 +
  #   b_waiting * Waitingtime_2 + b_discount * Discount_2 + b_compensation * Compensation_2 + Price_2)
  # 
  
  #  V[["alt1"]]  = asc_1 + b_spatial  * Spatial_1 + b_temporal17 * (Temporal_1==17) +b_temporal24 * (Temporal_1==24) + b_drtpattern * DRTPattern_1 +
  #    b_waiting * Waitingtime_1 + b_discount * Discount_1 + b_comp_improved * (Compensation_1==2) + b_comp_generous * (Compensation_1==3) + b_price * Price_1
  #  V[["alt2"]]  = b_spatial  * Spatial_2 + + b_temporal17 * (Temporal_2==17) +b_temporal24 * (Temporal_2==24) + + b_drtpattern * DRTPattern_2 +
  #    b_waiting * Waitingtime_2 + b_discount * Discount_2 + b_comp_improved * (Compensation_2==2) + b_comp_generous * (Compensation_2==3) + b_price * Price_2
  
  
  ### Define settings for MNL model component
  mnl_settings = list(
    alternatives  = c(alt1=1, alt2=2), 
    avail         = 1, 
    choiceVar     = CHOICE,
    utilities     = V
  )
  
  ### Compute probabilities using MNL model
  P[["model"]] = apollo_mnl(mnl_settings, functionality)
  
  ### Take product across observation for same individual
  P = apollo_panelProd(P, apollo_inputs, functionality)
  
  ### Prepare and return outputs of function
  P = apollo_prepareProb(P, apollo_inputs, functionality)
  return(P)
}
