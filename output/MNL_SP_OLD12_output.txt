Model run by Rowan's PC using Apollo 0.3.1 on R 4.3.1 for Windows.
Please acknowledge the use of Apollo by citing Hess & Palma (2019)
  DOI 10.1016/j.jocm.2019.100170
  www.ApolloChoiceModelling.com

Model name                                  : MNL_SP
Model description                           : Simple MNL model on PT guarantee choice
Model run at                                : 2024-01-09 17:26:36.831496
Estimation method                           : bgw
Model diagnosis                             : Relative function convergence
Optimisation diagnosis                      : Maximum found
     hessian properties                     : Negative definite
     maximum eigenvalue                     : -206.219349
     reciprocal of condition number         : 7.37756e-05
Number of individuals                       : 189
Number of rows in database                  : 945
Number of modelled outcomes                 : 945

Number of cores used                        :  1 
Model without mixing

LL(start)                                   : -655.02
LL at equal shares, LL(0)                   : -655.02
LL at observed shares, LL(C)                : -652.5
LL(final)                                   : -601.36
Rho-squared vs equal shares                  :  0.0819 
Adj.Rho-squared vs equal shares              :  0.0712 
Rho-squared vs observed shares               :  0.0784 
Adj.Rho-squared vs observed shares           :  0.0692 
AIC                                         :  1216.71 
BIC                                         :  1250.67 

Estimated parameters                        : 7
Time taken (hh:mm:ss)                       :  00:00:1.49 
     pre-estimation                         :  00:00:0.48 
     estimation                             :  00:00:0.55 
          initial estimation                :  00:00:0.52 
          estimation after rescaling        :  00:00:0.03 
     post-estimation                        :  00:00:0.46 
Iterations                                  :  7  
     initial estimation                     :  6 
     estimation after rescaling             :  1 

Unconstrained optimisation.

Estimates:
                  Estimate        s.e.   t.rat.(0)    Rob.s.e. Rob.t.rat.(0)
b_spatial         0.020167    0.004403       4.581    0.004598         4.386
b_temporal        0.078766    0.012408       6.348    0.012001         6.563
b_drtpattern      0.132196    0.069612       1.899    0.072314         1.828
b_waiting        -0.007459    0.001170      -6.373    0.001257        -5.933
b_discount        0.002217    0.001313       1.689    0.001324         1.674
b_compensation    0.073253    0.050644       1.446    0.045750         1.601
b_price          -0.009787    0.001077      -9.089    0.001225        -7.987


Overview of choices for MNL model component :
                                   alt1   alt2
Times available                  945.00 945.00
Times chosen                     507.00 438.00
Percentage chosen overall         53.65  46.35
Percentage chosen when available  53.65  46.35



Classical covariance matrix:
                    b_spatial     b_temporal   b_drtpattern      b_waiting     b_discount b_compensation
b_spatial           1.938e-05      1.220e-05      4.012e-05     -1.014e-06      4.702e-07      1.703e-05
b_temporal          1.220e-05     1.5395e-04      6.844e-05     -5.544e-06      3.574e-06     1.2220e-04
b_drtpattern        4.012e-05      6.844e-05       0.004846     -1.892e-06      1.778e-07      6.708e-05
b_waiting          -1.014e-06     -5.544e-06     -1.892e-06      1.370e-06     -3.410e-07     -9.160e-06
b_discount          4.702e-07      3.574e-06      1.778e-07     -3.410e-07      1.725e-06      7.997e-06
b_compensation      1.703e-05     1.2220e-04      6.708e-05     -9.160e-06      7.997e-06       0.002565
b_price            -1.603e-06     -8.411e-06     -4.774e-06      7.822e-07     -5.104e-07     -1.512e-05
                      b_price
b_spatial          -1.603e-06
b_temporal         -8.411e-06
b_drtpattern       -4.774e-06
b_waiting           7.822e-07
b_discount         -5.104e-07
b_compensation     -1.512e-05
b_price             1.160e-06

Robust covariance matrix:
                    b_spatial     b_temporal   b_drtpattern      b_waiting     b_discount b_compensation
b_spatial           2.114e-05      1.432e-05      4.287e-05     -1.389e-06      1.336e-06      2.366e-05
b_temporal          1.432e-05     1.4402e-04     1.0390e-04     -3.397e-06      4.591e-06     1.3655e-04
b_drtpattern        4.287e-05     1.0390e-04       0.005229     -1.367e-06      3.531e-06     1.3216e-04
b_waiting          -1.389e-06     -3.397e-06     -1.367e-06      1.580e-06     -5.548e-07     -4.195e-06
b_discount          1.336e-06      4.591e-06      3.531e-06     -5.548e-07      1.754e-06      4.567e-06
b_compensation      2.366e-05     1.3655e-04     1.3216e-04     -4.195e-06      4.567e-06       0.002093
b_price            -2.521e-06     -7.079e-06     -5.822e-06      8.053e-07     -7.127e-07     -1.310e-05
                      b_price
b_spatial          -2.521e-06
b_temporal         -7.079e-06
b_drtpattern       -5.822e-06
b_waiting           8.053e-07
b_discount         -7.127e-07
b_compensation     -1.310e-05
b_price             1.501e-06

Classical correlation matrix:
                    b_spatial     b_temporal   b_drtpattern      b_waiting     b_discount b_compensation
b_spatial             1.00000        0.22340       0.130900       -0.19672       0.081322        0.07636
b_temporal            0.22340        1.00000       0.079243       -0.38178       0.219344        0.19448
b_drtpattern          0.13090        0.07924       1.000000       -0.02322       0.001945        0.01903
b_waiting            -0.19672       -0.38178      -0.023222        1.00000      -0.221838       -0.15454
b_discount            0.08132        0.21934       0.001945       -0.22184       1.000000        0.12024
b_compensation        0.07636        0.19448       0.019027       -0.15454       0.120241        1.00000
b_price              -0.33807       -0.62957      -0.063685        0.62068      -0.360909       -0.27733
                      b_price
b_spatial            -0.33807
b_temporal           -0.62957
b_drtpattern         -0.06369
b_waiting             0.62068
b_discount           -0.36091
b_compensation       -0.27733
b_price               1.00000

Robust correlation matrix:
                    b_spatial     b_temporal   b_drtpattern      b_waiting     b_discount b_compensation
b_spatial              1.0000         0.2595        0.12893       -0.24023        0.21932        0.11247
b_temporal             0.2595         1.0000        0.11973       -0.22516        0.28887        0.24870
b_drtpattern           0.1289         0.1197        1.00000       -0.01503        0.03687        0.03995
b_waiting             -0.2402        -0.2252       -0.01503        1.00000       -0.33321       -0.07294
b_discount             0.2193         0.2889        0.03687       -0.33321        1.00000        0.07537
b_compensation         0.1125         0.2487        0.03995       -0.07294        0.07537        1.00000
b_price               -0.4473        -0.4814       -0.06571        0.52280       -0.43919       -0.23370
                      b_price
b_spatial            -0.44734
b_temporal           -0.48141
b_drtpattern         -0.06571
b_waiting             0.52280
b_discount           -0.43919
b_compensation       -0.23370
b_price               1.00000

 20 worst outliers in terms of lowest average per choice prediction:
   ID Avg prob per choice
 1540           0.3312302
 1572           0.3368585
 2314           0.3519787
 1907           0.3716015
 1529           0.3783676
 2344           0.3873629
 2592           0.3937804
 2170           0.3997128
 1879           0.4021664
 2828           0.4026090
 2584           0.4038937
 1901           0.4049780
 1799           0.4079769
 2691           0.4094695
 2394           0.4144134
 2736           0.4152474
 1986           0.4165839
 2279           0.4176910
 2364           0.4187240
 2054           0.4215979

Changes in parameter estimates from starting values:
                   Initial    Estimate  Difference
b_spatial            0.000    0.020167    0.020167
b_temporal           0.000    0.078766    0.078766
b_drtpattern         0.000    0.132196    0.132196
b_waiting            0.000   -0.007459   -0.007459
b_discount           0.000    0.002217    0.002217
b_compensation       0.000    0.073253    0.073253
b_price              0.000   -0.009787   -0.009787

Settings and functions used in model definition:

apollo_control
--------------
                       Value                                    
modelName              "MNL_SP"                                 
modelDescr             "Simple MNL model on PT guarantee choice"
indivID                "RID"                                    
outputDirectory        "output/"                                
debug                  "FALSE"                                  
nCores                 "1"                                      
workInLogs             "FALSE"                                  
seed                   "13"                                     
mixing                 "FALSE"                                  
HB                     "FALSE"                                  
noValidation           "FALSE"                                  
noDiagnostics          "FALSE"                                  
calculateLLC           "TRUE"                                   
panelData              "TRUE"                                   
analyticGrad           "TRUE"                                   
analyticGrad_manualSet "FALSE"                                  
overridePanel          "FALSE"                                  
preventOverridePanel   "FALSE"                                  
noModification         "FALSE"                                  

Hessian routines attempted
--------------------------
numerical jacobian of LL analytical gradient

Scaling used in computing Hessian
---------------------------------
                     Value
b_spatial      0.020167103
b_temporal     0.078765670
b_drtpattern   0.132196026
b_waiting      0.007458731
b_discount     0.002217418
b_compensation 0.073252788
b_price        0.009786868


apollo_probabilities
----------------------
function(apollo_beta, apollo_inputs, functionality="estimate"){
  
  ### Attach inputs and detach after function exit
  apollo_attach(apollo_beta, apollo_inputs)
  on.exit(apollo_detach(apollo_beta, apollo_inputs))
  
  ### Create list of probabilities P
  P = list()
  
  ### List of utilities: these must use the same names as in mnl_settings, order is irrelevant
  V = list()
  
  V[["alt1"]]  = b_spatial  * Spatial_1 + b_temporal * Temporal_1 + b_drtpattern * DRTPattern_1 +
    b_waiting * Waitingtime_1 + b_discount * Discount_1 + b_compensation * Compensation_1 + b_price * Price_1
  V[["alt2"]]  = b_spatial  * Spatial_2 + b_temporal * Temporal_2 + b_drtpattern * DRTPattern_2 +
    b_waiting * Waitingtime_2 + b_discount * Discount_2 + b_compensation * Compensation_2 + b_price * Price_2
  
  # V[["alt1"]]  = b_price*(b_spatial  * Spatial_1 + b_temporal * Temporal_1 + b_drtpattern * DRTPattern_1 +
  #   b_waiting * Waitingtime_1 + b_discount * Discount_1 + b_compensation * Compensation_1 + Price_1)
  # V[["alt2"]]  = b_price*(b_spatial  * Spatial_2 + b_temporal * Temporal_2 + b_drtpattern * DRTPattern_2 +
  #   b_waiting * Waitingtime_2 + b_discount * Discount_2 + b_compensation * Compensation_2 + Price_2)
  # 
  
  #  V[["alt1"]]  = asc_1 + b_spatial  * Spatial_1 + b_temporal17 * (Temporal_1==17) +b_temporal24 * (Temporal_1==24) + b_drtpattern * DRTPattern_1 +
  #    b_waiting * Waitingtime_1 + b_discount * Discount_1 + b_comp_improved * (Compensation_1==2) + b_comp_generous * (Compensation_1==3) + b_price * Price_1
  #  V[["alt2"]]  = b_spatial  * Spatial_2 + + b_temporal17 * (Temporal_2==17) +b_temporal24 * (Temporal_2==24) + + b_drtpattern * DRTPattern_2 +
  #    b_waiting * Waitingtime_2 + b_discount * Discount_2 + b_comp_improved * (Compensation_2==2) + b_comp_generous * (Compensation_2==3) + b_price * Price_2
  
  
  ### Define settings for MNL model component
  mnl_settings = list(
    alternatives  = c(alt1=1, alt2=2), 
    avail         = 1, 
    choiceVar     = CHOICE,
    utilities     = V
  )
  
  ### Compute probabilities using MNL model
  P[["model"]] = apollo_mnl(mnl_settings, functionality)
  
  ### Take product across observation for same individual
  P = apollo_panelProd(P, apollo_inputs, functionality)
  
  ### Prepare and return outputs of function
  P = apollo_prepareProb(P, apollo_inputs, functionality)
  return(P)
}
