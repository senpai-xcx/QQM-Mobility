Model run by Rowan's PC using Apollo 0.3.1 on R 4.3.1 for Windows.
Please acknowledge the use of Apollo by citing Hess & Palma (2019)
  DOI 10.1016/j.jocm.2019.100170
  www.ApolloChoiceModelling.com

Model name                                  : MNL_SP
Model description                           : Simple MNL model on PT guarantee choice
Model run at                                : 2024-01-09 17:17:50.752
Estimation method                           : bgw
Model diagnosis                             : Relative function convergence
Optimisation diagnosis                      : Maximum found
     hessian properties                     : Negative definite
     maximum eigenvalue                     : -107.63956
     reciprocal of condition number         : 7.3745e-05
Number of individuals                       : 113
Number of rows in database                  : 565
Number of modelled outcomes                 : 565

Number of cores used                        :  1 
Model without mixing

LL(start)                                   : -391.63
LL at equal shares, LL(0)                   : -391.63
LL at observed shares, LL(C)                : -389.5
LL(final)                                   : -335.9
Rho-squared vs equal shares                  :  0.1423 
Adj.Rho-squared vs equal shares              :  0.1244 
Rho-squared vs observed shares               :  0.1376 
Adj.Rho-squared vs observed shares           :  0.1222 
AIC                                         :  685.8 
BIC                                         :  716.16 

Estimated parameters                        : 7
Time taken (hh:mm:ss)                       :  00:00:1.37 
     pre-estimation                         :  00:00:0.54 
     estimation                             :  00:00:0.2 
          initial estimation                :  00:00:0.16 
          estimation after rescaling        :  00:00:0.04 
     post-estimation                        :  00:00:0.63 
Iterations                                  :  8  
     initial estimation                     :  7 
     estimation after rescaling             :  1 

Unconstrained optimisation.

Estimates:
                  Estimate        s.e.   t.rat.(0)    Rob.s.e. Rob.t.rat.(0)
b_spatial         0.019481    0.005927      3.2870    0.006181        3.1519
b_temporal        0.034474    0.015409      2.2373    0.014672        2.3497
b_drtpattern      0.182071    0.095861      1.8993    0.106105        1.7159
b_waiting        -0.005339    0.001576     -3.3884    0.001491       -3.5805
b_discount        0.002499    0.001799      1.3894    0.001784        1.4007
b_compensation    0.041305    0.067945      0.6079    0.065933        0.6265
b_price          -0.012074    0.001446     -8.3513    0.001590       -7.5913


Overview of choices for MNL model component :
                                   alt1   alt2
Times available                  565.00 565.00
Times chosen                     307.00 258.00
Percentage chosen overall         54.34  45.66
Percentage chosen when available  54.34  45.66



Classical covariance matrix:
                    b_spatial     b_temporal   b_drtpattern      b_waiting     b_discount b_compensation
b_spatial           3.513e-05      1.688e-05      8.127e-05     -1.159e-06      1.042e-06      2.389e-05
b_temporal          1.688e-05     2.3743e-04     1.3281e-04     -7.633e-06      5.583e-06     1.0970e-04
b_drtpattern        8.127e-05     1.3281e-04       0.009189     -4.799e-06      1.614e-05     6.7506e-04
b_waiting          -1.159e-06     -7.633e-06     -4.799e-06      2.483e-06     -6.159e-07     -1.550e-05
b_discount          1.042e-06      5.583e-06      1.614e-05     -6.159e-07      3.236e-06      1.918e-05
b_compensation      2.389e-05     1.0970e-04     6.7506e-04     -1.550e-05      1.918e-05       0.004617
b_price            -2.939e-06     -1.169e-05     -2.663e-05      1.388e-06     -8.871e-07     -2.502e-05
                      b_price
b_spatial          -2.939e-06
b_temporal         -1.169e-05
b_drtpattern       -2.663e-05
b_waiting           1.388e-06
b_discount         -8.871e-07
b_compensation     -2.502e-05
b_price             2.090e-06

Robust covariance matrix:
                    b_spatial     b_temporal   b_drtpattern      b_waiting     b_discount b_compensation
b_spatial           3.820e-05      6.319e-06      8.260e-05     -1.683e-06      8.127e-07     -4.976e-06
b_temporal          6.319e-06     2.1526e-04     -1.571e-05     -3.312e-06      3.665e-06      5.999e-05
b_drtpattern        8.260e-05     -1.571e-05        0.01126     -1.519e-05      1.248e-05     6.7976e-04
b_waiting          -1.683e-06     -3.312e-06     -1.519e-05      2.224e-06     -6.662e-07     -1.087e-05
b_discount          8.127e-07      3.665e-06      1.248e-05     -6.662e-07      3.184e-06      9.967e-06
b_compensation     -4.976e-06      5.999e-05     6.7976e-04     -1.087e-05      9.967e-06       0.004347
b_price            -3.470e-06     -7.155e-06     -2.457e-05      9.485e-07     -9.523e-07     -2.219e-05
                      b_price
b_spatial          -3.470e-06
b_temporal         -7.155e-06
b_drtpattern       -2.457e-05
b_waiting           9.485e-07
b_discount         -9.523e-07
b_compensation     -2.219e-05
b_price             2.530e-06

Classical correlation matrix:
                    b_spatial     b_temporal   b_drtpattern      b_waiting     b_discount b_compensation
b_spatial             1.00000        0.18489        0.14304       -0.12412        0.09771        0.05933
b_temporal            0.18489        1.00000        0.08991       -0.31436        0.20143        0.10478
b_drtpattern          0.14304        0.08991        1.00000       -0.03177        0.09358        0.10364
b_waiting            -0.12412       -0.31436       -0.03177        1.00000       -0.21729       -0.14474
b_discount            0.09771        0.20143        0.09358       -0.21729        1.00000        0.15692
b_compensation        0.05933        0.10478        0.10364       -0.14474        0.15692        1.00000
b_price              -0.34298       -0.52471       -0.19214        0.60935       -0.34112       -0.25470
                      b_price
b_spatial             -0.3430
b_temporal            -0.5247
b_drtpattern          -0.1921
b_waiting              0.6093
b_discount            -0.3411
b_compensation        -0.2547
b_price                1.0000

Robust correlation matrix:
                    b_spatial     b_temporal   b_drtpattern      b_waiting     b_discount b_compensation
b_spatial             1.00000        0.06968        0.12595       -0.18261        0.07369       -0.01221
b_temporal            0.06968        1.00000       -0.01009       -0.15139        0.13998        0.06202
b_drtpattern          0.12595       -0.01009        1.00000       -0.09597        0.06593        0.09717
b_waiting            -0.18261       -0.15139       -0.09597        1.00000       -0.25037       -0.11057
b_discount            0.07369        0.13998        0.06593       -0.25037        1.00000        0.08471
b_compensation       -0.01221        0.06202        0.09717       -0.11057        0.08471        1.00000
b_price              -0.35298       -0.30660       -0.14556        0.39992       -0.33554       -0.21161
                      b_price
b_spatial             -0.3530
b_temporal            -0.3066
b_drtpattern          -0.1456
b_waiting              0.3999
b_discount            -0.3355
b_compensation        -0.2116
b_price                1.0000

 20 worst outliers in terms of lowest average per choice prediction:
   ID Avg prob per choice
 1710           0.2352495
 2795           0.2608818
 2950           0.3323451
 2160           0.3459808
 2617           0.3509377
 2458           0.3510220
 3264           0.3592495
 2064           0.3657516
 1809           0.3778057
 2263           0.4027989
 2082           0.4072360
 2216           0.4151590
 2159           0.4226582
 2613           0.4249006
 2014           0.4250602
 1716           0.4309575
 2171           0.4321469
 2918           0.4354895
 2027           0.4420966
 1546           0.4423346

Changes in parameter estimates from starting values:
                   Initial    Estimate  Difference
b_spatial            0.000    0.019481    0.019481
b_temporal           0.000    0.034474    0.034474
b_drtpattern         0.000    0.182071    0.182071
b_waiting            0.000   -0.005339   -0.005339
b_discount           0.000    0.002499    0.002499
b_compensation       0.000    0.041305    0.041305
b_price              0.000   -0.012074   -0.012074

Settings and functions used in model definition:

apollo_control
--------------
                       Value                                    
modelName              "MNL_SP"                                 
modelDescr             "Simple MNL model on PT guarantee choice"
indivID                "RID"                                    
outputDirectory        "output/"                                
debug                  "FALSE"                                  
nCores                 "1"                                      
workInLogs             "FALSE"                                  
seed                   "13"                                     
mixing                 "FALSE"                                  
HB                     "FALSE"                                  
noValidation           "FALSE"                                  
noDiagnostics          "FALSE"                                  
calculateLLC           "TRUE"                                   
panelData              "TRUE"                                   
analyticGrad           "TRUE"                                   
analyticGrad_manualSet "FALSE"                                  
overridePanel          "FALSE"                                  
preventOverridePanel   "FALSE"                                  
noModification         "FALSE"                                  

Hessian routines attempted
--------------------------
numerical jacobian of LL analytical gradient

Scaling used in computing Hessian
---------------------------------
                     Value
b_spatial      0.019480770
b_temporal     0.034473720
b_drtpattern   0.182070511
b_waiting      0.005339229
b_discount     0.002499317
b_compensation 0.041305011
b_price        0.012073851


apollo_probabilities
----------------------
function(apollo_beta, apollo_inputs, functionality="estimate"){
  
  ### Attach inputs and detach after function exit
  apollo_attach(apollo_beta, apollo_inputs)
  on.exit(apollo_detach(apollo_beta, apollo_inputs))
  
  ### Create list of probabilities P
  P = list()
  
  ### List of utilities: these must use the same names as in mnl_settings, order is irrelevant
  V = list()
  
  V[["alt1"]]  = b_spatial  * Spatial_1 + b_temporal * Temporal_1 + b_drtpattern * DRTPattern_1 +
    b_waiting * Waitingtime_1 + b_discount * Discount_1 + b_compensation * Compensation_1 + b_price * Price_1
  V[["alt2"]]  = b_spatial  * Spatial_2 + b_temporal * Temporal_2 + b_drtpattern * DRTPattern_2 +
    b_waiting * Waitingtime_2 + b_discount * Discount_2 + b_compensation * Compensation_2 + b_price * Price_2
  
  # V[["alt1"]]  = b_price*(b_spatial  * Spatial_1 + b_temporal * Temporal_1 + b_drtpattern * DRTPattern_1 +
  #   b_waiting * Waitingtime_1 + b_discount * Discount_1 + b_compensation * Compensation_1 + Price_1)
  # V[["alt2"]]  = b_price*(b_spatial  * Spatial_2 + b_temporal * Temporal_2 + b_drtpattern * DRTPattern_2 +
  #   b_waiting * Waitingtime_2 + b_discount * Discount_2 + b_compensation * Compensation_2 + Price_2)
  # 
  
  #  V[["alt1"]]  = asc_1 + b_spatial  * Spatial_1 + b_temporal17 * (Temporal_1==17) +b_temporal24 * (Temporal_1==24) + b_drtpattern * DRTPattern_1 +
  #    b_waiting * Waitingtime_1 + b_discount * Discount_1 + b_comp_improved * (Compensation_1==2) + b_comp_generous * (Compensation_1==3) + b_price * Price_1
  #  V[["alt2"]]  = b_spatial  * Spatial_2 + + b_temporal17 * (Temporal_2==17) +b_temporal24 * (Temporal_2==24) + + b_drtpattern * DRTPattern_2 +
  #    b_waiting * Waitingtime_2 + b_discount * Discount_2 + b_comp_improved * (Compensation_2==2) + b_comp_generous * (Compensation_2==3) + b_price * Price_2
  
  
  ### Define settings for MNL model component
  mnl_settings = list(
    alternatives  = c(alt1=1, alt2=2), 
    avail         = 1, 
    choiceVar     = CHOICE,
    utilities     = V
  )
  
  ### Compute probabilities using MNL model
  P[["model"]] = apollo_mnl(mnl_settings, functionality)
  
  ### Take product across observation for same individual
  P = apollo_panelProd(P, apollo_inputs, functionality)
  
  ### Prepare and return outputs of function
  P = apollo_prepareProb(P, apollo_inputs, functionality)
  return(P)
}
